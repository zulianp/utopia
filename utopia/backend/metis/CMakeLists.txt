find_package(METIS REQUIRED)

# If METIS FOUND?

if(METIS_FOUND)
set(UTOPIA_WITH_METIS TRUE)
set(UTOPIA_WITH_METIS TRUE PARENT_SCOPE)
list(APPEND UTOPIA_BUILD_INCLUDES ${METIS_INCLUDES})
list(APPEND UTOPIA_DEP_LIBRARIES ${METIS_LIBRARIES})

endif()

list(
    APPEND
    METIS_MODULES
    .
    )


scan_directories(${CMAKE_CURRENT_SOURCE_DIR} "${METIS_MODULES}" UTOPIA_BUILD_INCLUDES UTOPIA_HEADERS UTOPIA_SOURCES)


set(UTOPIA_BUILD_INCLUDES
    ${UTOPIA_BUILD_INCLUDES}
    PARENT_SCOPE)

set(UTOPIA_HEADERS
    ${UTOPIA_HEADERS}
    PARENT_SCOPE)

set(UTOPIA_SOURCES
    ${UTOPIA_SOURCES}
    PARENT_SCOPE)

# utopia_add_library(${CMAKE_CURRENT_SOURCE_DIR} "${METIS_MODULES}")

# target_include_directories(utopia PUBLIC ${METIS_INCLUDES})
# target_link_libraries(utopia PUBLIC ${METIS_LIBRARIES})

# list(APPEND UTOPIA_BUILD_INCLUDES ${METIS_INCLUDES})
# list(APPEND UTOPIA_DEP_LIBRARIES ${METIS_LIBRARIES})

# set(UTOPIA_BUILD_INCLUDES
#     ${UTOPIA_BUILD_INCLUDES}
#     PARENT_SCOPE)

# set(UTOPIA_DEP_LIBRARIES
#     ${UTOPIA_DEP_LIBRARIES}
#     PARENT_SCOPE)
