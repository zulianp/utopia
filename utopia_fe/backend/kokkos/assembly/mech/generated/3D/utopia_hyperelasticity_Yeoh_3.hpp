#ifndef UTOPIA_TPL_HYPERELASTICITY_Yeoh_3_IMPL_hpp
#define UTOPIA_TPL_HYPERELASTICITY_Yeoh_3_IMPL_hpp

#include "utopia_Input.hpp"

#include "utopia_hyperelasticity_Yeoh.hpp"

namespace utopia {
    namespace kernels {

        /**
         * Specialization of Yeoh for dimension 3
         */
        template <typename T>
        class Yeoh<T, 3> {
        public:
            static constexpr int Dim = 3;

            UTOPIA_FUNCTION static constexpr const char *class_name() { return "Yeoh_3"; }

            class Params : public Configurable {
            public:
                void read(Input &in) override {
                    in.get("C0_0", C0_0);
                    in.get("C1_0", C1_0);
                    in.get("C0_1", C0_1);
                    in.get("C1_1", C1_1);
                }

                T C0_0{1.0};
                T C1_0{1.0};
                T C0_1{1.0};
                T C1_1{1.0};
            };

            Yeoh(const Params &params) {
                C0_0 = params.C0_0;
                C1_0 = params.C1_0;
                C0_1 = params.C0_1;
                C1_1 = params.C1_1;
            }

            UTOPIA_FUNCTION void hessian(const T *UTOPIA_RESTRICT f,
                                         const T *grad_test,
                                         const T *grad_trial,
                                         const T dx,
                                         T *UTOPIA_RESTRICT bf) const {
                using namespace utopia::device;
                // Automatically generated
                T x0 = f[4] * f[8];
                T x1 = f[5] * f[7];
                T x2 = 2 * x0 - 2 * x1;
                T x3 = C1_0 * (x0 - x1);
                T x4 = 4 * x0 - 4 * x1;
                T x5 = f[5] * f[6];
                T x6 = f[3] * f[7];
                T x7 = f[3] * f[8];
                T x8 = f[4] * f[6];
                T x9 = f[0] * x0 - f[0] * x1 + f[1] * x5 - f[1] * x7 + f[2] * x6 - f[2] * x8;
                T x10 = x9 - 1;
                T x11 = C1_1 * pow(x10, 2);
                T x12 = x11 * (3 * x0 - 3 * x1);
                T x13 = pow(x9, -2.0 / 3.0);
                T x14 = 2 * x13;
                T x15 = -2.0 / 3.0 * x0 + (2.0 / 3.0) * x1;
                T x16 = pow(x9, -5.0 / 3.0);
                T x17 = f[0] * x16;
                T x18 = x15 * x17;
                T x19 = pow(f[0], 2) + pow(f[1], 2) + pow(f[2], 2) + pow(f[3], 2) + pow(f[4], 2) + pow(f[5], 2) +
                        pow(f[6], 2) + pow(f[7], 2) + pow(f[8], 2);
                T x20 = x19 / pow(x9, 8.0 / 3.0);
                T x21 = x20 * (-5.0 / 3.0 * x0 + (5.0 / 3.0) * x1);
                T x22 = x15 * x21;
                T x23 = 4 * x13;
                T x24 = x16 * x19;
                T x25 = x15 * x24;
                T x26 = f[0] * x23 + 2 * x25;
                T x27 = C0_1 * (f[0] * x14 + x25);
                T x28 = C0_1 * (x13 * x19 - 3);
                T x29 = 2 * x5 - 2 * x7;
                T x30 = 4 * x5 - 4 * x7;
                T x31 = -2.0 / 3.0 * x5 + (2.0 / 3.0) * x7;
                T x32 = x21 * x31;
                T x33 = x17 * x31;
                T x34 = x15 * x16;
                T x35 = 2 * f[1];
                T x36 = 2 * x33 + x34 * x35;
                T x37 = x24 * x31;
                T x38 = f[1] * x23 + 2 * x37;
                T x39 = 4 * x34;
                T x40 = f[1] * x39 + 4 * x33;
                T x41 = 2 * x6 - 2 * x8;
                T x42 = 4 * x6 - 4 * x8;
                T x43 = -2.0 / 3.0 * x6 + (2.0 / 3.0) * x8;
                T x44 = x21 * x43;
                T x45 = x17 * x43;
                T x46 = 2 * f[2];
                T x47 = x34 * x46 + 2 * x45;
                T x48 = x24 * x43;
                T x49 = f[2] * x23 + 2 * x48;
                T x50 = f[2] * x39 + 4 * x45;
                T x51 = C1_0 * (x5 - x7);
                T x52 = x11 * (3 * x5 - 3 * x7);
                T x53 = x16 * x31;
                T x54 = 4 * f[1];
                T x55 = x20 * (-5.0 / 3.0 * x5 + (5.0 / 3.0) * x7);
                T x56 = x31 * x55;
                T x57 = C0_1 * (f[1] * x14 + x37);
                T x58 = x15 * x55;
                T x59 = x43 * x55;
                T x60 = x16 * x43;
                T x61 = x35 * x60 + x46 * x53;
                T x62 = 4 * f[2];
                T x63 = x53 * x62 + x54 * x60;
                T x64 = C1_0 * (x6 - x8);
                T x65 = x11 * (3 * x6 - 3 * x8);
                T x66 = x20 * (-5.0 / 3.0 * x6 + (5.0 / 3.0) * x8);
                T x67 = x43 * x66;
                T x68 = C0_1 * (f[2] * x14 + x48);
                T x69 = x15 * x66;
                T x70 = x31 * x66;
                T x71 = f[2] * f[7];
                T x72 = f[1] * f[8];
                T x73 = C1_0 * (x71 - x72);
                T x74 = x11 * (3 * x71 - 3 * x72);
                T x75 = x20 * (-5.0 / 3.0 * x71 + (5.0 / 3.0) * x72);
                T x76 = x15 * x75;
                T x77 = -2.0 / 3.0 * x71 + (2.0 / 3.0) * x72;
                T x78 = x17 * x77;
                T x79 = 2 * f[3];
                T x80 = x34 * x79 + 2 * x78;
                T x81 = x24 * x77;
                T x82 = C0_1 * (f[3] * x14 + x81);
                T x83 = f[3] * x39 + 4 * x78;
                T x84 = x31 * x75;
                T x85 = x16 * x77;
                T x86 = f[8] * x24;
                T x87 = (2.0 / 3.0) * x86;
                T x88 = x35 * x85 + x53 * x79 + x87;
                T x89 = 4 * f[3];
                T x90 = (4.0 / 3.0) * x86;
                T x91 = x53 * x89 + x54 * x85 + x90;
                T x92 = C1_1 * pow(x10, 3);
                T x93 = 4 * f[8];
                T x94 = x92 * x93;
                T x95 = C1_0 * x10;
                T x96 = 2 * f[8];
                T x97 = x95 * x96;
                T x98 = -x94 - x97;
                T x99 = x43 * x75;
                T x100 = f[7] * x24;
                T x101 = (2.0 / 3.0) * x100;
                T x102 = -x101 + x46 * x85 + x60 * x79;
                T x103 = (4.0 / 3.0) * x100;
                T x104 = -x103 + x60 * x89 + x62 * x85;
                T x105 = 2 * x95;
                T x106 = f[7] * x105;
                T x107 = 4 * x92;
                T x108 = f[7] * x107;
                T x109 = x106 + x108;
                T x110 = f[0] * f[8];
                T x111 = f[2] * f[6];
                T x112 = C1_0 * (x110 - x111);
                T x113 = x11 * (3 * x110 - 3 * x111);
                T x114 = x20 * (-5.0 / 3.0 * x110 + (5.0 / 3.0) * x111);
                T x115 = x114 * x31;
                T x116 = -2.0 / 3.0 * x110 + (2.0 / 3.0) * x111;
                T x117 = x116 * x16;
                T x118 = 2 * f[4];
                T x119 = x117 * x35 + x118 * x53;
                T x120 = x116 * x24;
                T x121 = C0_1 * (f[4] * x14 + x120);
                T x122 = 4 * f[4];
                T x123 = x117 * x54 + x122 * x53;
                T x124 = x114 * x15;
                T x125 = x116 * x17;
                T x126 = x118 * x34 + 2 * x125 - x87;
                T x127 = f[4] * x39 + 4 * x125 - x90;
                T x128 = x94 + x97;
                T x129 = x114 * x43;
                T x130 = f[6] * x24;
                T x131 = (2.0 / 3.0) * x130;
                T x132 = x117 * x46 + x118 * x60 + x131;
                T x133 = (4.0 / 3.0) * x130;
                T x134 = x117 * x62 + x122 * x60 + x133;
                T x135 = f[6] * x107;
                T x136 = f[6] * x105;
                T x137 = -x135 - x136;
                T x138 = f[1] * f[6];
                T x139 = f[0] * f[7];
                T x140 = C1_0 * (x138 - x139);
                T x141 = x11 * (3 * x138 - 3 * x139);
                T x142 = x20 * (-5.0 / 3.0 * x138 + (5.0 / 3.0) * x139);
                T x143 = x142 * x43;
                T x144 = -2.0 / 3.0 * x138 + (2.0 / 3.0) * x139;
                T x145 = x144 * x16;
                T x146 = 2 * f[5];
                T x147 = x145 * x46 + x146 * x60;
                T x148 = x144 * x24;
                T x149 = C0_1 * (f[5] * x14 + x148);
                T x150 = 4 * f[5];
                T x151 = x145 * x62 + x150 * x60;
                T x152 = x142 * x15;
                T x153 = x144 * x17;
                T x154 = x101 + x146 * x34 + 2 * x153;
                T x155 = f[5] * x39 + x103 + 4 * x153;
                T x156 = -x106 - x108;
                T x157 = x142 * x31;
                T x158 = -x131 + x145 * x35 + x146 * x53;
                T x159 = -x133 + x145 * x54 + x150 * x53;
                T x160 = x135 + x136;
                T x161 = f[1] * f[5];
                T x162 = f[2] * f[4];
                T x163 = C1_0 * (x161 - x162);
                T x164 = x11 * (3 * x161 - 3 * x162);
                T x165 = x20 * (-5.0 / 3.0 * x161 + (5.0 / 3.0) * x162);
                T x166 = x15 * x165;
                T x167 = -2.0 / 3.0 * x161 + (2.0 / 3.0) * x162;
                T x168 = x167 * x17;
                T x169 = 2 * f[6];
                T x170 = 2 * x168 + x169 * x34;
                T x171 = x167 * x24;
                T x172 = C0_1 * (f[6] * x14 + x171);
                T x173 = f[6] * x39 + 4 * x168;
                T x174 = x165 * x31;
                T x175 = x16 * x167;
                T x176 = f[5] * x24;
                T x177 = (2.0 / 3.0) * x176;
                T x178 = x169 * x53 + x175 * x35 - x177;
                T x179 = 4 * f[6];
                T x180 = (4.0 / 3.0) * x176;
                T x181 = x175 * x54 + x179 * x53 - x180;
                T x182 = f[5] * x105;
                T x183 = f[5] * x107;
                T x184 = x182 + x183;
                T x185 = x165 * x43;
                T x186 = f[4] * x24;
                T x187 = (2.0 / 3.0) * x186;
                T x188 = x169 * x60 + x175 * x46 + x187;
                T x189 = (4.0 / 3.0) * x186;
                T x190 = x175 * x62 + x179 * x60 + x189;
                T x191 = f[4] * x107;
                T x192 = f[4] * x105;
                T x193 = -x191 - x192;
                T x194 = f[2] * f[3];
                T x195 = f[0] * f[5];
                T x196 = C1_0 * (x194 - x195);
                T x197 = x11 * (3 * x194 - 3 * x195);
                T x198 = x20 * (-5.0 / 3.0 * x194 + (5.0 / 3.0) * x195);
                T x199 = x198 * x31;
                T x200 = -2.0 / 3.0 * x194 + (2.0 / 3.0) * x195;
                T x201 = x16 * x200;
                T x202 = 2 * f[7];
                T x203 = x201 * x35 + x202 * x53;
                T x204 = x200 * x24;
                T x205 = C0_1 * (f[7] * x14 + x204);
                T x206 = 4 * f[7];
                T x207 = x201 * x54 + x206 * x53;
                T x208 = x15 * x198;
                T x209 = x17 * x200;
                T x210 = x177 + x202 * x34 + 2 * x209;
                T x211 = f[7] * x39 + x180 + 4 * x209;
                T x212 = -x182 - x183;
                T x213 = x198 * x43;
                T x214 = f[3] * x24;
                T x215 = (2.0 / 3.0) * x214;
                T x216 = x201 * x46 + x202 * x60 - x215;
                T x217 = (4.0 / 3.0) * x214;
                T x218 = x201 * x62 + x206 * x60 - x217;
                T x219 = x79 * x95;
                T x220 = x89 * x92;
                T x221 = x219 + x220;
                T x222 = f[0] * f[4];
                T x223 = f[1] * f[3];
                T x224 = C1_0 * (x222 - x223);
                T x225 = x11 * (3 * x222 - 3 * x223);
                T x226 = x20 * (-5.0 / 3.0 * x222 + (5.0 / 3.0) * x223);
                T x227 = x226 * x43;
                T x228 = -2.0 / 3.0 * x222 + (2.0 / 3.0) * x223;
                T x229 = x16 * x228;
                T x230 = x229 * x46 + x60 * x96;
                T x231 = x228 * x24;
                T x232 = C0_1 * (f[8] * x14 + x231);
                T x233 = x229 * x62 + x60 * x93;
                T x234 = x15 * x226;
                T x235 = x17 * x228;
                T x236 = -x187 + 2 * x235 + x34 * x96;
                T x237 = f[8] * x39 - x189 + 4 * x235;
                T x238 = x191 + x192;
                T x239 = x226 * x31;
                T x240 = x215 + x229 * x35 + x53 * x96;
                T x241 = x217 + x229 * x54 + x53 * x93;
                T x242 = -x219 - x220;
                T x243 = 2 * x71 - 2 * x72;
                T x244 = 4 * x71 - 4 * x72;
                T x245 = x21 * x77;
                T x246 = f[3] * x23 + 2 * x81;
                T x247 = x116 * x21;
                T x248 = f[4] * x23 + 2 * x120;
                T x249 = 2 * x110 - 2 * x111;
                T x250 = 4 * x110 - 4 * x111;
                T x251 = x144 * x21;
                T x252 = f[5] * x23 + 2 * x148;
                T x253 = 2 * x138 - 2 * x139;
                T x254 = 4 * x138 - 4 * x139;
                T x255 = x116 * x55;
                T x256 = x55 * x77;
                T x257 = x144 * x55;
                T x258 = x144 * x66;
                T x259 = x66 * x77;
                T x260 = x116 * x66;
                T x261 = x75 * x77;
                T x262 = x116 * x75;
                T x263 = x117 * x79 + x118 * x85;
                T x264 = x117 * x89 + x122 * x85;
                T x265 = x144 * x75;
                T x266 = x145 * x79 + x146 * x85;
                T x267 = x145 * x89 + x150 * x85;
                T x268 = x114 * x116;
                T x269 = x114 * x77;
                T x270 = x114 * x144;
                T x271 = x117 * x146 + x118 * x145;
                T x272 = x117 * x150 + x122 * x145;
                T x273 = x142 * x144;
                T x274 = x142 * x77;
                T x275 = x116 * x142;
                T x276 = x165 * x77;
                T x277 = x169 * x85 + x175 * x79;
                T x278 = x175 * x89 + x179 * x85;
                T x279 = x116 * x165;
                T x280 = f[2] * x24;
                T x281 = (2.0 / 3.0) * x280;
                T x282 = x117 * x169 + x118 * x175 + x281;
                T x283 = (4.0 / 3.0) * x280;
                T x284 = x117 * x179 + x122 * x175 + x283;
                T x285 = x62 * x92;
                T x286 = x46 * x95;
                T x287 = -x285 - x286;
                T x288 = x144 * x165;
                T x289 = f[1] * x24;
                T x290 = (2.0 / 3.0) * x289;
                T x291 = x145 * x169 + x146 * x175 - x290;
                T x292 = (4.0 / 3.0) * x289;
                T x293 = x145 * x179 + x150 * x175 - x292;
                T x294 = x35 * x95;
                T x295 = x54 * x92;
                T x296 = x294 + x295;
                T x297 = x116 * x198;
                T x298 = x117 * x202 + x118 * x201;
                T x299 = x117 * x206 + x122 * x201;
                T x300 = x198 * x77;
                T x301 = x201 * x79 + x202 * x85 - x281;
                T x302 = x201 * x89 + x206 * x85 - x283;
                T x303 = x285 + x286;
                T x304 = x144 * x198;
                T x305 = f[0] * x24;
                T x306 = (2.0 / 3.0) * x305;
                T x307 = x145 * x202 + x146 * x201 + x306;
                T x308 = (4.0 / 3.0) * x305;
                T x309 = x145 * x206 + x150 * x201 + x308;
                T x310 = f[0] * x107;
                T x311 = f[0] * x105;
                T x312 = -x310 - x311;
                T x313 = x144 * x226;
                T x314 = x145 * x96 + x146 * x229;
                T x315 = x145 * x93 + x150 * x229;
                T x316 = x226 * x77;
                T x317 = x229 * x79 + x290 + x85 * x96;
                T x318 = x229 * x89 + x292 + x85 * x93;
                T x319 = -x294 - x295;
                T x320 = x116 * x226;
                T x321 = x117 * x96 + x118 * x229 - x306;
                T x322 = x117 * x93 + x122 * x229 - x308;
                T x323 = x310 + x311;
                T x324 = 2 * x161 - 2 * x162;
                T x325 = 4 * x161 - 4 * x162;
                T x326 = x167 * x21;
                T x327 = f[6] * x23 + 2 * x171;
                T x328 = x200 * x21;
                T x329 = f[7] * x23 + 2 * x204;
                T x330 = 2 * x194 - 2 * x195;
                T x331 = 4 * x194 - 4 * x195;
                T x332 = x21 * x228;
                T x333 = f[8] * x23 + 2 * x231;
                T x334 = 2 * x222 - 2 * x223;
                T x335 = 4 * x222 - 4 * x223;
                T x336 = x200 * x55;
                T x337 = x167 * x55;
                T x338 = x228 * x55;
                T x339 = x228 * x66;
                T x340 = x167 * x66;
                T x341 = x200 * x66;
                T x342 = x167 * x75;
                T x343 = x200 * x75;
                T x344 = x228 * x75;
                T x345 = x114 * x200;
                T x346 = x114 * x167;
                T x347 = x114 * x228;
                T x348 = x142 * x228;
                T x349 = x142 * x167;
                T x350 = x142 * x200;
                T x351 = x165 * x167;
                T x352 = x165 * x200;
                T x353 = x169 * x201 + x175 * x202;
                T x354 = x175 * x206 + x179 * x201;
                T x355 = x165 * x228;
                T x356 = x169 * x229 + x175 * x96;
                T x357 = x175 * x93 + x179 * x229;
                T x358 = x198 * x200;
                T x359 = x167 * x198;
                T x360 = x198 * x228;
                T x361 = x201 * x96 + x202 * x229;
                T x362 = x201 * x93 + x206 * x229;
                T x363 = x226 * x228;
                T x364 = x167 * x226;
                T x365 = x200 * x226;
                bf[0] +=
                    dx * (grad_trial[0] * (grad_test[0] * (C0_0 * (x14 + 4 * x18 + x22) + x12 * x4 + x2 * x3 +
                                                           x26 * x27 + x28 * (8 * x18 + 2 * x22 + x23)) +
                                           grad_test[1] * (C0_0 * (x32 + x36) + x12 * x30 + x27 * x38 +
                                                           x28 * (2 * x32 + x40) + x29 * x3) +
                                           grad_test[2] * (C0_0 * (x44 + x47) + x12 * x42 + x27 * x49 +
                                                           x28 * (2 * x44 + x50) + x3 * x41)) +
                          grad_trial[1] *
                              (grad_test[0] *
                                   (C0_0 * (x36 + x58) + x2 * x51 + x26 * x57 + x28 * (x40 + 2 * x58) + x4 * x52) +
                               grad_test[1] * (C0_0 * (x14 + x53 * x54 + x56) + x28 * (8 * f[1] * x53 + x23 + 2 * x56) +
                                               x29 * x51 + x30 * x52 + x38 * x57) +
                               grad_test[2] *
                                   (C0_0 * (x59 + x61) + x28 * (2 * x59 + x63) + x41 * x51 + x42 * x52 + x49 * x57)) +
                          grad_trial[2] *
                              (grad_test[0] *
                                   (C0_0 * (x47 + x69) + x2 * x64 + x26 * x68 + x28 * (x50 + 2 * x69) + x4 * x65) +
                               grad_test[1] *
                                   (C0_0 * (x61 + x70) + x28 * (x63 + 2 * x70) + x29 * x64 + x30 * x65 + x38 * x68) +
                               grad_test[2] * (C0_0 * (x14 + x60 * x62 + x67) + x28 * (8 * f[2] * x60 + x23 + 2 * x67) +
                                               x41 * x64 + x42 * x65 + x49 * x68)));
                bf[1] += dx * (grad_trial[0] * (grad_test[0] * (C0_0 * (x76 + x80) + x2 * x73 + x26 * x82 +
                                                                x28 * (2 * x76 + x83) + x4 * x74) +
                                                grad_test[1] * (C0_0 * (x84 + x88) + x28 * (2 * x84 + x91) + x29 * x73 +
                                                                x30 * x74 + x38 * x82 + x98) +
                                                grad_test[2] * (C0_0 * (x102 + x99) + x109 + x28 * (x104 + 2 * x99) +
                                                                x41 * x73 + x42 * x74 + x49 * x82)) +
                               grad_trial[1] * (grad_test[0] * (C0_0 * (x124 + x126) + x112 * x2 + x113 * x4 +
                                                                x121 * x26 + x128 + x28 * (2 * x124 + x127)) +
                                                grad_test[1] * (C0_0 * (x115 + x119) + x112 * x29 + x113 * x30 +
                                                                x121 * x38 + x28 * (2 * x115 + x123)) +
                                                grad_test[2] * (C0_0 * (x129 + x132) + x112 * x41 + x113 * x42 +
                                                                x121 * x49 + x137 + x28 * (2 * x129 + x134))) +
                               grad_trial[2] * (grad_test[0] * (C0_0 * (x152 + x154) + x140 * x2 + x141 * x4 +
                                                                x149 * x26 + x156 + x28 * (2 * x152 + x155)) +
                                                grad_test[1] * (C0_0 * (x157 + x158) + x140 * x29 + x141 * x30 +
                                                                x149 * x38 + x160 + x28 * (2 * x157 + x159)) +
                                                grad_test[2] * (C0_0 * (x143 + x147) + x140 * x41 + x141 * x42 +
                                                                x149 * x49 + x28 * (2 * x143 + x151))));
                bf[2] += dx * (grad_trial[0] * (grad_test[0] * (C0_0 * (x166 + x170) + x163 * x2 + x164 * x4 +
                                                                x172 * x26 + x28 * (2 * x166 + x173)) +
                                                grad_test[1] * (C0_0 * (x174 + x178) + x163 * x29 + x164 * x30 +
                                                                x172 * x38 + x184 + x28 * (2 * x174 + x181)) +
                                                grad_test[2] * (C0_0 * (x185 + x188) + x163 * x41 + x164 * x42 +
                                                                x172 * x49 + x193 + x28 * (2 * x185 + x190))) +
                               grad_trial[1] * (grad_test[0] * (C0_0 * (x208 + x210) + x196 * x2 + x197 * x4 +
                                                                x205 * x26 + x212 + x28 * (2 * x208 + x211)) +
                                                grad_test[1] * (C0_0 * (x199 + x203) + x196 * x29 + x197 * x30 +
                                                                x205 * x38 + x28 * (2 * x199 + x207)) +
                                                grad_test[2] * (C0_0 * (x213 + x216) + x196 * x41 + x197 * x42 +
                                                                x205 * x49 + x221 + x28 * (2 * x213 + x218))) +
                               grad_trial[2] * (grad_test[0] * (C0_0 * (x234 + x236) + x2 * x224 + x225 * x4 +
                                                                x232 * x26 + x238 + x28 * (2 * x234 + x237)) +
                                                grad_test[1] * (C0_0 * (x239 + x240) + x224 * x29 + x225 * x30 +
                                                                x232 * x38 + x242 + x28 * (2 * x239 + x241)) +
                                                grad_test[2] * (C0_0 * (x227 + x230) + x224 * x41 + x225 * x42 +
                                                                x232 * x49 + x28 * (2 * x227 + x233))));
                bf[3] += dx * (grad_trial[0] * (grad_test[0] * (C0_0 * (x245 + x80) + x12 * x244 + x243 * x3 +
                                                                x246 * x27 + x28 * (2 * x245 + x83)) +
                                                grad_test[1] * (C0_0 * (x126 + x247) + x12 * x250 + x128 + x248 * x27 +
                                                                x249 * x3 + x28 * (x127 + 2 * x247)) +
                                                grad_test[2] * (C0_0 * (x154 + x251) + x12 * x254 + x156 + x252 * x27 +
                                                                x253 * x3 + x28 * (x155 + 2 * x251))) +
                               grad_trial[1] * (grad_test[0] * (C0_0 * (x256 + x88) + x243 * x51 + x244 * x52 +
                                                                x246 * x57 + x28 * (2 * x256 + x91) + x98) +
                                                grad_test[1] * (C0_0 * (x119 + x255) + x248 * x57 + x249 * x51 +
                                                                x250 * x52 + x28 * (x123 + 2 * x255)) +
                                                grad_test[2] * (C0_0 * (x158 + x257) + x160 + x252 * x57 + x253 * x51 +
                                                                x254 * x52 + x28 * (x159 + 2 * x257))) +
                               grad_trial[2] * (grad_test[0] * (C0_0 * (x102 + x259) + x109 + x243 * x64 + x244 * x65 +
                                                                x246 * x68 + x28 * (x104 + 2 * x259)) +
                                                grad_test[1] * (C0_0 * (x132 + x260) + x137 + x248 * x68 + x249 * x64 +
                                                                x250 * x65 + x28 * (x134 + 2 * x260)) +
                                                grad_test[2] * (C0_0 * (x147 + x258) + x252 * x68 + x253 * x64 +
                                                                x254 * x65 + x28 * (x151 + 2 * x258))));
                bf[4] +=
                    dx *
                    (grad_trial[0] * (grad_test[0] * (C0_0 * (x14 + x261 + x85 * x89) + x243 * x73 + x244 * x74 +
                                                      x246 * x82 + x28 * (8 * f[3] * x85 + x23 + 2 * x261)) +
                                      grad_test[1] * (C0_0 * (x262 + x263) + x248 * x82 + x249 * x73 + x250 * x74 +
                                                      x28 * (2 * x262 + x264)) +
                                      grad_test[2] * (C0_0 * (x265 + x266) + x252 * x82 + x253 * x73 + x254 * x74 +
                                                      x28 * (2 * x265 + x267))) +
                     grad_trial[1] * (grad_test[0] * (C0_0 * (x263 + x269) + x112 * x243 + x113 * x244 + x121 * x246 +
                                                      x28 * (x264 + 2 * x269)) +
                                      grad_test[1] * (C0_0 * (x117 * x122 + x14 + x268) + x112 * x249 + x113 * x250 +
                                                      x121 * x248 + x28 * (8 * f[4] * x117 + x23 + 2 * x268)) +
                                      grad_test[2] * (C0_0 * (x270 + x271) + x112 * x253 + x113 * x254 + x121 * x252 +
                                                      x28 * (2 * x270 + x272))) +
                     grad_trial[2] * (grad_test[0] * (C0_0 * (x266 + x274) + x140 * x243 + x141 * x244 + x149 * x246 +
                                                      x28 * (x267 + 2 * x274)) +
                                      grad_test[1] * (C0_0 * (x271 + x275) + x140 * x249 + x141 * x250 + x149 * x248 +
                                                      x28 * (x272 + 2 * x275)) +
                                      grad_test[2] * (C0_0 * (x14 + x145 * x150 + x273) + x140 * x253 + x141 * x254 +
                                                      x149 * x252 + x28 * (8 * f[5] * x145 + x23 + 2 * x273))));
                bf[5] += dx * (grad_trial[0] * (grad_test[0] * (C0_0 * (x276 + x277) + x163 * x243 + x164 * x244 +
                                                                x172 * x246 + x28 * (2 * x276 + x278)) +
                                                grad_test[1] * (C0_0 * (x279 + x282) + x163 * x249 + x164 * x250 +
                                                                x172 * x248 + x28 * (2 * x279 + x284) + x287) +
                                                grad_test[2] * (C0_0 * (x288 + x291) + x163 * x253 + x164 * x254 +
                                                                x172 * x252 + x28 * (2 * x288 + x293) + x296)) +
                               grad_trial[1] * (grad_test[0] * (C0_0 * (x300 + x301) + x196 * x243 + x197 * x244 +
                                                                x205 * x246 + x28 * (2 * x300 + x302) + x303) +
                                                grad_test[1] * (C0_0 * (x297 + x298) + x196 * x249 + x197 * x250 +
                                                                x205 * x248 + x28 * (2 * x297 + x299)) +
                                                grad_test[2] * (C0_0 * (x304 + x307) + x196 * x253 + x197 * x254 +
                                                                x205 * x252 + x28 * (2 * x304 + x309) + x312)) +
                               grad_trial[2] * (grad_test[0] * (C0_0 * (x316 + x317) + x224 * x243 + x225 * x244 +
                                                                x232 * x246 + x28 * (2 * x316 + x318) + x319) +
                                                grad_test[1] * (C0_0 * (x320 + x321) + x224 * x249 + x225 * x250 +
                                                                x232 * x248 + x28 * (2 * x320 + x322) + x323) +
                                                grad_test[2] * (C0_0 * (x313 + x314) + x224 * x253 + x225 * x254 +
                                                                x232 * x252 + x28 * (2 * x313 + x315))));
                bf[6] += dx * (grad_trial[0] * (grad_test[0] * (C0_0 * (x170 + x326) + x12 * x325 + x27 * x327 +
                                                                x28 * (x173 + 2 * x326) + x3 * x324) +
                                                grad_test[1] * (C0_0 * (x210 + x328) + x12 * x331 + x212 + x27 * x329 +
                                                                x28 * (x211 + 2 * x328) + x3 * x330) +
                                                grad_test[2] * (C0_0 * (x236 + x332) + x12 * x335 + x238 + x27 * x333 +
                                                                x28 * (x237 + 2 * x332) + x3 * x334)) +
                               grad_trial[1] * (grad_test[0] * (C0_0 * (x178 + x337) + x184 + x28 * (x181 + 2 * x337) +
                                                                x324 * x51 + x325 * x52 + x327 * x57) +
                                                grad_test[1] * (C0_0 * (x203 + x336) + x28 * (x207 + 2 * x336) +
                                                                x329 * x57 + x330 * x51 + x331 * x52) +
                                                grad_test[2] * (C0_0 * (x240 + x338) + x242 + x28 * (x241 + 2 * x338) +
                                                                x333 * x57 + x334 * x51 + x335 * x52)) +
                               grad_trial[2] * (grad_test[0] * (C0_0 * (x188 + x340) + x193 + x28 * (x190 + 2 * x340) +
                                                                x324 * x64 + x325 * x65 + x327 * x68) +
                                                grad_test[1] * (C0_0 * (x216 + x341) + x221 + x28 * (x218 + 2 * x341) +
                                                                x329 * x68 + x330 * x64 + x331 * x65) +
                                                grad_test[2] * (C0_0 * (x230 + x339) + x28 * (x233 + 2 * x339) +
                                                                x333 * x68 + x334 * x64 + x335 * x65)));
                bf[7] += dx * (grad_trial[0] * (grad_test[0] * (C0_0 * (x277 + x342) + x28 * (x278 + 2 * x342) +
                                                                x324 * x73 + x325 * x74 + x327 * x82) +
                                                grad_test[1] * (C0_0 * (x301 + x343) + x28 * (x302 + 2 * x343) + x303 +
                                                                x329 * x82 + x330 * x73 + x331 * x74) +
                                                grad_test[2] * (C0_0 * (x317 + x344) + x28 * (x318 + 2 * x344) + x319 +
                                                                x333 * x82 + x334 * x73 + x335 * x74)) +
                               grad_trial[1] * (grad_test[0] * (C0_0 * (x282 + x346) + x112 * x324 + x113 * x325 +
                                                                x121 * x327 + x28 * (x284 + 2 * x346) + x287) +
                                                grad_test[1] * (C0_0 * (x298 + x345) + x112 * x330 + x113 * x331 +
                                                                x121 * x329 + x28 * (x299 + 2 * x345)) +
                                                grad_test[2] * (C0_0 * (x321 + x347) + x112 * x334 + x113 * x335 +
                                                                x121 * x333 + x28 * (x322 + 2 * x347) + x323)) +
                               grad_trial[2] * (grad_test[0] * (C0_0 * (x291 + x349) + x140 * x324 + x141 * x325 +
                                                                x149 * x327 + x28 * (x293 + 2 * x349) + x296) +
                                                grad_test[1] * (C0_0 * (x307 + x350) + x140 * x330 + x141 * x331 +
                                                                x149 * x329 + x28 * (x309 + 2 * x350) + x312) +
                                                grad_test[2] * (C0_0 * (x314 + x348) + x140 * x334 + x141 * x335 +
                                                                x149 * x333 + x28 * (x315 + 2 * x348))));
                bf[8] +=
                    dx *
                    (grad_trial[0] * (grad_test[0] * (C0_0 * (x14 + x175 * x179 + x351) + x163 * x324 + x164 * x325 +
                                                      x172 * x327 + x28 * (8 * f[6] * x175 + x23 + 2 * x351)) +
                                      grad_test[1] * (C0_0 * (x352 + x353) + x163 * x330 + x164 * x331 + x172 * x329 +
                                                      x28 * (2 * x352 + x354)) +
                                      grad_test[2] * (C0_0 * (x355 + x356) + x163 * x334 + x164 * x335 + x172 * x333 +
                                                      x28 * (2 * x355 + x357))) +
                     grad_trial[1] * (grad_test[0] * (C0_0 * (x353 + x359) + x196 * x324 + x197 * x325 + x205 * x327 +
                                                      x28 * (x354 + 2 * x359)) +
                                      grad_test[1] * (C0_0 * (x14 + x201 * x206 + x358) + x196 * x330 + x197 * x331 +
                                                      x205 * x329 + x28 * (8 * f[7] * x201 + x23 + 2 * x358)) +
                                      grad_test[2] * (C0_0 * (x360 + x361) + x196 * x334 + x197 * x335 + x205 * x333 +
                                                      x28 * (2 * x360 + x362))) +
                     grad_trial[2] * (grad_test[0] * (C0_0 * (x356 + x364) + x224 * x324 + x225 * x325 + x232 * x327 +
                                                      x28 * (x357 + 2 * x364)) +
                                      grad_test[1] * (C0_0 * (x361 + x365) + x224 * x330 + x225 * x331 + x232 * x329 +
                                                      x28 * (x362 + 2 * x365)) +
                                      grad_test[2] * (C0_0 * (x14 + x229 * x93 + x363) + x224 * x334 + x225 * x335 +
                                                      x232 * x333 + x28 * (8 * f[8] * x229 + x23 + 2 * x363))));
            }

            UTOPIA_FUNCTION void gradient(const T *UTOPIA_RESTRICT f,
                                          const T *UTOPIA_RESTRICT grad_test,
                                          const T dx,
                                          T *UTOPIA_RESTRICT lf) const {
                using namespace utopia::device;
                // Automatically generated
                T x0 = f[4] * f[8];
                T x1 = f[5] * f[7];
                T x2 = f[5] * f[6];
                T x3 = f[3] * f[7];
                T x4 = f[3] * f[8];
                T x5 = f[4] * f[6];
                T x6 = f[0] * x0 - f[0] * x1 + f[1] * x2 - f[1] * x4 + f[2] * x3 - f[2] * x5;
                T x7 = x6 - 1;
                T x8 = C1_0 * x7;
                T x9 = C1_1 * pow(x7, 3);
                T x10 = pow(x6, -2.0 / 3.0);
                T x11 = f[0] * x10;
                T x12 = pow(f[0], 2) + pow(f[1], 2) + pow(f[2], 2) + pow(f[3], 2) + pow(f[4], 2) + pow(f[5], 2) +
                        pow(f[6], 2) + pow(f[7], 2) + pow(f[8], 2);
                T x13 = x12 / pow(x6, 5.0 / 3.0);
                T x14 = x13 * (-2.0 / 3.0 * x0 + (2.0 / 3.0) * x1);
                T x15 = C0_1 * (x10 * x12 - 3);
                T x16 = f[1] * x10;
                T x17 = x13 * (-2.0 / 3.0 * x2 + (2.0 / 3.0) * x4);
                T x18 = f[2] * x10;
                T x19 = x13 * (-2.0 / 3.0 * x3 + (2.0 / 3.0) * x5);
                T x20 = f[1] * f[8];
                T x21 = f[2] * f[7];
                T x22 = f[3] * x10;
                T x23 = x13 * ((2.0 / 3.0) * x20 - 2.0 / 3.0 * x21);
                T x24 = f[0] * f[8];
                T x25 = f[2] * f[6];
                T x26 = f[4] * x10;
                T x27 = x13 * (-2.0 / 3.0 * x24 + (2.0 / 3.0) * x25);
                T x28 = f[0] * f[7];
                T x29 = f[1] * f[6];
                T x30 = f[5] * x10;
                T x31 = x13 * ((2.0 / 3.0) * x28 - 2.0 / 3.0 * x29);
                T x32 = f[1] * f[5];
                T x33 = f[2] * f[4];
                T x34 = f[6] * x10;
                T x35 = x13 * (-2.0 / 3.0 * x32 + (2.0 / 3.0) * x33);
                T x36 = f[0] * f[5];
                T x37 = f[2] * f[3];
                T x38 = f[7] * x10;
                T x39 = x13 * ((2.0 / 3.0) * x36 - 2.0 / 3.0 * x37);
                T x40 = f[0] * f[4];
                T x41 = f[1] * f[3];
                T x42 = f[8] * x10;
                T x43 = x13 * (-2.0 / 3.0 * x40 + (2.0 / 3.0) * x41);
                lf[0] += dx * (grad_test[0] * (C0_0 * (2 * x11 + x14) + x15 * (4 * x11 + 2 * x14) +
                                               x8 * (2 * x0 - 2 * x1) + x9 * (4 * x0 - 4 * x1)) +
                               grad_test[1] * (C0_0 * (2 * x16 + x17) + x15 * (4 * x16 + 2 * x17) +
                                               x8 * (2 * x2 - 2 * x4) + x9 * (4 * x2 - 4 * x4)) +
                               grad_test[2] * (C0_0 * (2 * x18 + x19) + x15 * (4 * x18 + 2 * x19) +
                                               x8 * (2 * x3 - 2 * x5) + x9 * (4 * x3 - 4 * x5)));
                lf[1] += dx * (grad_test[0] * (C0_0 * (2 * x22 + x23) + x15 * (4 * x22 + 2 * x23) +
                                               x8 * (-2 * x20 + 2 * x21) + x9 * (-4 * x20 + 4 * x21)) +
                               grad_test[1] * (C0_0 * (2 * x26 + x27) + x15 * (4 * x26 + 2 * x27) +
                                               x8 * (2 * x24 - 2 * x25) + x9 * (4 * x24 - 4 * x25)) +
                               grad_test[2] * (C0_0 * (2 * x30 + x31) + x15 * (4 * x30 + 2 * x31) +
                                               x8 * (-2 * x28 + 2 * x29) + x9 * (-4 * x28 + 4 * x29)));
                lf[2] += dx * (grad_test[0] * (C0_0 * (2 * x34 + x35) + x15 * (4 * x34 + 2 * x35) +
                                               x8 * (2 * x32 - 2 * x33) + x9 * (4 * x32 - 4 * x33)) +
                               grad_test[1] * (C0_0 * (2 * x38 + x39) + x15 * (4 * x38 + 2 * x39) +
                                               x8 * (-2 * x36 + 2 * x37) + x9 * (-4 * x36 + 4 * x37)) +
                               grad_test[2] * (C0_0 * (2 * x42 + x43) + x15 * (4 * x42 + 2 * x43) +
                                               x8 * (2 * x40 - 2 * x41) + x9 * (4 * x40 - 4 * x41)));
            }

            UTOPIA_FUNCTION void value(const T *UTOPIA_RESTRICT f, const T dx, T &e) const {
                using namespace utopia::device;
                // Automatically generated
                T x0 = f[0] * f[4] * f[8] - f[0] * f[5] * f[7] - f[1] * f[3] * f[8] + f[1] * f[5] * f[6] +
                       f[2] * f[3] * f[7] - f[2] * f[4] * f[6];
                T x1 = x0 - 1;
                T x2 = -3 + (pow(f[0], 2) + pow(f[1], 2) + pow(f[2], 2) + pow(f[3], 2) + pow(f[4], 2) + pow(f[5], 2) +
                             pow(f[6], 2) + pow(f[7], 2) + pow(f[8], 2)) /
                                pow(x0, 2.0 / 3.0);
                e += dx * (C0_0 * x2 + C0_1 * pow(x2, 2) + C1_0 * pow(x1, 2) + C1_1 * pow(x1, 4));
            }

            UTOPIA_FUNCTION void eval(const T *UTOPIA_RESTRICT f,
                                      const T *grad_test,
                                      const T *grad_trial,
                                      const T dx,
                                      T &e,
                                      T *UTOPIA_RESTRICT lf,
                                      T *UTOPIA_RESTRICT bf) const {
                using namespace utopia::device;
                // Automatically generated
                T x0 = f[4] * f[8];
                T x1 = f[5] * f[6];
                T x2 = f[3] * f[7];
                T x3 = f[5] * f[7];
                T x4 = f[3] * f[8];
                T x5 = f[4] * f[6];
                T x6 = f[0] * x0 - f[0] * x3 + f[1] * x1 - f[1] * x4 + f[2] * x2 - f[2] * x5;
                T x7 = x6 - 1;
                T x8 = pow(x7, 2);
                T x9 = pow(f[0], 2) + pow(f[1], 2) + pow(f[2], 2) + pow(f[3], 2) + pow(f[4], 2) + pow(f[5], 2) +
                       pow(f[6], 2) + pow(f[7], 2) + pow(f[8], 2);
                T x10 = pow(x6, -2.0 / 3.0);
                T x11 = x10 * x9 - 3;
                T x12 = 2 * x0 - 2 * x3;
                T x13 = C1_0 * x7;
                T x14 = 4 * x0 - 4 * x3;
                T x15 = C1_1 * pow(x7, 3);
                T x16 = 2 * x10;
                T x17 = -2.0 / 3.0 * x0 + (2.0 / 3.0) * x3;
                T x18 = pow(x6, -5.0 / 3.0);
                T x19 = x18 * x9;
                T x20 = x17 * x19;
                T x21 = f[0] * x16 + x20;
                T x22 = 4 * x10;
                T x23 = f[0] * x22 + 2 * x20;
                T x24 = C0_1 * x11;
                T x25 = 2 * x1 - 2 * x4;
                T x26 = 4 * x1 - 4 * x4;
                T x27 = -2.0 / 3.0 * x1 + (2.0 / 3.0) * x4;
                T x28 = x19 * x27;
                T x29 = f[1] * x16 + x28;
                T x30 = f[1] * x22 + 2 * x28;
                T x31 = 2 * x2 - 2 * x5;
                T x32 = 4 * x2 - 4 * x5;
                T x33 = -2.0 / 3.0 * x2 + (2.0 / 3.0) * x5;
                T x34 = x19 * x33;
                T x35 = f[2] * x16 + x34;
                T x36 = f[2] * x22 + 2 * x34;
                T x37 = f[1] * f[8];
                T x38 = f[2] * f[7];
                T x39 = -2 * x37 + 2 * x38;
                T x40 = -4 * x37 + 4 * x38;
                T x41 = (2.0 / 3.0) * x37 - 2.0 / 3.0 * x38;
                T x42 = x19 * x41;
                T x43 = f[3] * x16 + x42;
                T x44 = f[3] * x22 + 2 * x42;
                T x45 = f[0] * f[8];
                T x46 = f[2] * f[6];
                T x47 = 2 * x45 - 2 * x46;
                T x48 = 4 * x45 - 4 * x46;
                T x49 = -2.0 / 3.0 * x45 + (2.0 / 3.0) * x46;
                T x50 = x19 * x49;
                T x51 = f[4] * x16 + x50;
                T x52 = f[4] * x22 + 2 * x50;
                T x53 = f[0] * f[7];
                T x54 = f[1] * f[6];
                T x55 = -2 * x53 + 2 * x54;
                T x56 = -4 * x53 + 4 * x54;
                T x57 = (2.0 / 3.0) * x53 - 2.0 / 3.0 * x54;
                T x58 = x19 * x57;
                T x59 = f[5] * x16 + x58;
                T x60 = f[5] * x22 + 2 * x58;
                T x61 = f[1] * f[5];
                T x62 = f[2] * f[4];
                T x63 = 2 * x61 - 2 * x62;
                T x64 = 4 * x61 - 4 * x62;
                T x65 = -2.0 / 3.0 * x61 + (2.0 / 3.0) * x62;
                T x66 = x19 * x65;
                T x67 = f[6] * x16 + x66;
                T x68 = f[6] * x22 + 2 * x66;
                T x69 = f[0] * f[5];
                T x70 = f[2] * f[3];
                T x71 = -2 * x69 + 2 * x70;
                T x72 = -4 * x69 + 4 * x70;
                T x73 = (2.0 / 3.0) * x69 - 2.0 / 3.0 * x70;
                T x74 = x19 * x73;
                T x75 = f[7] * x16 + x74;
                T x76 = f[7] * x22 + 2 * x74;
                T x77 = f[0] * f[4];
                T x78 = f[1] * f[3];
                T x79 = 2 * x77 - 2 * x78;
                T x80 = 4 * x77 - 4 * x78;
                T x81 = -2.0 / 3.0 * x77 + (2.0 / 3.0) * x78;
                T x82 = x19 * x81;
                T x83 = f[8] * x16 + x82;
                T x84 = f[8] * x22 + 2 * x82;
                T x85 = C1_0 * (x0 - x3);
                T x86 = C1_1 * x8;
                T x87 = x86 * (3 * x0 - 3 * x3);
                T x88 = f[0] * x18;
                T x89 = x17 * x88;
                T x90 = x9 / pow(x6, 8.0 / 3.0);
                T x91 = x90 * (-5.0 / 3.0 * x0 + (5.0 / 3.0) * x3);
                T x92 = x17 * x91;
                T x93 = C0_1 * x21;
                T x94 = x27 * x91;
                T x95 = x27 * x88;
                T x96 = x17 * x18;
                T x97 = 2 * f[1];
                T x98 = 2 * x95 + x96 * x97;
                T x99 = 4 * x96;
                T x100 = f[1] * x99 + 4 * x95;
                T x101 = x33 * x91;
                T x102 = x33 * x88;
                T x103 = 2 * f[2];
                T x104 = 2 * x102 + x103 * x96;
                T x105 = f[2] * x99 + 4 * x102;
                T x106 = C1_0 * (x1 - x4);
                T x107 = x86 * (3 * x1 - 3 * x4);
                T x108 = x18 * x27;
                T x109 = 4 * f[1];
                T x110 = x90 * (-5.0 / 3.0 * x1 + (5.0 / 3.0) * x4);
                T x111 = x110 * x27;
                T x112 = C0_1 * x29;
                T x113 = x110 * x17;
                T x114 = x110 * x33;
                T x115 = x18 * x33;
                T x116 = x103 * x108 + x115 * x97;
                T x117 = 4 * f[2];
                T x118 = x108 * x117 + x109 * x115;
                T x119 = C1_0 * (x2 - x5);
                T x120 = x86 * (3 * x2 - 3 * x5);
                T x121 = x90 * (-5.0 / 3.0 * x2 + (5.0 / 3.0) * x5);
                T x122 = x121 * x33;
                T x123 = C0_1 * x35;
                T x124 = x121 * x17;
                T x125 = x121 * x27;
                T x126 = C1_0 * (-x37 + x38);
                T x127 = x86 * (-3 * x37 + 3 * x38);
                T x128 = x90 * ((5.0 / 3.0) * x37 - 5.0 / 3.0 * x38);
                T x129 = x128 * x17;
                T x130 = x41 * x88;
                T x131 = 2 * f[3];
                T x132 = 2 * x130 + x131 * x96;
                T x133 = C0_1 * x43;
                T x134 = f[3] * x99 + 4 * x130;
                T x135 = x128 * x27;
                T x136 = x18 * x41;
                T x137 = f[8] * x19;
                T x138 = (2.0 / 3.0) * x137;
                T x139 = x108 * x131 + x136 * x97 + x138;
                T x140 = 4 * f[3];
                T x141 = (4.0 / 3.0) * x137;
                T x142 = x108 * x140 + x109 * x136 + x141;
                T x143 = 4 * x15;
                T x144 = f[8] * x143;
                T x145 = 2 * x13;
                T x146 = f[8] * x145;
                T x147 = -x144 - x146;
                T x148 = x128 * x33;
                T x149 = f[7] * x19;
                T x150 = (2.0 / 3.0) * x149;
                T x151 = x103 * x136 + x115 * x131 - x150;
                T x152 = (4.0 / 3.0) * x149;
                T x153 = x115 * x140 + x117 * x136 - x152;
                T x154 = f[7] * x145;
                T x155 = f[7] * x143;
                T x156 = x154 + x155;
                T x157 = C1_0 * (x45 - x46);
                T x158 = x86 * (3 * x45 - 3 * x46);
                T x159 = x90 * (-5.0 / 3.0 * x45 + (5.0 / 3.0) * x46);
                T x160 = x159 * x27;
                T x161 = x18 * x49;
                T x162 = 2 * f[4];
                T x163 = x108 * x162 + x161 * x97;
                T x164 = C0_1 * x51;
                T x165 = 4 * f[4];
                T x166 = x108 * x165 + x109 * x161;
                T x167 = x159 * x17;
                T x168 = x49 * x88;
                T x169 = -x138 + x162 * x96 + 2 * x168;
                T x170 = f[4] * x99 - x141 + 4 * x168;
                T x171 = x144 + x146;
                T x172 = x159 * x33;
                T x173 = f[6] * x19;
                T x174 = (2.0 / 3.0) * x173;
                T x175 = x103 * x161 + x115 * x162 + x174;
                T x176 = (4.0 / 3.0) * x173;
                T x177 = x115 * x165 + x117 * x161 + x176;
                T x178 = f[6] * x143;
                T x179 = f[6] * x145;
                T x180 = -x178 - x179;
                T x181 = C1_0 * (-x53 + x54);
                T x182 = x86 * (-3 * x53 + 3 * x54);
                T x183 = x90 * ((5.0 / 3.0) * x53 - 5.0 / 3.0 * x54);
                T x184 = x183 * x33;
                T x185 = x18 * x57;
                T x186 = 2 * f[5];
                T x187 = x103 * x185 + x115 * x186;
                T x188 = C0_1 * x59;
                T x189 = 4 * f[5];
                T x190 = x115 * x189 + x117 * x185;
                T x191 = x17 * x183;
                T x192 = x57 * x88;
                T x193 = x150 + x186 * x96 + 2 * x192;
                T x194 = f[5] * x99 + x152 + 4 * x192;
                T x195 = -x154 - x155;
                T x196 = x183 * x27;
                T x197 = x108 * x186 - x174 + x185 * x97;
                T x198 = x108 * x189 + x109 * x185 - x176;
                T x199 = x178 + x179;
                T x200 = C1_0 * (x61 - x62);
                T x201 = x86 * (3 * x61 - 3 * x62);
                T x202 = x90 * (-5.0 / 3.0 * x61 + (5.0 / 3.0) * x62);
                T x203 = x17 * x202;
                T x204 = x65 * x88;
                T x205 = 2 * f[6];
                T x206 = 2 * x204 + x205 * x96;
                T x207 = C0_1 * x67;
                T x208 = f[6] * x99 + 4 * x204;
                T x209 = x202 * x27;
                T x210 = x18 * x65;
                T x211 = f[5] * x19;
                T x212 = (2.0 / 3.0) * x211;
                T x213 = x108 * x205 + x210 * x97 - x212;
                T x214 = 4 * f[6];
                T x215 = (4.0 / 3.0) * x211;
                T x216 = x108 * x214 + x109 * x210 - x215;
                T x217 = f[5] * x145;
                T x218 = f[5] * x143;
                T x219 = x217 + x218;
                T x220 = x202 * x33;
                T x221 = f[4] * x19;
                T x222 = (2.0 / 3.0) * x221;
                T x223 = x103 * x210 + x115 * x205 + x222;
                T x224 = (4.0 / 3.0) * x221;
                T x225 = x115 * x214 + x117 * x210 + x224;
                T x226 = f[4] * x143;
                T x227 = f[4] * x145;
                T x228 = -x226 - x227;
                T x229 = C1_0 * (-x69 + x70);
                T x230 = x86 * (-3 * x69 + 3 * x70);
                T x231 = x90 * ((5.0 / 3.0) * x69 - 5.0 / 3.0 * x70);
                T x232 = x231 * x27;
                T x233 = x18 * x73;
                T x234 = 2 * f[7];
                T x235 = x108 * x234 + x233 * x97;
                T x236 = C0_1 * x75;
                T x237 = 4 * f[7];
                T x238 = x108 * x237 + x109 * x233;
                T x239 = x17 * x231;
                T x240 = x73 * x88;
                T x241 = x212 + x234 * x96 + 2 * x240;
                T x242 = f[7] * x99 + x215 + 4 * x240;
                T x243 = -x217 - x218;
                T x244 = x231 * x33;
                T x245 = f[3] * x19;
                T x246 = (2.0 / 3.0) * x245;
                T x247 = x103 * x233 + x115 * x234 - x246;
                T x248 = (4.0 / 3.0) * x245;
                T x249 = x115 * x237 + x117 * x233 - x248;
                T x250 = x13 * x131;
                T x251 = x140 * x15;
                T x252 = x250 + x251;
                T x253 = C1_0 * (x77 - x78);
                T x254 = x86 * (3 * x77 - 3 * x78);
                T x255 = x90 * (-5.0 / 3.0 * x77 + (5.0 / 3.0) * x78);
                T x256 = x255 * x33;
                T x257 = x18 * x81;
                T x258 = 2 * f[8];
                T x259 = x103 * x257 + x115 * x258;
                T x260 = C0_1 * x83;
                T x261 = 4 * f[8];
                T x262 = x115 * x261 + x117 * x257;
                T x263 = x17 * x255;
                T x264 = x81 * x88;
                T x265 = -x222 + x258 * x96 + 2 * x264;
                T x266 = f[8] * x99 - x224 + 4 * x264;
                T x267 = x226 + x227;
                T x268 = x255 * x27;
                T x269 = x108 * x258 + x246 + x257 * x97;
                T x270 = x108 * x261 + x109 * x257 + x248;
                T x271 = -x250 - x251;
                T x272 = x41 * x91;
                T x273 = x49 * x91;
                T x274 = x57 * x91;
                T x275 = x110 * x49;
                T x276 = x110 * x41;
                T x277 = x110 * x57;
                T x278 = x121 * x57;
                T x279 = x121 * x41;
                T x280 = x121 * x49;
                T x281 = x128 * x41;
                T x282 = x128 * x49;
                T x283 = x131 * x161 + x136 * x162;
                T x284 = x136 * x165 + x140 * x161;
                T x285 = x128 * x57;
                T x286 = x131 * x185 + x136 * x186;
                T x287 = x136 * x189 + x140 * x185;
                T x288 = x159 * x49;
                T x289 = x159 * x41;
                T x290 = x159 * x57;
                T x291 = x161 * x186 + x162 * x185;
                T x292 = x161 * x189 + x165 * x185;
                T x293 = x183 * x57;
                T x294 = x183 * x41;
                T x295 = x183 * x49;
                T x296 = x202 * x41;
                T x297 = x131 * x210 + x136 * x205;
                T x298 = x136 * x214 + x140 * x210;
                T x299 = x202 * x49;
                T x300 = f[2] * x19;
                T x301 = (2.0 / 3.0) * x300;
                T x302 = x161 * x205 + x162 * x210 + x301;
                T x303 = (4.0 / 3.0) * x300;
                T x304 = x161 * x214 + x165 * x210 + x303;
                T x305 = x117 * x15;
                T x306 = x103 * x13;
                T x307 = -x305 - x306;
                T x308 = x202 * x57;
                T x309 = f[1] * x19;
                T x310 = (2.0 / 3.0) * x309;
                T x311 = x185 * x205 + x186 * x210 - x310;
                T x312 = (4.0 / 3.0) * x309;
                T x313 = x185 * x214 + x189 * x210 - x312;
                T x314 = x13 * x97;
                T x315 = x109 * x15;
                T x316 = x314 + x315;
                T x317 = x231 * x49;
                T x318 = x161 * x234 + x162 * x233;
                T x319 = x161 * x237 + x165 * x233;
                T x320 = x231 * x41;
                T x321 = x131 * x233 + x136 * x234 - x301;
                T x322 = x136 * x237 + x140 * x233 - x303;
                T x323 = x305 + x306;
                T x324 = x231 * x57;
                T x325 = f[0] * x19;
                T x326 = (2.0 / 3.0) * x325;
                T x327 = x185 * x234 + x186 * x233 + x326;
                T x328 = (4.0 / 3.0) * x325;
                T x329 = x185 * x237 + x189 * x233 + x328;
                T x330 = f[0] * x143;
                T x331 = f[0] * x145;
                T x332 = -x330 - x331;
                T x333 = x255 * x57;
                T x334 = x185 * x258 + x186 * x257;
                T x335 = x185 * x261 + x189 * x257;
                T x336 = x255 * x41;
                T x337 = x131 * x257 + x136 * x258 + x310;
                T x338 = x136 * x261 + x140 * x257 + x312;
                T x339 = -x314 - x315;
                T x340 = x255 * x49;
                T x341 = x161 * x258 + x162 * x257 - x326;
                T x342 = x161 * x261 + x165 * x257 - x328;
                T x343 = x330 + x331;
                T x344 = x65 * x91;
                T x345 = x73 * x91;
                T x346 = x81 * x91;
                T x347 = x110 * x73;
                T x348 = x110 * x65;
                T x349 = x110 * x81;
                T x350 = x121 * x81;
                T x351 = x121 * x65;
                T x352 = x121 * x73;
                T x353 = x128 * x65;
                T x354 = x128 * x73;
                T x355 = x128 * x81;
                T x356 = x159 * x73;
                T x357 = x159 * x65;
                T x358 = x159 * x81;
                T x359 = x183 * x81;
                T x360 = x183 * x65;
                T x361 = x183 * x73;
                T x362 = x202 * x65;
                T x363 = x202 * x73;
                T x364 = x205 * x233 + x210 * x234;
                T x365 = x210 * x237 + x214 * x233;
                T x366 = x202 * x81;
                T x367 = x205 * x257 + x210 * x258;
                T x368 = x210 * x261 + x214 * x257;
                T x369 = x231 * x73;
                T x370 = x231 * x65;
                T x371 = x231 * x81;
                T x372 = x233 * x258 + x234 * x257;
                T x373 = x233 * x261 + x237 * x257;
                T x374 = x255 * x81;
                T x375 = x255 * x65;
                T x376 = x255 * x73;
                e += dx * (C0_0 * x11 + C0_1 * pow(x11, 2) + C1_0 * x8 + C1_1 * pow(x7, 4));
                lf[0] += dx * (grad_test[0] * (C0_0 * x21 + x12 * x13 + x14 * x15 + x23 * x24) +
                               grad_test[1] * (C0_0 * x29 + x13 * x25 + x15 * x26 + x24 * x30) +
                               grad_test[2] * (C0_0 * x35 + x13 * x31 + x15 * x32 + x24 * x36));
                lf[1] += dx * (grad_test[0] * (C0_0 * x43 + x13 * x39 + x15 * x40 + x24 * x44) +
                               grad_test[1] * (C0_0 * x51 + x13 * x47 + x15 * x48 + x24 * x52) +
                               grad_test[2] * (C0_0 * x59 + x13 * x55 + x15 * x56 + x24 * x60));
                lf[2] += dx * (grad_test[0] * (C0_0 * x67 + x13 * x63 + x15 * x64 + x24 * x68) +
                               grad_test[1] * (C0_0 * x75 + x13 * x71 + x15 * x72 + x24 * x76) +
                               grad_test[2] * (C0_0 * x83 + x13 * x79 + x15 * x80 + x24 * x84));
                bf[0] +=
                    dx * (grad_trial[0] * (grad_test[0] * (C0_0 * (x16 + 4 * x89 + x92) + x12 * x85 + x14 * x87 +
                                                           x23 * x93 + x24 * (x22 + 8 * x89 + 2 * x92)) +
                                           grad_test[1] * (C0_0 * (x94 + x98) + x24 * (x100 + 2 * x94) + x25 * x85 +
                                                           x26 * x87 + x30 * x93) +
                                           grad_test[2] * (C0_0 * (x101 + x104) + x24 * (2 * x101 + x105) + x31 * x85 +
                                                           x32 * x87 + x36 * x93)) +
                          grad_trial[1] * (grad_test[0] * (C0_0 * (x113 + x98) + x106 * x12 + x107 * x14 + x112 * x23 +
                                                           x24 * (x100 + 2 * x113)) +
                                           grad_test[1] * (C0_0 * (x108 * x109 + x111 + x16) + x106 * x25 + x107 * x26 +
                                                           x112 * x30 + x24 * (8 * f[1] * x108 + 2 * x111 + x22)) +
                                           grad_test[2] * (C0_0 * (x114 + x116) + x106 * x31 + x107 * x32 + x112 * x36 +
                                                           x24 * (2 * x114 + x118))) +
                          grad_trial[2] * (grad_test[0] * (C0_0 * (x104 + x124) + x119 * x12 + x120 * x14 + x123 * x23 +
                                                           x24 * (x105 + 2 * x124)) +
                                           grad_test[1] * (C0_0 * (x116 + x125) + x119 * x25 + x120 * x26 + x123 * x30 +
                                                           x24 * (x118 + 2 * x125)) +
                                           grad_test[2] * (C0_0 * (x115 * x117 + x122 + x16) + x119 * x31 + x120 * x32 +
                                                           x123 * x36 + x24 * (8 * f[2] * x115 + 2 * x122 + x22))));
                bf[1] += dx * (grad_trial[0] * (grad_test[0] * (C0_0 * (x129 + x132) + x12 * x126 + x127 * x14 +
                                                                x133 * x23 + x24 * (2 * x129 + x134)) +
                                                grad_test[1] * (C0_0 * (x135 + x139) + x126 * x25 + x127 * x26 +
                                                                x133 * x30 + x147 + x24 * (2 * x135 + x142)) +
                                                grad_test[2] * (C0_0 * (x148 + x151) + x126 * x31 + x127 * x32 +
                                                                x133 * x36 + x156 + x24 * (2 * x148 + x153))) +
                               grad_trial[1] * (grad_test[0] * (C0_0 * (x167 + x169) + x12 * x157 + x14 * x158 +
                                                                x164 * x23 + x171 + x24 * (2 * x167 + x170)) +
                                                grad_test[1] * (C0_0 * (x160 + x163) + x157 * x25 + x158 * x26 +
                                                                x164 * x30 + x24 * (2 * x160 + x166)) +
                                                grad_test[2] * (C0_0 * (x172 + x175) + x157 * x31 + x158 * x32 +
                                                                x164 * x36 + x180 + x24 * (2 * x172 + x177))) +
                               grad_trial[2] * (grad_test[0] * (C0_0 * (x191 + x193) + x12 * x181 + x14 * x182 +
                                                                x188 * x23 + x195 + x24 * (2 * x191 + x194)) +
                                                grad_test[1] * (C0_0 * (x196 + x197) + x181 * x25 + x182 * x26 +
                                                                x188 * x30 + x199 + x24 * (2 * x196 + x198)) +
                                                grad_test[2] * (C0_0 * (x184 + x187) + x181 * x31 + x182 * x32 +
                                                                x188 * x36 + x24 * (2 * x184 + x190))));
                bf[2] += dx * (grad_trial[0] * (grad_test[0] * (C0_0 * (x203 + x206) + x12 * x200 + x14 * x201 +
                                                                x207 * x23 + x24 * (2 * x203 + x208)) +
                                                grad_test[1] * (C0_0 * (x209 + x213) + x200 * x25 + x201 * x26 +
                                                                x207 * x30 + x219 + x24 * (2 * x209 + x216)) +
                                                grad_test[2] * (C0_0 * (x220 + x223) + x200 * x31 + x201 * x32 +
                                                                x207 * x36 + x228 + x24 * (2 * x220 + x225))) +
                               grad_trial[1] * (grad_test[0] * (C0_0 * (x239 + x241) + x12 * x229 + x14 * x230 +
                                                                x23 * x236 + x24 * (2 * x239 + x242) + x243) +
                                                grad_test[1] * (C0_0 * (x232 + x235) + x229 * x25 + x230 * x26 +
                                                                x236 * x30 + x24 * (2 * x232 + x238)) +
                                                grad_test[2] * (C0_0 * (x244 + x247) + x229 * x31 + x230 * x32 +
                                                                x236 * x36 + x24 * (2 * x244 + x249) + x252)) +
                               grad_trial[2] * (grad_test[0] * (C0_0 * (x263 + x265) + x12 * x253 + x14 * x254 +
                                                                x23 * x260 + x24 * (2 * x263 + x266) + x267) +
                                                grad_test[1] * (C0_0 * (x268 + x269) + x24 * (2 * x268 + x270) +
                                                                x25 * x253 + x254 * x26 + x260 * x30 + x271) +
                                                grad_test[2] * (C0_0 * (x256 + x259) + x24 * (2 * x256 + x262) +
                                                                x253 * x31 + x254 * x32 + x260 * x36)));
                bf[3] += dx * (grad_trial[0] * (grad_test[0] * (C0_0 * (x132 + x272) + x24 * (x134 + 2 * x272) +
                                                                x39 * x85 + x40 * x87 + x44 * x93) +
                                                grad_test[1] * (C0_0 * (x169 + x273) + x171 + x24 * (x170 + 2 * x273) +
                                                                x47 * x85 + x48 * x87 + x52 * x93) +
                                                grad_test[2] * (C0_0 * (x193 + x274) + x195 + x24 * (x194 + 2 * x274) +
                                                                x55 * x85 + x56 * x87 + x60 * x93)) +
                               grad_trial[1] * (grad_test[0] * (C0_0 * (x139 + x276) + x106 * x39 + x107 * x40 +
                                                                x112 * x44 + x147 + x24 * (x142 + 2 * x276)) +
                                                grad_test[1] * (C0_0 * (x163 + x275) + x106 * x47 + x107 * x48 +
                                                                x112 * x52 + x24 * (x166 + 2 * x275)) +
                                                grad_test[2] * (C0_0 * (x197 + x277) + x106 * x55 + x107 * x56 +
                                                                x112 * x60 + x199 + x24 * (x198 + 2 * x277))) +
                               grad_trial[2] * (grad_test[0] * (C0_0 * (x151 + x279) + x119 * x39 + x120 * x40 +
                                                                x123 * x44 + x156 + x24 * (x153 + 2 * x279)) +
                                                grad_test[1] * (C0_0 * (x175 + x280) + x119 * x47 + x120 * x48 +
                                                                x123 * x52 + x180 + x24 * (x177 + 2 * x280)) +
                                                grad_test[2] * (C0_0 * (x187 + x278) + x119 * x55 + x120 * x56 +
                                                                x123 * x60 + x24 * (x190 + 2 * x278))));
                bf[4] +=
                    dx * (grad_trial[0] * (grad_test[0] * (C0_0 * (x136 * x140 + x16 + x281) + x126 * x39 + x127 * x40 +
                                                           x133 * x44 + x24 * (8 * f[3] * x136 + x22 + 2 * x281)) +
                                           grad_test[1] * (C0_0 * (x282 + x283) + x126 * x47 + x127 * x48 + x133 * x52 +
                                                           x24 * (2 * x282 + x284)) +
                                           grad_test[2] * (C0_0 * (x285 + x286) + x126 * x55 + x127 * x56 + x133 * x60 +
                                                           x24 * (2 * x285 + x287))) +
                          grad_trial[1] * (grad_test[0] * (C0_0 * (x283 + x289) + x157 * x39 + x158 * x40 + x164 * x44 +
                                                           x24 * (x284 + 2 * x289)) +
                                           grad_test[1] * (C0_0 * (x16 + x161 * x165 + x288) + x157 * x47 + x158 * x48 +
                                                           x164 * x52 + x24 * (8 * f[4] * x161 + x22 + 2 * x288)) +
                                           grad_test[2] * (C0_0 * (x290 + x291) + x157 * x55 + x158 * x56 + x164 * x60 +
                                                           x24 * (2 * x290 + x292))) +
                          grad_trial[2] * (grad_test[0] * (C0_0 * (x286 + x294) + x181 * x39 + x182 * x40 + x188 * x44 +
                                                           x24 * (x287 + 2 * x294)) +
                                           grad_test[1] * (C0_0 * (x291 + x295) + x181 * x47 + x182 * x48 + x188 * x52 +
                                                           x24 * (x292 + 2 * x295)) +
                                           grad_test[2] * (C0_0 * (x16 + x185 * x189 + x293) + x181 * x55 + x182 * x56 +
                                                           x188 * x60 + x24 * (8 * f[5] * x185 + x22 + 2 * x293))));
                bf[5] += dx * (grad_trial[0] * (grad_test[0] * (C0_0 * (x296 + x297) + x200 * x39 + x201 * x40 +
                                                                x207 * x44 + x24 * (2 * x296 + x298)) +
                                                grad_test[1] * (C0_0 * (x299 + x302) + x200 * x47 + x201 * x48 +
                                                                x207 * x52 + x24 * (2 * x299 + x304) + x307) +
                                                grad_test[2] * (C0_0 * (x308 + x311) + x200 * x55 + x201 * x56 +
                                                                x207 * x60 + x24 * (2 * x308 + x313) + x316)) +
                               grad_trial[1] * (grad_test[0] * (C0_0 * (x320 + x321) + x229 * x39 + x230 * x40 +
                                                                x236 * x44 + x24 * (2 * x320 + x322) + x323) +
                                                grad_test[1] * (C0_0 * (x317 + x318) + x229 * x47 + x230 * x48 +
                                                                x236 * x52 + x24 * (2 * x317 + x319)) +
                                                grad_test[2] * (C0_0 * (x324 + x327) + x229 * x55 + x230 * x56 +
                                                                x236 * x60 + x24 * (2 * x324 + x329) + x332)) +
                               grad_trial[2] * (grad_test[0] * (C0_0 * (x336 + x337) + x24 * (2 * x336 + x338) +
                                                                x253 * x39 + x254 * x40 + x260 * x44 + x339) +
                                                grad_test[1] * (C0_0 * (x340 + x341) + x24 * (2 * x340 + x342) +
                                                                x253 * x47 + x254 * x48 + x260 * x52 + x343) +
                                                grad_test[2] * (C0_0 * (x333 + x334) + x24 * (2 * x333 + x335) +
                                                                x253 * x55 + x254 * x56 + x260 * x60)));
                bf[6] += dx * (grad_trial[0] * (grad_test[0] * (C0_0 * (x206 + x344) + x24 * (x208 + 2 * x344) +
                                                                x63 * x85 + x64 * x87 + x68 * x93) +
                                                grad_test[1] * (C0_0 * (x241 + x345) + x24 * (x242 + 2 * x345) + x243 +
                                                                x71 * x85 + x72 * x87 + x76 * x93) +
                                                grad_test[2] * (C0_0 * (x265 + x346) + x24 * (x266 + 2 * x346) + x267 +
                                                                x79 * x85 + x80 * x87 + x84 * x93)) +
                               grad_trial[1] * (grad_test[0] * (C0_0 * (x213 + x348) + x106 * x63 + x107 * x64 +
                                                                x112 * x68 + x219 + x24 * (x216 + 2 * x348)) +
                                                grad_test[1] * (C0_0 * (x235 + x347) + x106 * x71 + x107 * x72 +
                                                                x112 * x76 + x24 * (x238 + 2 * x347)) +
                                                grad_test[2] * (C0_0 * (x269 + x349) + x106 * x79 + x107 * x80 +
                                                                x112 * x84 + x24 * (x270 + 2 * x349) + x271)) +
                               grad_trial[2] * (grad_test[0] * (C0_0 * (x223 + x351) + x119 * x63 + x120 * x64 +
                                                                x123 * x68 + x228 + x24 * (x225 + 2 * x351)) +
                                                grad_test[1] * (C0_0 * (x247 + x352) + x119 * x71 + x120 * x72 +
                                                                x123 * x76 + x24 * (x249 + 2 * x352) + x252) +
                                                grad_test[2] * (C0_0 * (x259 + x350) + x119 * x79 + x120 * x80 +
                                                                x123 * x84 + x24 * (x262 + 2 * x350))));
                bf[7] += dx * (grad_trial[0] * (grad_test[0] * (C0_0 * (x297 + x353) + x126 * x63 + x127 * x64 +
                                                                x133 * x68 + x24 * (x298 + 2 * x353)) +
                                                grad_test[1] * (C0_0 * (x321 + x354) + x126 * x71 + x127 * x72 +
                                                                x133 * x76 + x24 * (x322 + 2 * x354) + x323) +
                                                grad_test[2] * (C0_0 * (x337 + x355) + x126 * x79 + x127 * x80 +
                                                                x133 * x84 + x24 * (x338 + 2 * x355) + x339)) +
                               grad_trial[1] * (grad_test[0] * (C0_0 * (x302 + x357) + x157 * x63 + x158 * x64 +
                                                                x164 * x68 + x24 * (x304 + 2 * x357) + x307) +
                                                grad_test[1] * (C0_0 * (x318 + x356) + x157 * x71 + x158 * x72 +
                                                                x164 * x76 + x24 * (x319 + 2 * x356)) +
                                                grad_test[2] * (C0_0 * (x341 + x358) + x157 * x79 + x158 * x80 +
                                                                x164 * x84 + x24 * (x342 + 2 * x358) + x343)) +
                               grad_trial[2] * (grad_test[0] * (C0_0 * (x311 + x360) + x181 * x63 + x182 * x64 +
                                                                x188 * x68 + x24 * (x313 + 2 * x360) + x316) +
                                                grad_test[1] * (C0_0 * (x327 + x361) + x181 * x71 + x182 * x72 +
                                                                x188 * x76 + x24 * (x329 + 2 * x361) + x332) +
                                                grad_test[2] * (C0_0 * (x334 + x359) + x181 * x79 + x182 * x80 +
                                                                x188 * x84 + x24 * (x335 + 2 * x359))));
                bf[8] +=
                    dx *
                    (grad_trial[0] * (grad_test[0] * (C0_0 * (x16 + x210 * x214 + x362) + x200 * x63 + x201 * x64 +
                                                      x207 * x68 + x24 * (8 * f[6] * x210 + x22 + 2 * x362)) +
                                      grad_test[1] * (C0_0 * (x363 + x364) + x200 * x71 + x201 * x72 + x207 * x76 +
                                                      x24 * (2 * x363 + x365)) +
                                      grad_test[2] * (C0_0 * (x366 + x367) + x200 * x79 + x201 * x80 + x207 * x84 +
                                                      x24 * (2 * x366 + x368))) +
                     grad_trial[1] * (grad_test[0] * (C0_0 * (x364 + x370) + x229 * x63 + x230 * x64 + x236 * x68 +
                                                      x24 * (x365 + 2 * x370)) +
                                      grad_test[1] * (C0_0 * (x16 + x233 * x237 + x369) + x229 * x71 + x230 * x72 +
                                                      x236 * x76 + x24 * (8 * f[7] * x233 + x22 + 2 * x369)) +
                                      grad_test[2] * (C0_0 * (x371 + x372) + x229 * x79 + x230 * x80 + x236 * x84 +
                                                      x24 * (2 * x371 + x373))) +
                     grad_trial[2] *
                         (grad_test[0] *
                              (C0_0 * (x367 + x375) + x24 * (x368 + 2 * x375) + x253 * x63 + x254 * x64 + x260 * x68) +
                          grad_test[1] *
                              (C0_0 * (x372 + x376) + x24 * (x373 + 2 * x376) + x253 * x71 + x254 * x72 + x260 * x76) +
                          grad_test[2] * (C0_0 * (x16 + x257 * x261 + x374) + x24 * (8 * f[8] * x257 + x22 + 2 * x374) +
                                          x253 * x79 + x254 * x80 + x260 * x84)));
            }

            T C0_0{1.0};
            T C1_0{1.0};
            T C0_1{1.0};
            T C1_1{1.0};
        };
    }  // namespace kernels
}  // namespace utopia

#endif  // UTOPIA_TPL_HYPERELASTICITY_Yeoh_3_IMPL_hpp
