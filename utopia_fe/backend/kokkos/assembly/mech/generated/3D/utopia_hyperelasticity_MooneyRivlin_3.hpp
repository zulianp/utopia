#ifndef UTOPIA_TPL_HYPERELASTICITY_MooneyRivlin_3_IMPL_hpp
#define UTOPIA_TPL_HYPERELASTICITY_MooneyRivlin_3_IMPL_hpp

#include "utopia_Input.hpp"

#include "utopia_hyperelasticity_MooneyRivlin.hpp"

namespace utopia {
    namespace kernels {

        /**
         * Specialization of MooneyRivlin for dimension 3
         */
        template <typename T>
        class MooneyRivlin<T, 3> {
        public:
            static constexpr int Dim = 3;

            UTOPIA_FUNCTION static constexpr const char *class_name() { return "MooneyRivlin_3"; }

            class Params : public Configurable {
            public:
                void read(Input &in) override {
                    in.get("C1", C1);
                    in.get("C2", C2);
                    in.get("K", K);
                }

                T C1{0.083};
                T C2{0.083};
                T K{166.67};
            };

            MooneyRivlin(const Params &params) {
                C1 = params.C1;
                C2 = params.C2;
                K = params.K;
            }

            UTOPIA_FUNCTION void hessian(const T *UTOPIA_RESTRICT f,
                                         const T *grad_test,
                                         const T *grad_trial,
                                         const T dx,
                                         T *UTOPIA_RESTRICT bf) const {
                using namespace utopia::device;
                // Automatically generated
                T x0 = f[4] * f[8];
                T x1 = f[5] * f[7];
                T x2 = x0 - x1;
                T x3 = f[5] * f[6];
                T x4 = f[3] * f[7];
                T x5 = f[3] * f[8];
                T x6 = f[4] * f[6];
                T x7 = f[0] * x0 - f[0] * x1 + f[1] * x3 - f[1] * x5 + f[2] * x4 - f[2] * x6;
                T x8 = K / pow(x7, 2);
                T x9 = x2 * x8;
                T x10 = log(x7);
                T x11 = -x10 * x2;
                T x12 = 2 / pow(x7, 2.0 / 3.0);
                T x13 = pow(x7, -5.0 / 3.0);
                T x14 = (2.0 / 3.0) * f[5] * f[7] - 2.0 / 3.0 * x0;
                T x15 = x13 * x14;
                T x16 = pow(f[0], 2);
                T x17 = pow(f[1], 2);
                T x18 = pow(f[2], 2);
                T x19 = x16 + x17 + x18;
                T x20 = pow(f[3], 2);
                T x21 = pow(f[4], 2);
                T x22 = pow(f[5], 2);
                T x23 = x20 + x21 + x22;
                T x24 = pow(f[6], 2);
                T x25 = pow(f[7], 2);
                T x26 = pow(f[8], 2);
                T x27 = x24 + x25 + x26;
                T x28 = x19 + x23 + x27;
                T x29 = x28 / pow(x7, 8.0 / 3.0);
                T x30 = x29 * ((5.0 / 3.0) * f[5] * f[7] - 5.0 / 3.0 * x0);
                T x31 = 2 * x22;
                T x32 = 2 * x26;
                T x33 = x31 + x32;
                T x34 = 2 * x21;
                T x35 = 2 * x25;
                T x36 = x34 + x35;
                T x37 = pow(x7, -4.0 / 3.0);
                T x38 = 2 * f[0];
                T x39 = f[0] * f[3];
                T x40 = f[1] * f[4];
                T x41 = f[2] * f[5];
                T x42 = x39 + x40 + x41;
                T x43 = 2 * f[3];
                T x44 = f[0] * f[6];
                T x45 = f[1] * f[7];
                T x46 = f[2] * f[8];
                T x47 = x44 + x45 + x46;
                T x48 = 2 * f[6];
                T x49 = 2 * f[0] * x28 - x19 * x38 - x42 * x43 - x47 * x48;
                T x50 = pow(x7, -7.0 / 3.0);
                T x51 = (4.0 / 3.0) * f[5] * f[7] - 4.0 / 3.0 * x0;
                T x52 = x50 * x51;
                T x53 = f[3] * f[6];
                T x54 = f[4] * f[7];
                T x55 = f[5] * f[8];
                T x56 = x53 + x54 + x55;
                T x57 = -1.0 / 2.0 * pow(x19, 2) - 1.0 / 2.0 * pow(x23, 2) - 1.0 / 2.0 * pow(x27, 2) +
                        (1.0 / 2.0) * pow(x28, 2) - pow(x42, 2) - pow(x47, 2) - pow(x56, 2);
                T x58 = x57 / pow(x7, 10.0 / 3.0);
                T x59 = x58 * ((7.0 / 3.0) * f[5] * f[7] - 7.0 / 3.0 * x0);
                T x60 = -f[5] * f[6] + x5;
                T x61 = -x60;
                T x62 = x61 * x9;
                T x63 = x61 * x8;
                T x64 = -2.0 / 3.0 * x3 + (2.0 / 3.0) * x5;
                T x65 = x13 * x38;
                T x66 = 2 * f[1];
                T x67 = x15 * x66 + x64 * x65;
                T x68 = -4.0 / 3.0 * x3 + (4.0 / 3.0) * x5;
                T x69 = f[4] * x43;
                T x70 = f[7] * x48;
                T x71 = 2 * x42;
                T x72 = 2 * x47;
                T x73 = 2 * f[1] * x28 - f[4] * x71 - f[7] * x72 - x19 * x66;
                T x74 = x49 * x50;
                T x75 = x37 * (-x69 - x70) + x52 * x73 + x68 * x74;
                T x76 = x4 - x6;
                T x77 = x76 * x9;
                T x78 = x76 * x8;
                T x79 = (2.0 / 3.0) * f[4] * f[6] - 2.0 / 3.0 * x4;
                T x80 = 2 * f[2];
                T x81 = x15 * x80 + x65 * x79;
                T x82 = (4.0 / 3.0) * f[4] * f[6] - 4.0 / 3.0 * x4;
                T x83 = f[5] * x43;
                T x84 = f[8] * x48;
                T x85 = 2 * f[2] * x28 - f[5] * x71 - f[8] * x72 - x19 * x80;
                T x86 = x37 * (-x83 - x84) + x52 * x85 + x74 * x82;
                T x87 = x10 * x60;
                T x88 = x13 * x64;
                T x89 = x29 * (-5.0 / 3.0 * x3 + (5.0 / 3.0) * x5);
                T x90 = 2 * x20;
                T x91 = 2 * x24;
                T x92 = x90 + x91;
                T x93 = x50 * x73;
                T x94 = x58 * (-7.0 / 3.0 * x3 + (7.0 / 3.0) * x5);
                T x95 = x63 * x76;
                T x96 = x13 * x79;
                T x97 = x66 * x96 + x80 * x88;
                T x98 = 2 * f[4];
                T x99 = f[5] * x98;
                T x100 = 2 * f[7];
                T x101 = f[8] * x100;
                T x102 = x50 * x68;
                T x103 = x102 * x85 + x37 * (-x101 - x99) + x82 * x93;
                T x104 = -x10 * x76;
                T x105 = x29 * ((5.0 / 3.0) * f[4] * f[6] - 5.0 / 3.0 * x4);
                T x106 = x50 * x85;
                T x107 = x58 * ((7.0 / 3.0) * f[4] * f[6] - 7.0 / 3.0 * x4);
                T x108 = f[1] * f[8];
                T x109 = -f[2] * f[7] + x108;
                T x110 = -x109;
                T x111 = x110 * x9;
                T x112 = x110 * x8;
                T x113 = f[2] * f[7];
                T x114 = (2.0 / 3.0) * x108 - 2.0 / 3.0 * x113;
                T x115 = x114 * x65 + x15 * x43;
                T x116 = (4.0 / 3.0) * x108 - 4.0 / 3.0 * x113;
                T x117 = 2 * x40;
                T x118 = 2 * x41;
                T x119 = 2 * f[3] * x28 - x23 * x43 - x38 * x42 - x48 * x56;
                T x120 = x116 * x74 + x119 * x52 + x37 * (-x117 - x118);
                T x121 = f[0] * f[8];
                T x122 = (2.0 / 3.0) * f[2] * f[6] - 2.0 / 3.0 * x121;
                T x123 = f[8] * x13;
                T x124 = (2.0 / 3.0) * x28;
                T x125 = x123 * x124;
                T x126 = x122 * x65 - x125 + x15 * x98;
                T x127 = (4.0 / 3.0) * f[2] * f[6] - 4.0 / 3.0 * x121;
                T x128 = f[0] * f[4];
                T x129 = f[1] * f[3];
                T x130 = 2 * f[4] * x28 - x100 * x56 - x23 * x98 - x42 * x66;
                T x131 = (4.0 / 3.0) * x50 * x57;
                T x132 = f[8] * x131;
                T x133 = x127 * x74 + x130 * x52 - x132 + x37 * (4 * x128 - 2 * x129);
                T x134 = f[2] * f[6];
                T x135 = x121 - x134;
                T x136 = x135 * x8;
                T x137 = K * x10 / x7;
                T x138 = f[8] * x137;
                T x139 = x135 * x9 + x138;
                T x140 = f[0] * f[7];
                T x141 = f[1] * f[6];
                T x142 = (2.0 / 3.0) * x140 - 2.0 / 3.0 * x141;
                T x143 = 2 * f[5];
                T x144 = x124 * x13;
                T x145 = f[7] * x144;
                T x146 = x142 * x65 + x143 * x15 + x145;
                T x147 = (4.0 / 3.0) * x140 - 4.0 / 3.0 * x141;
                T x148 = f[0] * f[5];
                T x149 = f[2] * f[3];
                T x150 = 2 * f[8];
                T x151 = -f[2] * x71 + 2 * f[5] * x28 - x143 * x23 - x150 * x56;
                T x152 = f[7] * x131;
                T x153 = x147 * x74 + x151 * x52 + x152 + x37 * (4 * x148 - 2 * x149);
                T x154 = -f[1] * f[6] + x140;
                T x155 = -x154;
                T x156 = x155 * x8;
                T x157 = f[7] * x137;
                T x158 = x155 * x9 - x157;
                T x159 = x135 * x63;
                T x160 = x13 * x66;
                T x161 = x122 * x160 + x88 * x98;
                T x162 = 2 * x39;
                T x163 = x102 * x130 + x127 * x93 + x37 * (-x118 - x162);
                T x164 = f[6] * x144;
                T x165 = x142 * x160 + x143 * x88 - x164;
                T x166 = f[1] * f[5];
                T x167 = f[2] * f[4];
                T x168 = f[6] * x131;
                T x169 = x102 * x151 + x147 * x93 - x168 + x37 * (4 * x166 - 2 * x167);
                T x170 = f[6] * x137;
                T x171 = x155 * x63 + x170;
                T x172 = x114 * x160 + x125 + x43 * x88;
                T x173 = x102 * x119 + x116 * x93 + x132 + x37 * (4 * f[1] * f[3] - 2 * x128);
                T x174 = x110 * x63 - x138;
                T x175 = x155 * x78;
                T x176 = x13 * x80;
                T x177 = x142 * x176 + x143 * x96;
                T x178 = x50 * x82;
                T x179 = x106 * x147 + x151 * x178 + x37 * (-x117 - x162);
                T x180 = x114 * x176 - x145 + x43 * x96;
                T x181 = x106 * x116 + x119 * x178 - x152 + x37 * (4 * f[2] * f[3] - 2 * x148);
                T x182 = x110 * x78 + x157;
                T x183 = x122 * x176 + x164 + x96 * x98;
                T x184 = x106 * x127 + x130 * x178 + x168 + x37 * (4 * f[2] * f[4] - 2 * x166);
                T x185 = x135 * x78 - x170;
                T x186 = x166 - x167;
                T x187 = x186 * x9;
                T x188 = x186 * x8;
                T x189 = (2.0 / 3.0) * f[2] * f[4] - 2.0 / 3.0 * x166;
                T x190 = x15 * x48 + x189 * x65;
                T x191 = (4.0 / 3.0) * f[2] * f[4] - 4.0 / 3.0 * x166;
                T x192 = 2 * x45;
                T x193 = 2 * x46;
                T x194 = 2 * f[6] * x28 - x27 * x48 - x38 * x47 - x43 * x56;
                T x195 = x191 * x74 + x194 * x52 + x37 * (-x192 - x193);
                T x196 = (2.0 / 3.0) * f[1] * f[3] - 2.0 / 3.0 * x128;
                T x197 = f[4] * x144;
                T x198 = x15 * x150 + x196 * x65 - x197;
                T x199 = (4.0 / 3.0) * f[1] * f[3] - 4.0 / 3.0 * x128;
                T x200 = -f[2] * x72 + 2 * f[8] * x28 - x143 * x56 - x150 * x27;
                T x201 = f[4] * x131;
                T x202 = x199 * x74 + x200 * x52 - x201 + x37 * (4 * x121 - 2 * x134);
                T x203 = x128 - x129;
                T x204 = x203 * x8;
                T x205 = f[4] * x137;
                T x206 = x203 * x9 + x205;
                T x207 = (2.0 / 3.0) * x148 - 2.0 / 3.0 * x149;
                T x208 = f[5] * x144;
                T x209 = x100 * x15 + x207 * x65 + x208;
                T x210 = (4.0 / 3.0) * x148 - 4.0 / 3.0 * x149;
                T x211 = 2 * f[7] * x28 - x100 * x27 - x47 * x66 - x56 * x98;
                T x212 = f[5] * x131;
                T x213 = x210 * x74 + x211 * x52 + x212 + x37 * (4 * x140 - 2 * x141);
                T x214 = -f[2] * f[3] + x148;
                T x215 = -x214;
                T x216 = x215 * x8;
                T x217 = f[5] * x137;
                T x218 = x215 * x9 - x217;
                T x219 = x215 * x63;
                T x220 = x100 * x88 + x160 * x207;
                T x221 = 2 * x44;
                T x222 = x102 * x211 + x210 * x93 + x37 * (-x193 - x221);
                T x223 = x160 * x189 - x208 + x48 * x88;
                T x224 = x102 * x194 + x191 * x93 - x212 + x37 * (4 * f[1] * f[6] - 2 * x140);
                T x225 = x186 * x63 + x217;
                T x226 = f[3] * x144;
                T x227 = x150 * x88 + x160 * x196 + x226;
                T x228 = f[3] * x131;
                T x229 = x102 * x200 + x199 * x93 + x228 + x37 * (4 * x108 - 2 * x113);
                T x230 = f[3] * x137;
                T x231 = x203 * x63 - x230;
                T x232 = x203 * x78;
                T x233 = x150 * x96 + x176 * x196;
                T x234 = x106 * x199 + x178 * x200 + x37 * (-x192 - x221);
                T x235 = x100 * x96 + x176 * x207 - x226;
                T x236 = x106 * x210 + x178 * x211 - x228 + x37 * (4 * f[2] * f[7] - 2 * x108);
                T x237 = x215 * x78 + x230;
                T x238 = x176 * x189 + x197 + x48 * x96;
                T x239 = x106 * x191 + x178 * x194 + x201 + x37 * (4 * f[2] * f[6] - 2 * x121);
                T x240 = x186 * x78 - x205;
                T x241 = x10 * x109;
                T x242 = x29 * ((5.0 / 3.0) * x108 - 5.0 / 3.0 * x113);
                T x243 = x58 * ((7.0 / 3.0) * x108 - 7.0 / 3.0 * x113);
                T x244 = -x10 * x135;
                T x245 = x29 * ((5.0 / 3.0) * f[2] * f[6] - 5.0 / 3.0 * x121);
                T x246 = x58 * ((7.0 / 3.0) * f[2] * f[6] - 7.0 / 3.0 * x121);
                T x247 = x10 * x154;
                T x248 = x29 * ((5.0 / 3.0) * x140 - 5.0 / 3.0 * x141);
                T x249 = x58 * ((7.0 / 3.0) * x140 - 7.0 / 3.0 * x141);
                T x250 = x114 * x13;
                T x251 = 2 * x18;
                T x252 = x251 + x32;
                T x253 = 2 * x17;
                T x254 = x253 + x35;
                T x255 = x119 * x50;
                T x256 = x112 * x135;
                T x257 = x13 * x43;
                T x258 = x122 * x257 + x250 * x98;
                T x259 = f[1] * x38;
                T x260 = x116 * x50;
                T x261 = x127 * x255 + x130 * x260 + x37 * (-x259 - x70);
                T x262 = x112 * x155;
                T x263 = x142 * x257 + x143 * x250;
                T x264 = f[2] * x38;
                T x265 = x147 * x255 + x151 * x260 + x37 * (-x264 - x84);
                T x266 = x122 * x13;
                T x267 = 2 * x16;
                T x268 = x267 + x91;
                T x269 = x127 * x50;
                T x270 = x136 * x155;
                T x271 = x13 * x142;
                T x272 = x143 * x266 + x271 * x98;
                T x273 = f[2] * x66;
                T x274 = x130 * x50;
                T x275 = x147 * x274 + x151 * x269 + x37 * (-x101 - x273);
                T x276 = x151 * x50;
                T x277 = x112 * x186;
                T x278 = x189 * x257 + x250 * x48;
                T x279 = 2 * x54;
                T x280 = 2 * x55;
                T x281 = x191 * x255 + x194 * x260 + x37 * (-x279 - x280);
                T x282 = f[2] * x144;
                T x283 = x100 * x250 + x207 * x257 - x282;
                T x284 = f[2] * x131;
                T x285 = x210 * x255 + x211 * x260 - x284 + x37 * (4 * x4 - 2 * x6);
                T x286 = f[2] * x137;
                T x287 = x112 * x215 + x286;
                T x288 = f[1] * x144;
                T x289 = x150 * x250 + x196 * x257 + x288;
                T x290 = f[1] * x131;
                T x291 = x199 * x255 + x200 * x260 + x290 + x37 * (-2 * x3 + 4 * x5);
                T x292 = f[1] * x137;
                T x293 = x112 * x203 - x292;
                T x294 = x136 * x215;
                T x295 = x13 * x98;
                T x296 = x100 * x266 + x207 * x295;
                T x297 = 2 * x53;
                T x298 = x210 * x274 + x211 * x269 + x37 * (-x280 - x297);
                T x299 = f[0] * x144;
                T x300 = x150 * x266 + x196 * x295 - x299;
                T x301 = f[0] * x131;
                T x302 = x199 * x274 + x200 * x269 - x301 + x37 * (4 * x0 - 2 * x1);
                T x303 = f[0] * x137;
                T x304 = x136 * x203 + x303;
                T x305 = x189 * x295 + x266 * x48 + x282;
                T x306 = x191 * x274 + x194 * x269 + x284 + x37 * (4 * f[4] * f[6] - 2 * x4);
                T x307 = x136 * x186 - x286;
                T x308 = x156 * x203;
                T x309 = x13 * x143;
                T x310 = x150 * x271 + x196 * x309;
                T x311 = x147 * x50;
                T x312 = x199 * x276 + x200 * x311 + x37 * (-x279 - x297);
                T x313 = x189 * x309 + x271 * x48 - x288;
                T x314 = x191 * x276 + x194 * x311 - x290 + x37 * (4 * f[5] * f[6] - 2 * x5);
                T x315 = x156 * x186 + x292;
                T x316 = x100 * x271 + x207 * x309 + x299;
                T x317 = x210 * x276 + x211 * x311 + x301 + x37 * (4 * f[5] * f[7] - 2 * x0);
                T x318 = x156 * x215 - x303;
                T x319 = -x10 * x186;
                T x320 = x29 * ((5.0 / 3.0) * f[2] * f[4] - 5.0 / 3.0 * x166);
                T x321 = x58 * ((7.0 / 3.0) * f[2] * f[4] - 7.0 / 3.0 * x166);
                T x322 = x10 * x214;
                T x323 = x29 * ((5.0 / 3.0) * x148 - 5.0 / 3.0 * x149);
                T x324 = x58 * ((7.0 / 3.0) * x148 - 7.0 / 3.0 * x149);
                T x325 = -x10 * x203;
                T x326 = x29 * ((5.0 / 3.0) * f[1] * f[3] - 5.0 / 3.0 * x128);
                T x327 = x58 * ((7.0 / 3.0) * f[1] * f[3] - 7.0 / 3.0 * x128);
                T x328 = x13 * x189;
                T x329 = x251 + x31;
                T x330 = x253 + x34;
                T x331 = x191 * x50;
                T x332 = x188 * x215;
                T x333 = x13 * x48;
                T x334 = x100 * x328 + x207 * x333;
                T x335 = x194 * x50;
                T x336 = x210 * x335 + x211 * x331 + x37 * (-x259 - x69);
                T x337 = x188 * x203;
                T x338 = x150 * x328 + x196 * x333;
                T x339 = x199 * x335 + x200 * x331 + x37 * (-x264 - x83);
                T x340 = x13 * x207;
                T x341 = x267 + x90;
                T x342 = x211 * x50;
                T x343 = x203 * x216;
                T x344 = x100 * x13 * x196 + x150 * x340;
                T x345 = x200 * x50;
                T x346 = x199 * x342 + x210 * x345 + x37 * (-x273 - x99);
                bf[0] +=
                    dx * (grad_test[0] *
                              (grad_trial[0] *
                                   (C1 * (4 * f[0] * x15 + x12 + x14 * x30) +
                                    C2 * (x37 * (x33 + x36) + 2 * x49 * x52 + x51 * x59) + x11 * x9 + pow(x2, 2) * x8) +
                               grad_trial[1] * (C1 * (x30 * x64 + x67) + C2 * (x59 * x68 + x75) + x11 * x63 + x62) +
                               grad_trial[2] * (C1 * (x30 * x79 + x81) + C2 * (x59 * x82 + x86) + x11 * x78 + x77)) +
                          grad_test[1] *
                              (grad_trial[0] * (C1 * (x14 * x89 + x67) + C2 * (x51 * x94 + x75) + x62 + x87 * x9) +
                               grad_trial[1] * (C1 * (4 * f[1] * x88 + x12 + x64 * x89) +
                                                C2 * (x37 * (x33 + x92) + 2 * x68 * x93 + x68 * x94) +
                                                pow(x61, 2) * x8 + x63 * x87) +
                               grad_trial[2] * (C1 * (x79 * x89 + x97) + C2 * (x103 + x82 * x94) + x78 * x87 + x95)) +
                          grad_test[2] *
                              (grad_trial[0] * (C1 * (x105 * x14 + x81) + C2 * (x107 * x51 + x86) + x104 * x9 + x77) +
                               grad_trial[1] * (C1 * (x105 * x64 + x97) + C2 * (x103 + x107 * x68) + x104 * x63 + x95) +
                               grad_trial[2] * (C1 * (4 * f[2] * x96 + x105 * x79 + x12) +
                                                C2 * (2 * x106 * x82 + x107 * x82 + x37 * (x36 + x92)) + x104 * x78 +
                                                pow(x76, 2) * x8)));
                bf[1] +=
                    dx *
                    (grad_test[0] *
                         (grad_trial[0] * (C1 * (x114 * x30 + x115) + C2 * (x116 * x59 + x120) + x11 * x112 + x111) +
                          grad_trial[1] * (C1 * (x122 * x30 + x126) + C2 * (x127 * x59 + x133) + x11 * x136 + x139) +
                          grad_trial[2] * (C1 * (x142 * x30 + x146) + C2 * (x147 * x59 + x153) + x11 * x156 + x158)) +
                     grad_test[1] *
                         (grad_trial[0] * (C1 * (x114 * x89 + x172) + C2 * (x116 * x94 + x173) + x112 * x87 + x174) +
                          grad_trial[1] * (C1 * (x122 * x89 + x161) + C2 * (x127 * x94 + x163) + x136 * x87 + x159) +
                          grad_trial[2] * (C1 * (x142 * x89 + x165) + C2 * (x147 * x94 + x169) + x156 * x87 + x171)) +
                     grad_test[2] *
                         (grad_trial[0] * (C1 * (x105 * x114 + x180) + C2 * (x107 * x116 + x181) + x104 * x112 + x182) +
                          grad_trial[1] * (C1 * (x105 * x122 + x183) + C2 * (x107 * x127 + x184) + x104 * x136 + x185) +
                          grad_trial[2] *
                              (C1 * (x105 * x142 + x177) + C2 * (x107 * x147 + x179) + x104 * x156 + x175)));
                bf[2] +=
                    dx *
                    (grad_test[0] *
                         (grad_trial[0] * (C1 * (x189 * x30 + x190) + C2 * (x191 * x59 + x195) + x11 * x188 + x187) +
                          grad_trial[1] * (C1 * (x207 * x30 + x209) + C2 * (x210 * x59 + x213) + x11 * x216 + x218) +
                          grad_trial[2] * (C1 * (x196 * x30 + x198) + C2 * (x199 * x59 + x202) + x11 * x204 + x206)) +
                     grad_test[1] *
                         (grad_trial[0] * (C1 * (x189 * x89 + x223) + C2 * (x191 * x94 + x224) + x188 * x87 + x225) +
                          grad_trial[1] * (C1 * (x207 * x89 + x220) + C2 * (x210 * x94 + x222) + x216 * x87 + x219) +
                          grad_trial[2] * (C1 * (x196 * x89 + x227) + C2 * (x199 * x94 + x229) + x204 * x87 + x231)) +
                     grad_test[2] *
                         (grad_trial[0] * (C1 * (x105 * x189 + x238) + C2 * (x107 * x191 + x239) + x104 * x188 + x240) +
                          grad_trial[1] * (C1 * (x105 * x207 + x235) + C2 * (x107 * x210 + x236) + x104 * x216 + x237) +
                          grad_trial[2] *
                              (C1 * (x105 * x196 + x233) + C2 * (x107 * x199 + x234) + x104 * x204 + x232)));
                bf[3] +=
                    dx *
                    (grad_test[0] *
                         (grad_trial[0] * (C1 * (x115 + x14 * x242) + C2 * (x120 + x243 * x51) + x111 + x241 * x9) +
                          grad_trial[1] * (C1 * (x172 + x242 * x64) + C2 * (x173 + x243 * x68) + x174 + x241 * x63) +
                          grad_trial[2] * (C1 * (x180 + x242 * x79) + C2 * (x181 + x243 * x82) + x182 + x241 * x78)) +
                     grad_test[1] *
                         (grad_trial[0] * (C1 * (x126 + x14 * x245) + C2 * (x133 + x246 * x51) + x139 + x244 * x9) +
                          grad_trial[1] * (C1 * (x161 + x245 * x64) + C2 * (x163 + x246 * x68) + x159 + x244 * x63) +
                          grad_trial[2] * (C1 * (x183 + x245 * x79) + C2 * (x184 + x246 * x82) + x185 + x244 * x78)) +
                     grad_test[2] *
                         (grad_trial[0] * (C1 * (x14 * x248 + x146) + C2 * (x153 + x249 * x51) + x158 + x247 * x9) +
                          grad_trial[1] * (C1 * (x165 + x248 * x64) + C2 * (x169 + x249 * x68) + x171 + x247 * x63) +
                          grad_trial[2] * (C1 * (x177 + x248 * x79) + C2 * (x179 + x249 * x82) + x175 + x247 * x78)));
                bf[4] +=
                    dx *
                    (grad_test[0] *
                         (grad_trial[0] * (C1 * (4 * f[3] * x250 + x114 * x242 + x12) +
                                           C2 * (x116 * x243 + 2 * x116 * x255 + x37 * (x252 + x254)) +
                                           pow(x110, 2) * x8 + x112 * x241) +
                          grad_trial[1] * (C1 * (x122 * x242 + x258) + C2 * (x127 * x243 + x261) + x136 * x241 + x256) +
                          grad_trial[2] *
                              (C1 * (x142 * x242 + x263) + C2 * (x147 * x243 + x265) + x156 * x241 + x262)) +
                     grad_test[1] *
                         (grad_trial[0] * (C1 * (x114 * x245 + x258) + C2 * (x116 * x246 + x261) + x112 * x244 + x256) +
                          grad_trial[1] * (C1 * (4 * f[4] * x266 + x12 + x122 * x245) +
                                           C2 * (x127 * x246 + 2 * x130 * x269 + x37 * (x252 + x268)) +
                                           pow(x135, 2) * x8 + x136 * x244) +
                          grad_trial[2] *
                              (C1 * (x142 * x245 + x272) + C2 * (x147 * x246 + x275) + x156 * x244 + x270)) +
                     grad_test[2] *
                         (grad_trial[0] * (C1 * (x114 * x248 + x263) + C2 * (x116 * x249 + x265) + x112 * x247 + x262) +
                          grad_trial[1] * (C1 * (x122 * x248 + x272) + C2 * (x127 * x249 + x275) + x136 * x247 + x270) +
                          grad_trial[2] * (C1 * (4 * f[5] * x271 + x12 + x142 * x248) +
                                           C2 * (x147 * x249 + 2 * x147 * x276 + x37 * (x254 + x268)) +
                                           pow(x155, 2) * x8 + x156 * x247)));
                bf[5] +=
                    dx *
                    (grad_test[0] *
                         (grad_trial[0] * (C1 * (x189 * x242 + x278) + C2 * (x191 * x243 + x281) + x188 * x241 + x277) +
                          grad_trial[1] * (C1 * (x207 * x242 + x283) + C2 * (x210 * x243 + x285) + x216 * x241 + x287) +
                          grad_trial[2] *
                              (C1 * (x196 * x242 + x289) + C2 * (x199 * x243 + x291) + x204 * x241 + x293)) +
                     grad_test[1] *
                         (grad_trial[0] * (C1 * (x189 * x245 + x305) + C2 * (x191 * x246 + x306) + x188 * x244 + x307) +
                          grad_trial[1] * (C1 * (x207 * x245 + x296) + C2 * (x210 * x246 + x298) + x216 * x244 + x294) +
                          grad_trial[2] *
                              (C1 * (x196 * x245 + x300) + C2 * (x199 * x246 + x302) + x204 * x244 + x304)) +
                     grad_test[2] *
                         (grad_trial[0] * (C1 * (x189 * x248 + x313) + C2 * (x191 * x249 + x314) + x188 * x247 + x315) +
                          grad_trial[1] * (C1 * (x207 * x248 + x316) + C2 * (x210 * x249 + x317) + x216 * x247 + x318) +
                          grad_trial[2] *
                              (C1 * (x196 * x248 + x310) + C2 * (x199 * x249 + x312) + x204 * x247 + x308)));
                bf[6] +=
                    dx *
                    (grad_test[0] *
                         (grad_trial[0] * (C1 * (x14 * x320 + x190) + C2 * (x195 + x321 * x51) + x187 + x319 * x9) +
                          grad_trial[1] * (C1 * (x223 + x320 * x64) + C2 * (x224 + x321 * x68) + x225 + x319 * x63) +
                          grad_trial[2] * (C1 * (x238 + x320 * x79) + C2 * (x239 + x321 * x82) + x240 + x319 * x78)) +
                     grad_test[1] *
                         (grad_trial[0] * (C1 * (x14 * x323 + x209) + C2 * (x213 + x324 * x51) + x218 + x322 * x9) +
                          grad_trial[1] * (C1 * (x220 + x323 * x64) + C2 * (x222 + x324 * x68) + x219 + x322 * x63) +
                          grad_trial[2] * (C1 * (x235 + x323 * x79) + C2 * (x236 + x324 * x82) + x237 + x322 * x78)) +
                     grad_test[2] *
                         (grad_trial[0] * (C1 * (x14 * x326 + x198) + C2 * (x202 + x327 * x51) + x206 + x325 * x9) +
                          grad_trial[1] * (C1 * (x227 + x326 * x64) + C2 * (x229 + x327 * x68) + x231 + x325 * x63) +
                          grad_trial[2] * (C1 * (x233 + x326 * x79) + C2 * (x234 + x327 * x82) + x232 + x325 * x78)));
                bf[7] +=
                    dx *
                    (grad_test[0] *
                         (grad_trial[0] * (C1 * (x114 * x320 + x278) + C2 * (x116 * x321 + x281) + x112 * x319 + x277) +
                          grad_trial[1] * (C1 * (x122 * x320 + x305) + C2 * (x127 * x321 + x306) + x136 * x319 + x307) +
                          grad_trial[2] *
                              (C1 * (x142 * x320 + x313) + C2 * (x147 * x321 + x314) + x156 * x319 + x315)) +
                     grad_test[1] *
                         (grad_trial[0] * (C1 * (x114 * x323 + x283) + C2 * (x116 * x324 + x285) + x112 * x322 + x287) +
                          grad_trial[1] * (C1 * (x122 * x323 + x296) + C2 * (x127 * x324 + x298) + x136 * x322 + x294) +
                          grad_trial[2] *
                              (C1 * (x142 * x323 + x316) + C2 * (x147 * x324 + x317) + x156 * x322 + x318)) +
                     grad_test[2] *
                         (grad_trial[0] * (C1 * (x114 * x326 + x289) + C2 * (x116 * x327 + x291) + x112 * x325 + x293) +
                          grad_trial[1] * (C1 * (x122 * x326 + x300) + C2 * (x127 * x327 + x302) + x136 * x325 + x304) +
                          grad_trial[2] *
                              (C1 * (x142 * x326 + x310) + C2 * (x147 * x327 + x312) + x156 * x325 + x308)));
                bf[8] +=
                    dx *
                    (grad_test[0] *
                         (grad_trial[0] * (C1 * (4 * f[6] * x328 + x12 + x189 * x320) +
                                           C2 * (x191 * x321 + 2 * x194 * x331 + x37 * (x329 + x330)) +
                                           pow(x186, 2) * x8 + x188 * x319) +
                          grad_trial[1] * (C1 * (x207 * x320 + x334) + C2 * (x210 * x321 + x336) + x216 * x319 + x332) +
                          grad_trial[2] *
                              (C1 * (x196 * x320 + x338) + C2 * (x199 * x321 + x339) + x204 * x319 + x337)) +
                     grad_test[1] *
                         (grad_trial[0] * (C1 * (x189 * x323 + x334) + C2 * (x191 * x324 + x336) + x188 * x322 + x332) +
                          grad_trial[1] * (C1 * (4 * f[7] * x340 + x12 + x207 * x323) +
                                           C2 * (x210 * x324 + 2 * x210 * x342 + x37 * (x329 + x341)) +
                                           pow(x215, 2) * x8 + x216 * x322) +
                          grad_trial[2] *
                              (C1 * (x196 * x323 + x344) + C2 * (x199 * x324 + x346) + x204 * x322 + x343)) +
                     grad_test[2] *
                         (grad_trial[0] * (C1 * (x189 * x326 + x338) + C2 * (x191 * x327 + x339) + x188 * x325 + x337) +
                          grad_trial[1] * (C1 * (x207 * x326 + x344) + C2 * (x210 * x327 + x346) + x216 * x325 + x343) +
                          grad_trial[2] * (C1 * (x12 + 4 * x123 * x196 + x196 * x326) +
                                           C2 * (x199 * x327 + 2 * x199 * x345 + x37 * (x330 + x341)) +
                                           pow(x203, 2) * x8 + x204 * x325)));
            }

            UTOPIA_FUNCTION void gradient(const T *UTOPIA_RESTRICT f,
                                          const T *UTOPIA_RESTRICT grad_test,
                                          const T dx,
                                          T *UTOPIA_RESTRICT lf) const {
                using namespace utopia::device;
                // Automatically generated
                T x0 = f[4] * f[8];
                T x1 = f[5] * f[7];
                T x2 = f[5] * f[6];
                T x3 = f[3] * f[7];
                T x4 = f[3] * f[8];
                T x5 = f[4] * f[6];
                T x6 = f[0] * x0 - f[0] * x1 + f[1] * x2 - f[1] * x4 + f[2] * x3 - f[2] * x5;
                T x7 = K * log(x6) / x6;
                T x8 = pow(x6, -2.0 / 3.0);
                T x9 = 2 * f[0];
                T x10 = pow(f[0], 2) + pow(f[1], 2) + pow(f[2], 2);
                T x11 = pow(f[3], 2) + pow(f[4], 2) + pow(f[5], 2);
                T x12 = pow(f[6], 2) + pow(f[7], 2) + pow(f[8], 2);
                T x13 = x10 + x11 + x12;
                T x14 = x13 / pow(x6, 5.0 / 3.0);
                T x15 = pow(x6, -4.0 / 3.0);
                T x16 = f[0] * f[3] + f[1] * f[4] + f[2] * f[5];
                T x17 = 2 * x16;
                T x18 = f[0] * f[6] + f[1] * f[7] + f[2] * f[8];
                T x19 = 2 * x18;
                T x20 = f[3] * f[6] + f[4] * f[7] + f[5] * f[8];
                T x21 = (-1.0 / 2.0 * pow(x10, 2) - 1.0 / 2.0 * pow(x11, 2) - 1.0 / 2.0 * pow(x12, 2) +
                         (1.0 / 2.0) * pow(x13, 2) - pow(x16, 2) - pow(x18, 2) - pow(x20, 2)) /
                        pow(x6, 7.0 / 3.0);
                T x22 = 2 * f[1];
                T x23 = 2 * f[2];
                T x24 = f[1] * f[8];
                T x25 = 2 * f[3];
                T x26 = f[2] * f[7];
                T x27 = 2 * x20;
                T x28 = f[0] * f[8];
                T x29 = 2 * f[4];
                T x30 = f[0] * f[7];
                T x31 = 2 * f[5];
                T x32 = f[1] * f[6];
                T x33 = f[1] * f[5];
                T x34 = 2 * f[6];
                T x35 = f[0] * f[5];
                T x36 = 2 * f[7];
                T x37 = f[2] * f[3];
                T x38 = f[0] * f[4];
                T x39 = 2 * f[8];
                lf[0] += dx * (grad_test[0] * (C1 * (x14 * ((2.0 / 3.0) * f[5] * f[7] - 2.0 / 3.0 * x0) + x8 * x9) +
                                               C2 * (x15 * (2 * f[0] * x13 - f[3] * x17 - f[6] * x19 - x10 * x9) +
                                                     x21 * ((4.0 / 3.0) * f[5] * f[7] - 4.0 / 3.0 * x0)) +
                                               x7 * (x0 - x1)) +
                               grad_test[1] * (C1 * (x14 * (-2.0 / 3.0 * x2 + (2.0 / 3.0) * x4) + x22 * x8) +
                                               C2 * (x15 * (2 * f[1] * x13 - f[4] * x17 - f[7] * x19 - x10 * x22) +
                                                     x21 * (-4.0 / 3.0 * x2 + (4.0 / 3.0) * x4)) +
                                               x7 * (f[5] * f[6] - x4)) +
                               grad_test[2] * (C1 * (x14 * ((2.0 / 3.0) * f[4] * f[6] - 2.0 / 3.0 * x3) + x23 * x8) +
                                               C2 * (x15 * (2 * f[2] * x13 - f[5] * x17 - f[8] * x19 - x10 * x23) +
                                                     x21 * ((4.0 / 3.0) * f[4] * f[6] - 4.0 / 3.0 * x3)) +
                                               x7 * (x3 - x5)));
                lf[1] += dx * (grad_test[0] * (C1 * (x14 * ((2.0 / 3.0) * x24 - 2.0 / 3.0 * x26) + x25 * x8) +
                                               C2 * (x15 * (2 * f[3] * x13 - f[6] * x27 - x11 * x25 - x16 * x9) +
                                                     x21 * ((4.0 / 3.0) * x24 - 4.0 / 3.0 * x26)) +
                                               x7 * (f[2] * f[7] - x24)) +
                               grad_test[1] * (C1 * (x14 * ((2.0 / 3.0) * f[2] * f[6] - 2.0 / 3.0 * x28) + x29 * x8) +
                                               C2 * (x15 * (-f[1] * x17 + 2 * f[4] * x13 - f[7] * x27 - x11 * x29) +
                                                     x21 * ((4.0 / 3.0) * f[2] * f[6] - 4.0 / 3.0 * x28)) +
                                               x7 * (-f[2] * f[6] + x28)) +
                               grad_test[2] * (C1 * (x14 * ((2.0 / 3.0) * x30 - 2.0 / 3.0 * x32) + x31 * x8) +
                                               C2 * (x15 * (-f[2] * x17 + 2 * f[5] * x13 - f[8] * x27 - x11 * x31) +
                                                     x21 * ((4.0 / 3.0) * x30 - 4.0 / 3.0 * x32)) +
                                               x7 * (f[1] * f[6] - x30)));
                lf[2] += dx * (grad_test[0] * (C1 * (x14 * ((2.0 / 3.0) * f[2] * f[4] - 2.0 / 3.0 * x33) + x34 * x8) +
                                               C2 * (x15 * (2 * f[6] * x13 - x12 * x34 - x18 * x9 - x20 * x25) +
                                                     x21 * ((4.0 / 3.0) * f[2] * f[4] - 4.0 / 3.0 * x33)) +
                                               x7 * (-f[2] * f[4] + x33)) +
                               grad_test[1] * (C1 * (x14 * ((2.0 / 3.0) * x35 - 2.0 / 3.0 * x37) + x36 * x8) +
                                               C2 * (x15 * (-f[1] * x19 - f[4] * x27 + 2 * f[7] * x13 - x12 * x36) +
                                                     x21 * ((4.0 / 3.0) * x35 - 4.0 / 3.0 * x37)) +
                                               x7 * (f[2] * f[3] - x35)) +
                               grad_test[2] * (C1 * (x14 * ((2.0 / 3.0) * f[1] * f[3] - 2.0 / 3.0 * x38) + x39 * x8) +
                                               C2 * (x15 * (-f[2] * x19 - f[5] * x27 + 2 * f[8] * x13 - x12 * x39) +
                                                     x21 * ((4.0 / 3.0) * f[1] * f[3] - 4.0 / 3.0 * x38)) +
                                               x7 * (-f[1] * f[3] + x38)));
            }

            UTOPIA_FUNCTION void value(const T *UTOPIA_RESTRICT f, const T dx, T &e) const {
                using namespace utopia::device;
                // Automatically generated
                T x0 = f[0] * f[4] * f[8] - f[0] * f[5] * f[7] - f[1] * f[3] * f[8] + f[1] * f[5] * f[6] +
                       f[2] * f[3] * f[7] - f[2] * f[4] * f[6];
                T x1 = pow(f[0], 2) + pow(f[1], 2) + pow(f[2], 2);
                T x2 = pow(f[3], 2) + pow(f[4], 2) + pow(f[5], 2);
                T x3 = pow(f[6], 2) + pow(f[7], 2) + pow(f[8], 2);
                T x4 = x1 + x2 + x3;
                e += dx * (C1 * (-3 + x4 / pow(x0, 2.0 / 3.0)) +
                           C2 * (-3 + (-1.0 / 2.0 * pow(x1, 2) - 1.0 / 2.0 * pow(x2, 2) - 1.0 / 2.0 * pow(x3, 2) +
                                       (1.0 / 2.0) * pow(x4, 2) - pow(f[0] * f[3] + f[1] * f[4] + f[2] * f[5], 2) -
                                       pow(f[0] * f[6] + f[1] * f[7] + f[2] * f[8], 2) -
                                       pow(f[3] * f[6] + f[4] * f[7] + f[5] * f[8], 2)) /
                                          pow(x0, 4.0 / 3.0)) +
                           (1.0 / 2.0) * K * pow(log(x0), 2));
            }

            UTOPIA_FUNCTION void eval(const T *UTOPIA_RESTRICT f,
                                      const T *grad_test,
                                      const T *grad_trial,
                                      const T dx,
                                      T &e,
                                      T *UTOPIA_RESTRICT lf,
                                      T *UTOPIA_RESTRICT bf) const {
                using namespace utopia::device;
                // Automatically generated
                T x0 = f[4] * f[8];
                T x1 = f[5] * f[6];
                T x2 = f[3] * f[7];
                T x3 = f[5] * f[7];
                T x4 = f[3] * f[8];
                T x5 = f[4] * f[6];
                T x6 = f[0] * x0 - f[0] * x3 + f[1] * x1 - f[1] * x4 + f[2] * x2 - f[2] * x5;
                T x7 = log(x6);
                T x8 = pow(f[0], 2);
                T x9 = pow(f[1], 2);
                T x10 = pow(f[2], 2);
                T x11 = x10 + x8 + x9;
                T x12 = pow(f[3], 2);
                T x13 = pow(f[4], 2);
                T x14 = pow(f[5], 2);
                T x15 = x12 + x13 + x14;
                T x16 = pow(f[6], 2);
                T x17 = pow(f[7], 2);
                T x18 = pow(f[8], 2);
                T x19 = x16 + x17 + x18;
                T x20 = x11 + x15 + x19;
                T x21 = pow(x6, -2.0 / 3.0);
                T x22 = pow(x6, -4.0 / 3.0);
                T x23 = f[0] * f[3];
                T x24 = f[1] * f[4];
                T x25 = f[2] * f[5];
                T x26 = x23 + x24 + x25;
                T x27 = f[0] * f[6];
                T x28 = f[1] * f[7];
                T x29 = f[2] * f[8];
                T x30 = x27 + x28 + x29;
                T x31 = f[3] * f[6];
                T x32 = f[4] * f[7];
                T x33 = f[5] * f[8];
                T x34 = x31 + x32 + x33;
                T x35 = -1.0 / 2.0 * pow(x11, 2) - 1.0 / 2.0 * pow(x15, 2) - 1.0 / 2.0 * pow(x19, 2) +
                        (1.0 / 2.0) * pow(x20, 2) - pow(x26, 2) - pow(x30, 2) - pow(x34, 2);
                T x36 = x0 - x3;
                T x37 = x36 * x7;
                T x38 = K / x6;
                T x39 = 2 * x21;
                T x40 = (2.0 / 3.0) * f[5] * f[7] - 2.0 / 3.0 * x0;
                T x41 = pow(x6, -5.0 / 3.0);
                T x42 = x20 * x41;
                T x43 = 2 * f[0];
                T x44 = 2 * x26;
                T x45 = 2 * x30;
                T x46 = 2 * f[0] * x20 - f[3] * x44 - f[6] * x45 - x11 * x43;
                T x47 = (4.0 / 3.0) * f[5] * f[7] - 4.0 / 3.0 * x0;
                T x48 = pow(x6, -7.0 / 3.0);
                T x49 = x35 * x48;
                T x50 = -f[5] * f[6] + x4;
                T x51 = -x50;
                T x52 = x38 * x7;
                T x53 = -2.0 / 3.0 * x1 + (2.0 / 3.0) * x4;
                T x54 = 2 * f[1];
                T x55 = 2 * f[1] * x20 - f[4] * x44 - f[7] * x45 - x11 * x54;
                T x56 = -4.0 / 3.0 * x1 + (4.0 / 3.0) * x4;
                T x57 = x2 - x5;
                T x58 = (2.0 / 3.0) * f[4] * f[6] - 2.0 / 3.0 * x2;
                T x59 = 2 * f[2];
                T x60 = 2 * f[2] * x20 - f[5] * x44 - f[8] * x45 - x11 * x59;
                T x61 = (4.0 / 3.0) * f[4] * f[6] - 4.0 / 3.0 * x2;
                T x62 = f[1] * f[8];
                T x63 = -f[2] * f[7] + x62;
                T x64 = -x63;
                T x65 = f[2] * f[7];
                T x66 = (2.0 / 3.0) * x62 - 2.0 / 3.0 * x65;
                T x67 = 2 * f[3];
                T x68 = 2 * x34;
                T x69 = 2 * f[3] * x20 - f[6] * x68 - x15 * x67 - x26 * x43;
                T x70 = (4.0 / 3.0) * x62 - 4.0 / 3.0 * x65;
                T x71 = f[0] * f[8];
                T x72 = f[2] * f[6];
                T x73 = x71 - x72;
                T x74 = (2.0 / 3.0) * f[2] * f[6] - 2.0 / 3.0 * x71;
                T x75 = 2 * f[4];
                T x76 = -f[1] * x44 + 2 * f[4] * x20 - f[7] * x68 - x15 * x75;
                T x77 = (4.0 / 3.0) * f[2] * f[6] - 4.0 / 3.0 * x71;
                T x78 = f[0] * f[7];
                T x79 = -f[1] * f[6] + x78;
                T x80 = -x79;
                T x81 = f[1] * f[6];
                T x82 = (2.0 / 3.0) * x78 - 2.0 / 3.0 * x81;
                T x83 = 2 * f[5];
                T x84 = -f[2] * x44 + 2 * f[5] * x20 - f[8] * x68 - x15 * x83;
                T x85 = (4.0 / 3.0) * x78 - 4.0 / 3.0 * x81;
                T x86 = f[1] * f[5];
                T x87 = f[2] * f[4];
                T x88 = x86 - x87;
                T x89 = (2.0 / 3.0) * f[2] * f[4] - 2.0 / 3.0 * x86;
                T x90 = 2 * f[6];
                T x91 = 2 * f[6] * x20 - x19 * x90 - x30 * x43 - x34 * x67;
                T x92 = (4.0 / 3.0) * f[2] * f[4] - 4.0 / 3.0 * x86;
                T x93 = f[0] * f[5];
                T x94 = -f[2] * f[3] + x93;
                T x95 = -x94;
                T x96 = f[2] * f[3];
                T x97 = (2.0 / 3.0) * x93 - 2.0 / 3.0 * x96;
                T x98 = 2 * f[7];
                T x99 = -f[1] * x45 - f[4] * x68 + 2 * f[7] * x20 - x19 * x98;
                T x100 = (4.0 / 3.0) * x93 - 4.0 / 3.0 * x96;
                T x101 = f[0] * f[4];
                T x102 = f[1] * f[3];
                T x103 = x101 - x102;
                T x104 = (2.0 / 3.0) * f[1] * f[3] - 2.0 / 3.0 * x101;
                T x105 = 2 * f[8];
                T x106 = -f[2] * x45 - f[5] * x68 + 2 * f[8] * x20 - x105 * x19;
                T x107 = (4.0 / 3.0) * f[1] * f[3] - 4.0 / 3.0 * x101;
                T x108 = K / pow(x6, 2);
                T x109 = -x36;
                T x110 = x108 * x37;
                T x111 = x40 * x41;
                T x112 = x20 / pow(x6, 8.0 / 3.0);
                T x113 = x112 * ((5.0 / 3.0) * f[5] * f[7] - 5.0 / 3.0 * x0);
                T x114 = 2 * x14;
                T x115 = 2 * x18;
                T x116 = x114 + x115;
                T x117 = 2 * x13;
                T x118 = 2 * x17;
                T x119 = x117 + x118;
                T x120 = x47 * x48;
                T x121 = x35 / pow(x6, 10.0 / 3.0);
                T x122 = x121 * ((7.0 / 3.0) * f[5] * f[7] - 7.0 / 3.0 * x0);
                T x123 = x108 * x36;
                T x124 = x123 * x51;
                T x125 = x108 * x51;
                T x126 = x109 * x7;
                T x127 = x41 * x43;
                T x128 = x111 * x54 + x127 * x53;
                T x129 = f[4] * x67;
                T x130 = f[7] * x90;
                T x131 = x46 * x48;
                T x132 = x120 * x55 + x131 * x56 + x22 * (-x129 - x130);
                T x133 = x123 * x57;
                T x134 = x108 * x57;
                T x135 = x111 * x59 + x127 * x58;
                T x136 = f[5] * x67;
                T x137 = f[8] * x90;
                T x138 = x120 * x60 + x131 * x61 + x22 * (-x136 - x137);
                T x139 = x50 * x7;
                T x140 = x41 * x53;
                T x141 = x112 * (-5.0 / 3.0 * x1 + (5.0 / 3.0) * x4);
                T x142 = 2 * x12;
                T x143 = 2 * x16;
                T x144 = x142 + x143;
                T x145 = x48 * x55;
                T x146 = x121 * (-7.0 / 3.0 * x1 + (7.0 / 3.0) * x4);
                T x147 = x125 * x57;
                T x148 = x41 * x58;
                T x149 = x140 * x59 + x148 * x54;
                T x150 = f[5] * x75;
                T x151 = f[8] * x98;
                T x152 = x48 * x56;
                T x153 = x145 * x61 + x152 * x60 + x22 * (-x150 - x151);
                T x154 = -x57;
                T x155 = x154 * x7;
                T x156 = x112 * ((5.0 / 3.0) * f[4] * f[6] - 5.0 / 3.0 * x2);
                T x157 = x48 * x60;
                T x158 = x121 * ((7.0 / 3.0) * f[4] * f[6] - 7.0 / 3.0 * x2);
                T x159 = x123 * x64;
                T x160 = x108 * x64;
                T x161 = x111 * x67 + x127 * x66;
                T x162 = 2 * x24;
                T x163 = 2 * x25;
                T x164 = x120 * x69 + x131 * x70 + x22 * (-x162 - x163);
                T x165 = (2.0 / 3.0) * x42;
                T x166 = f[8] * x165;
                T x167 = x111 * x75 + x127 * x74 - x166;
                T x168 = (4.0 / 3.0) * x49;
                T x169 = f[8] * x168;
                T x170 = x120 * x76 + x131 * x77 - x169 + x22 * (4 * x101 - 2 * x102);
                T x171 = x108 * x73;
                T x172 = f[8] * x52;
                T x173 = x123 * x73 + x172;
                T x174 = f[7] * x165;
                T x175 = x111 * x83 + x127 * x82 + x174;
                T x176 = f[7] * x168;
                T x177 = x120 * x84 + x131 * x85 + x176 + x22 * (4 * x93 - 2 * x96);
                T x178 = x108 * x80;
                T x179 = f[7] * x52;
                T x180 = x123 * x80 - x179;
                T x181 = x125 * x73;
                T x182 = x41 * x54;
                T x183 = x140 * x75 + x182 * x74;
                T x184 = 2 * x23;
                T x185 = x145 * x77 + x152 * x76 + x22 * (-x163 - x184);
                T x186 = f[6] * x165;
                T x187 = x140 * x83 + x182 * x82 - x186;
                T x188 = f[6] * x168;
                T x189 = x145 * x85 + x152 * x84 - x188 + x22 * (4 * x86 - 2 * x87);
                T x190 = f[6] * x52;
                T x191 = x125 * x80 + x190;
                T x192 = x140 * x67 + x166 + x182 * x66;
                T x193 = x145 * x70 + x152 * x69 + x169 + x22 * (4 * f[1] * f[3] - 2 * x101);
                T x194 = x125 * x64 - x172;
                T x195 = x134 * x80;
                T x196 = x41 * x59;
                T x197 = x148 * x83 + x196 * x82;
                T x198 = x48 * x61;
                T x199 = x157 * x85 + x198 * x84 + x22 * (-x162 - x184);
                T x200 = x148 * x67 - x174 + x196 * x66;
                T x201 = x157 * x70 - x176 + x198 * x69 + x22 * (4 * f[2] * f[3] - 2 * x93);
                T x202 = x134 * x64 + x179;
                T x203 = x148 * x75 + x186 + x196 * x74;
                T x204 = x157 * x77 + x188 + x198 * x76 + x22 * (4 * f[2] * f[4] - 2 * x86);
                T x205 = x134 * x73 - x190;
                T x206 = x123 * x88;
                T x207 = x108 * x88;
                T x208 = x111 * x90 + x127 * x89;
                T x209 = 2 * x28;
                T x210 = 2 * x29;
                T x211 = x120 * x91 + x131 * x92 + x22 * (-x209 - x210);
                T x212 = f[4] * x165;
                T x213 = x104 * x127 + x105 * x111 - x212;
                T x214 = f[4] * x168;
                T x215 = x106 * x120 + x107 * x131 - x214 + x22 * (4 * x71 - 2 * x72);
                T x216 = x103 * x108;
                T x217 = f[4] * x52;
                T x218 = x103 * x123 + x217;
                T x219 = f[5] * x165;
                T x220 = x111 * x98 + x127 * x97 + x219;
                T x221 = f[5] * x168;
                T x222 = x100 * x131 + x120 * x99 + x22 * (4 * x78 - 2 * x81) + x221;
                T x223 = x108 * x95;
                T x224 = f[5] * x52;
                T x225 = x123 * x95 - x224;
                T x226 = x125 * x95;
                T x227 = x140 * x98 + x182 * x97;
                T x228 = 2 * x27;
                T x229 = x100 * x145 + x152 * x99 + x22 * (-x210 - x228);
                T x230 = x140 * x90 + x182 * x89 - x219;
                T x231 = x145 * x92 + x152 * x91 + x22 * (4 * f[1] * f[6] - 2 * x78) - x221;
                T x232 = x125 * x88 + x224;
                T x233 = f[3] * x165;
                T x234 = x104 * x182 + x105 * x140 + x233;
                T x235 = f[3] * x168;
                T x236 = x106 * x152 + x107 * x145 + x22 * (4 * x62 - 2 * x65) + x235;
                T x237 = f[3] * x52;
                T x238 = x103 * x125 - x237;
                T x239 = x103 * x134;
                T x240 = x104 * x196 + x105 * x148;
                T x241 = x106 * x198 + x107 * x157 + x22 * (-x209 - x228);
                T x242 = x148 * x98 + x196 * x97 - x233;
                T x243 = x100 * x157 + x198 * x99 + x22 * (4 * f[2] * f[7] - 2 * x62) - x235;
                T x244 = x134 * x95 + x237;
                T x245 = x148 * x90 + x196 * x89 + x212;
                T x246 = x157 * x92 + x198 * x91 + x214 + x22 * (4 * f[2] * f[6] - 2 * x71);
                T x247 = x134 * x88 - x217;
                T x248 = x112 * ((5.0 / 3.0) * x62 - 5.0 / 3.0 * x65);
                T x249 = x121 * ((7.0 / 3.0) * x62 - 7.0 / 3.0 * x65);
                T x250 = x63 * x7;
                T x251 = -x73;
                T x252 = x251 * x7;
                T x253 = x112 * ((5.0 / 3.0) * f[2] * f[6] - 5.0 / 3.0 * x71);
                T x254 = x121 * ((7.0 / 3.0) * f[2] * f[6] - 7.0 / 3.0 * x71);
                T x255 = x7 * x79;
                T x256 = x112 * ((5.0 / 3.0) * x78 - 5.0 / 3.0 * x81);
                T x257 = x121 * ((7.0 / 3.0) * x78 - 7.0 / 3.0 * x81);
                T x258 = x41 * x66;
                T x259 = 2 * x10;
                T x260 = x115 + x259;
                T x261 = 2 * x9;
                T x262 = x118 + x261;
                T x263 = x48 * x69;
                T x264 = x160 * x73;
                T x265 = x41 * x67;
                T x266 = x258 * x75 + x265 * x74;
                T x267 = f[1] * x43;
                T x268 = x48 * x70;
                T x269 = x22 * (-x130 - x267) + x263 * x77 + x268 * x76;
                T x270 = x160 * x80;
                T x271 = x258 * x83 + x265 * x82;
                T x272 = f[2] * x43;
                T x273 = x22 * (-x137 - x272) + x263 * x85 + x268 * x84;
                T x274 = x41 * x74;
                T x275 = 2 * x8;
                T x276 = x143 + x275;
                T x277 = x48 * x77;
                T x278 = x171 * x80;
                T x279 = x41 * x82;
                T x280 = x274 * x83 + x279 * x75;
                T x281 = f[2] * x54;
                T x282 = x48 * x76;
                T x283 = x22 * (-x151 - x281) + x277 * x84 + x282 * x85;
                T x284 = x48 * x84;
                T x285 = x160 * x88;
                T x286 = x258 * x90 + x265 * x89;
                T x287 = 2 * x32;
                T x288 = 2 * x33;
                T x289 = x22 * (-x287 - x288) + x263 * x92 + x268 * x91;
                T x290 = f[2] * x165;
                T x291 = x258 * x98 + x265 * x97 - x290;
                T x292 = f[2] * x168;
                T x293 = x100 * x263 + x22 * (4 * x2 - 2 * x5) + x268 * x99 - x292;
                T x294 = f[2] * x52;
                T x295 = x160 * x95 + x294;
                T x296 = f[1] * x165;
                T x297 = x104 * x265 + x105 * x258 + x296;
                T x298 = f[1] * x168;
                T x299 = x106 * x268 + x107 * x263 + x22 * (-2 * x1 + 4 * x4) + x298;
                T x300 = f[1] * x52;
                T x301 = x103 * x160 - x300;
                T x302 = x171 * x95;
                T x303 = x41 * x75;
                T x304 = x274 * x98 + x303 * x97;
                T x305 = 2 * x31;
                T x306 = x100 * x282 + x22 * (-x288 - x305) + x277 * x99;
                T x307 = f[0] * x165;
                T x308 = x104 * x303 + x105 * x274 - x307;
                T x309 = f[0] * x168;
                T x310 = x106 * x277 + x107 * x282 + x22 * (4 * x0 - 2 * x3) - x309;
                T x311 = f[0] * x52;
                T x312 = x103 * x171 + x311;
                T x313 = x274 * x90 + x290 + x303 * x89;
                T x314 = x22 * (4 * f[4] * f[6] - 2 * x2) + x277 * x91 + x282 * x92 + x292;
                T x315 = x171 * x88 - x294;
                T x316 = x103 * x178;
                T x317 = x41 * x83;
                T x318 = x104 * x317 + x105 * x279;
                T x319 = x48 * x85;
                T x320 = x106 * x319 + x107 * x284 + x22 * (-x287 - x305);
                T x321 = x279 * x90 - x296 + x317 * x89;
                T x322 = x22 * (4 * f[5] * f[6] - 2 * x4) + x284 * x92 - x298 + x319 * x91;
                T x323 = x178 * x88 + x300;
                T x324 = x279 * x98 + x307 + x317 * x97;
                T x325 = x100 * x284 + x22 * (4 * f[5] * f[7] - 2 * x0) + x309 + x319 * x99;
                T x326 = x178 * x95 - x311;
                T x327 = -x88;
                T x328 = x112 * ((5.0 / 3.0) * f[2] * f[4] - 5.0 / 3.0 * x86);
                T x329 = x121 * ((7.0 / 3.0) * f[2] * f[4] - 7.0 / 3.0 * x86);
                T x330 = x327 * x7;
                T x331 = x7 * x94;
                T x332 = x112 * ((5.0 / 3.0) * x93 - 5.0 / 3.0 * x96);
                T x333 = x121 * ((7.0 / 3.0) * x93 - 7.0 / 3.0 * x96);
                T x334 = -x103;
                T x335 = x334 * x7;
                T x336 = x112 * ((5.0 / 3.0) * f[1] * f[3] - 5.0 / 3.0 * x101);
                T x337 = x121 * ((7.0 / 3.0) * f[1] * f[3] - 7.0 / 3.0 * x101);
                T x338 = x41 * x89;
                T x339 = x114 + x259;
                T x340 = x117 + x261;
                T x341 = x48 * x92;
                T x342 = x207 * x95;
                T x343 = x41 * x90;
                T x344 = x338 * x98 + x343 * x97;
                T x345 = x48 * x91;
                T x346 = x100 * x345 + x22 * (-x129 - x267) + x341 * x99;
                T x347 = x103 * x207;
                T x348 = x104 * x343 + x105 * x338;
                T x349 = x106 * x341 + x107 * x345 + x22 * (-x136 - x272);
                T x350 = x41 * x97;
                T x351 = x142 + x275;
                T x352 = x48 * x99;
                T x353 = x103 * x223;
                T x354 = x104 * x41;
                T x355 = x105 * x350 + x354 * x98;
                T x356 = x106 * x48;
                T x357 = x100 * x356 + x107 * x352 + x22 * (-x150 - x281);
                e += dx * (C1 * (x20 * x21 - 3) + C2 * (x22 * x35 - 3) + (1.0 / 2.0) * K * pow(x7, 2));
                lf[0] +=
                    dx * (grad_test[0] * (C1 * (f[0] * x39 + x40 * x42) + C2 * (x22 * x46 + x47 * x49) + x37 * x38) +
                          grad_test[1] * (C1 * (f[1] * x39 + x42 * x53) + C2 * (x22 * x55 + x49 * x56) + x51 * x52) +
                          grad_test[2] * (C1 * (f[2] * x39 + x42 * x58) + C2 * (x22 * x60 + x49 * x61) + x52 * x57));
                lf[1] +=
                    dx * (grad_test[0] * (C1 * (f[3] * x39 + x42 * x66) + C2 * (x22 * x69 + x49 * x70) + x52 * x64) +
                          grad_test[1] * (C1 * (f[4] * x39 + x42 * x74) + C2 * (x22 * x76 + x49 * x77) + x52 * x73) +
                          grad_test[2] * (C1 * (f[5] * x39 + x42 * x82) + C2 * (x22 * x84 + x49 * x85) + x52 * x80));
                lf[2] +=
                    dx *
                    (grad_test[0] * (C1 * (f[6] * x39 + x42 * x89) + C2 * (x22 * x91 + x49 * x92) + x52 * x88) +
                     grad_test[1] * (C1 * (f[7] * x39 + x42 * x97) + C2 * (x100 * x49 + x22 * x99) + x52 * x95) +
                     grad_test[2] * (C1 * (f[8] * x39 + x104 * x42) + C2 * (x106 * x22 + x107 * x49) + x103 * x52));
                bf[0] +=
                    dx *
                    (grad_test[0] *
                         (grad_trial[0] * (C1 * (4 * f[0] * x111 + x113 * x40 + x39) +
                                           C2 * (2 * x120 * x46 + x122 * x47 + x22 * (x116 + x119)) +
                                           x108 * pow(x36, 2) + x109 * x110) +
                          grad_trial[1] * (C1 * (x113 * x53 + x128) + C2 * (x122 * x56 + x132) + x124 + x125 * x126) +
                          grad_trial[2] * (C1 * (x113 * x58 + x135) + C2 * (x122 * x61 + x138) + x126 * x134 + x133)) +
                     grad_test[1] *
                         (grad_trial[0] * (C1 * (x128 + x141 * x40) + C2 * (x132 + x146 * x47) + x110 * x50 + x124) +
                          grad_trial[1] * (C1 * (4 * f[1] * x140 + x141 * x53 + x39) +
                                           C2 * (2 * x145 * x56 + x146 * x56 + x22 * (x116 + x144)) +
                                           x108 * pow(x51, 2) + x125 * x139) +
                          grad_trial[2] * (C1 * (x141 * x58 + x149) + C2 * (x146 * x61 + x153) + x134 * x139 + x147)) +
                     grad_test[2] *
                         (grad_trial[0] * (C1 * (x135 + x156 * x40) + C2 * (x138 + x158 * x47) + x110 * x154 + x133) +
                          grad_trial[1] * (C1 * (x149 + x156 * x53) + C2 * (x153 + x158 * x56) + x125 * x155 + x147) +
                          grad_trial[2] * (C1 * (4 * f[2] * x148 + x156 * x58 + x39) +
                                           C2 * (2 * x157 * x61 + x158 * x61 + x22 * (x119 + x144)) +
                                           x108 * pow(x57, 2) + x134 * x155)));
                bf[1] +=
                    dx *
                    (grad_test[0] *
                         (grad_trial[0] * (C1 * (x113 * x66 + x161) + C2 * (x122 * x70 + x164) + x126 * x160 + x159) +
                          grad_trial[1] * (C1 * (x113 * x74 + x167) + C2 * (x122 * x77 + x170) + x126 * x171 + x173) +
                          grad_trial[2] * (C1 * (x113 * x82 + x175) + C2 * (x122 * x85 + x177) + x126 * x178 + x180)) +
                     grad_test[1] *
                         (grad_trial[0] * (C1 * (x141 * x66 + x192) + C2 * (x146 * x70 + x193) + x139 * x160 + x194) +
                          grad_trial[1] * (C1 * (x141 * x74 + x183) + C2 * (x146 * x77 + x185) + x139 * x171 + x181) +
                          grad_trial[2] * (C1 * (x141 * x82 + x187) + C2 * (x146 * x85 + x189) + x139 * x178 + x191)) +
                     grad_test[2] *
                         (grad_trial[0] * (C1 * (x156 * x66 + x200) + C2 * (x158 * x70 + x201) + x155 * x160 + x202) +
                          grad_trial[1] * (C1 * (x156 * x74 + x203) + C2 * (x158 * x77 + x204) + x155 * x171 + x205) +
                          grad_trial[2] * (C1 * (x156 * x82 + x197) + C2 * (x158 * x85 + x199) + x155 * x178 + x195)));
                bf[2] +=
                    dx *
                    (grad_test[0] *
                         (grad_trial[0] * (C1 * (x113 * x89 + x208) + C2 * (x122 * x92 + x211) + x126 * x207 + x206) +
                          grad_trial[1] * (C1 * (x113 * x97 + x220) + C2 * (x100 * x122 + x222) + x126 * x223 + x225) +
                          grad_trial[2] *
                              (C1 * (x104 * x113 + x213) + C2 * (x107 * x122 + x215) + x126 * x216 + x218)) +
                     grad_test[1] *
                         (grad_trial[0] * (C1 * (x141 * x89 + x230) + C2 * (x146 * x92 + x231) + x139 * x207 + x232) +
                          grad_trial[1] * (C1 * (x141 * x97 + x227) + C2 * (x100 * x146 + x229) + x139 * x223 + x226) +
                          grad_trial[2] *
                              (C1 * (x104 * x141 + x234) + C2 * (x107 * x146 + x236) + x139 * x216 + x238)) +
                     grad_test[2] *
                         (grad_trial[0] * (C1 * (x156 * x89 + x245) + C2 * (x158 * x92 + x246) + x155 * x207 + x247) +
                          grad_trial[1] * (C1 * (x156 * x97 + x242) + C2 * (x100 * x158 + x243) + x155 * x223 + x244) +
                          grad_trial[2] *
                              (C1 * (x104 * x156 + x240) + C2 * (x107 * x158 + x241) + x155 * x216 + x239)));
                bf[3] +=
                    dx *
                    (grad_test[0] *
                         (grad_trial[0] * (C1 * (x161 + x248 * x40) + C2 * (x164 + x249 * x47) + x110 * x63 + x159) +
                          grad_trial[1] * (C1 * (x192 + x248 * x53) + C2 * (x193 + x249 * x56) + x125 * x250 + x194) +
                          grad_trial[2] * (C1 * (x200 + x248 * x58) + C2 * (x201 + x249 * x61) + x134 * x250 + x202)) +
                     grad_test[1] *
                         (grad_trial[0] * (C1 * (x167 + x253 * x40) + C2 * (x170 + x254 * x47) + x110 * x251 + x173) +
                          grad_trial[1] * (C1 * (x183 + x253 * x53) + C2 * (x185 + x254 * x56) + x125 * x252 + x181) +
                          grad_trial[2] * (C1 * (x203 + x253 * x58) + C2 * (x204 + x254 * x61) + x134 * x252 + x205)) +
                     grad_test[2] *
                         (grad_trial[0] * (C1 * (x175 + x256 * x40) + C2 * (x177 + x257 * x47) + x110 * x79 + x180) +
                          grad_trial[1] * (C1 * (x187 + x256 * x53) + C2 * (x189 + x257 * x56) + x125 * x255 + x191) +
                          grad_trial[2] * (C1 * (x197 + x256 * x58) + C2 * (x199 + x257 * x61) + x134 * x255 + x195)));
                bf[4] +=
                    dx *
                    (grad_test[0] *
                         (grad_trial[0] * (C1 * (4 * f[3] * x258 + x248 * x66 + x39) +
                                           C2 * (x22 * (x260 + x262) + x249 * x70 + 2 * x263 * x70) +
                                           x108 * pow(x64, 2) + x160 * x250) +
                          grad_trial[1] * (C1 * (x248 * x74 + x266) + C2 * (x249 * x77 + x269) + x171 * x250 + x264) +
                          grad_trial[2] * (C1 * (x248 * x82 + x271) + C2 * (x249 * x85 + x273) + x178 * x250 + x270)) +
                     grad_test[1] *
                         (grad_trial[0] * (C1 * (x253 * x66 + x266) + C2 * (x254 * x70 + x269) + x160 * x252 + x264) +
                          grad_trial[1] * (C1 * (4 * f[4] * x274 + x253 * x74 + x39) +
                                           C2 * (x22 * (x260 + x276) + x254 * x77 + 2 * x277 * x76) +
                                           x108 * pow(x73, 2) + x171 * x252) +
                          grad_trial[2] * (C1 * (x253 * x82 + x280) + C2 * (x254 * x85 + x283) + x178 * x252 + x278)) +
                     grad_test[2] *
                         (grad_trial[0] * (C1 * (x256 * x66 + x271) + C2 * (x257 * x70 + x273) + x160 * x255 + x270) +
                          grad_trial[1] * (C1 * (x256 * x74 + x280) + C2 * (x257 * x77 + x283) + x171 * x255 + x278) +
                          grad_trial[2] * (C1 * (4 * f[5] * x279 + x256 * x82 + x39) +
                                           C2 * (x22 * (x262 + x276) + x257 * x85 + 2 * x284 * x85) +
                                           x108 * pow(x80, 2) + x178 * x255)));
                bf[5] +=
                    dx *
                    (grad_test[0] *
                         (grad_trial[0] * (C1 * (x248 * x89 + x286) + C2 * (x249 * x92 + x289) + x207 * x250 + x285) +
                          grad_trial[1] * (C1 * (x248 * x97 + x291) + C2 * (x100 * x249 + x293) + x223 * x250 + x295) +
                          grad_trial[2] *
                              (C1 * (x104 * x248 + x297) + C2 * (x107 * x249 + x299) + x216 * x250 + x301)) +
                     grad_test[1] *
                         (grad_trial[0] * (C1 * (x253 * x89 + x313) + C2 * (x254 * x92 + x314) + x207 * x252 + x315) +
                          grad_trial[1] * (C1 * (x253 * x97 + x304) + C2 * (x100 * x254 + x306) + x223 * x252 + x302) +
                          grad_trial[2] *
                              (C1 * (x104 * x253 + x308) + C2 * (x107 * x254 + x310) + x216 * x252 + x312)) +
                     grad_test[2] *
                         (grad_trial[0] * (C1 * (x256 * x89 + x321) + C2 * (x257 * x92 + x322) + x207 * x255 + x323) +
                          grad_trial[1] * (C1 * (x256 * x97 + x324) + C2 * (x100 * x257 + x325) + x223 * x255 + x326) +
                          grad_trial[2] *
                              (C1 * (x104 * x256 + x318) + C2 * (x107 * x257 + x320) + x216 * x255 + x316)));
                bf[6] +=
                    dx *
                    (grad_test[0] *
                         (grad_trial[0] * (C1 * (x208 + x328 * x40) + C2 * (x211 + x329 * x47) + x110 * x327 + x206) +
                          grad_trial[1] * (C1 * (x230 + x328 * x53) + C2 * (x231 + x329 * x56) + x125 * x330 + x232) +
                          grad_trial[2] * (C1 * (x245 + x328 * x58) + C2 * (x246 + x329 * x61) + x134 * x330 + x247)) +
                     grad_test[1] *
                         (grad_trial[0] * (C1 * (x220 + x332 * x40) + C2 * (x222 + x333 * x47) + x110 * x94 + x225) +
                          grad_trial[1] * (C1 * (x227 + x332 * x53) + C2 * (x229 + x333 * x56) + x125 * x331 + x226) +
                          grad_trial[2] * (C1 * (x242 + x332 * x58) + C2 * (x243 + x333 * x61) + x134 * x331 + x244)) +
                     grad_test[2] *
                         (grad_trial[0] * (C1 * (x213 + x336 * x40) + C2 * (x215 + x337 * x47) + x110 * x334 + x218) +
                          grad_trial[1] * (C1 * (x234 + x336 * x53) + C2 * (x236 + x337 * x56) + x125 * x335 + x238) +
                          grad_trial[2] * (C1 * (x240 + x336 * x58) + C2 * (x241 + x337 * x61) + x134 * x335 + x239)));
                bf[7] +=
                    dx *
                    (grad_test[0] *
                         (grad_trial[0] * (C1 * (x286 + x328 * x66) + C2 * (x289 + x329 * x70) + x160 * x330 + x285) +
                          grad_trial[1] * (C1 * (x313 + x328 * x74) + C2 * (x314 + x329 * x77) + x171 * x330 + x315) +
                          grad_trial[2] * (C1 * (x321 + x328 * x82) + C2 * (x322 + x329 * x85) + x178 * x330 + x323)) +
                     grad_test[1] *
                         (grad_trial[0] * (C1 * (x291 + x332 * x66) + C2 * (x293 + x333 * x70) + x160 * x331 + x295) +
                          grad_trial[1] * (C1 * (x304 + x332 * x74) + C2 * (x306 + x333 * x77) + x171 * x331 + x302) +
                          grad_trial[2] * (C1 * (x324 + x332 * x82) + C2 * (x325 + x333 * x85) + x178 * x331 + x326)) +
                     grad_test[2] *
                         (grad_trial[0] * (C1 * (x297 + x336 * x66) + C2 * (x299 + x337 * x70) + x160 * x335 + x301) +
                          grad_trial[1] * (C1 * (x308 + x336 * x74) + C2 * (x310 + x337 * x77) + x171 * x335 + x312) +
                          grad_trial[2] * (C1 * (x318 + x336 * x82) + C2 * (x320 + x337 * x85) + x178 * x335 + x316)));
                bf[8] +=
                    dx *
                    (grad_test[0] *
                         (grad_trial[0] * (C1 * (4 * f[6] * x338 + x328 * x89 + x39) +
                                           C2 * (x22 * (x339 + x340) + x329 * x92 + 2 * x341 * x91) +
                                           x108 * pow(x88, 2) + x207 * x330) +
                          grad_trial[1] * (C1 * (x328 * x97 + x344) + C2 * (x100 * x329 + x346) + x223 * x330 + x342) +
                          grad_trial[2] *
                              (C1 * (x104 * x328 + x348) + C2 * (x107 * x329 + x349) + x216 * x330 + x347)) +
                     grad_test[1] *
                         (grad_trial[0] * (C1 * (x332 * x89 + x344) + C2 * (x333 * x92 + x346) + x207 * x331 + x342) +
                          grad_trial[1] * (C1 * (4 * f[7] * x350 + x332 * x97 + x39) +
                                           C2 * (x100 * x333 + 2 * x100 * x352 + x22 * (x339 + x351)) +
                                           x108 * pow(x95, 2) + x223 * x331) +
                          grad_trial[2] *
                              (C1 * (x104 * x332 + x355) + C2 * (x107 * x333 + x357) + x216 * x331 + x353)) +
                     grad_test[2] *
                         (grad_trial[0] * (C1 * (x336 * x89 + x348) + C2 * (x337 * x92 + x349) + x207 * x335 + x347) +
                          grad_trial[1] * (C1 * (x336 * x97 + x355) + C2 * (x100 * x337 + x357) + x223 * x335 + x353) +
                          grad_trial[2] * (C1 * (4 * f[8] * x354 + x104 * x336 + x39) +
                                           C2 * (x107 * x337 + 2 * x107 * x356 + x22 * (x340 + x351)) +
                                           pow(x103, 2) * x108 + x216 * x335)));
            }

            UTOPIA_FUNCTION void apply(const T *UTOPIA_RESTRICT f,
                                       const T *grad_test,
                                       const T *disp_grad,
                                       const T dx,
                                       T *UTOPIA_RESTRICT res) const {
                using namespace utopia::device;
                // Automatically generated
                T x0 = f[4] * f[8];
                T x1 = f[5] * f[7];
                T x2 = x0 - x1;
                T x3 = f[5] * f[6];
                T x4 = f[3] * f[7];
                T x5 = f[3] * f[8];
                T x6 = f[4] * f[6];
                T x7 = f[0] * x0 - f[0] * x1 + f[1] * x3 - f[1] * x5 + f[2] * x4 - f[2] * x6;
                T x8 = K / pow(x7, 2);
                T x9 = x2 * x8;
                T x10 = log(x7);
                T x11 = -x10 * x2;
                T x12 = 2 / pow(x7, 2.0 / 3.0);
                T x13 = pow(x7, -5.0 / 3.0);
                T x14 = (2.0 / 3.0) * f[5] * f[7] - 2.0 / 3.0 * x0;
                T x15 = x13 * x14;
                T x16 = pow(f[0], 2);
                T x17 = pow(f[1], 2);
                T x18 = pow(f[2], 2);
                T x19 = x16 + x17 + x18;
                T x20 = pow(f[3], 2);
                T x21 = pow(f[4], 2);
                T x22 = pow(f[5], 2);
                T x23 = x20 + x21 + x22;
                T x24 = pow(f[6], 2);
                T x25 = pow(f[7], 2);
                T x26 = pow(f[8], 2);
                T x27 = x24 + x25 + x26;
                T x28 = x19 + x23 + x27;
                T x29 = x28 / pow(x7, 8.0 / 3.0);
                T x30 = x29 * ((5.0 / 3.0) * f[5] * f[7] - 5.0 / 3.0 * x0);
                T x31 = 2 * x22;
                T x32 = 2 * x26;
                T x33 = x31 + x32;
                T x34 = 2 * x21;
                T x35 = 2 * x25;
                T x36 = x34 + x35;
                T x37 = pow(x7, -4.0 / 3.0);
                T x38 = 2 * f[0];
                T x39 = f[0] * f[3];
                T x40 = f[1] * f[4];
                T x41 = f[2] * f[5];
                T x42 = x39 + x40 + x41;
                T x43 = 2 * f[3];
                T x44 = f[0] * f[6];
                T x45 = f[1] * f[7];
                T x46 = f[2] * f[8];
                T x47 = x44 + x45 + x46;
                T x48 = 2 * f[6];
                T x49 = 2 * f[0] * x28 - x19 * x38 - x42 * x43 - x47 * x48;
                T x50 = pow(x7, -7.0 / 3.0);
                T x51 = (4.0 / 3.0) * f[5] * f[7] - 4.0 / 3.0 * x0;
                T x52 = x50 * x51;
                T x53 = f[3] * f[6];
                T x54 = f[4] * f[7];
                T x55 = f[5] * f[8];
                T x56 = x53 + x54 + x55;
                T x57 = -1.0 / 2.0 * pow(x19, 2) - 1.0 / 2.0 * pow(x23, 2) - 1.0 / 2.0 * pow(x27, 2) +
                        (1.0 / 2.0) * pow(x28, 2) - pow(x42, 2) - pow(x47, 2) - pow(x56, 2);
                T x58 = x57 / pow(x7, 10.0 / 3.0);
                T x59 = x58 * ((7.0 / 3.0) * f[5] * f[7] - 7.0 / 3.0 * x0);
                T x60 = -f[5] * f[6] + x5;
                T x61 = -x60;
                T x62 = x61 * x9;
                T x63 = x61 * x8;
                T x64 = -2.0 / 3.0 * x3 + (2.0 / 3.0) * x5;
                T x65 = x13 * x38;
                T x66 = 2 * f[1];
                T x67 = x15 * x66 + x64 * x65;
                T x68 = -4.0 / 3.0 * x3 + (4.0 / 3.0) * x5;
                T x69 = f[4] * x43;
                T x70 = f[7] * x48;
                T x71 = 2 * x42;
                T x72 = 2 * x47;
                T x73 = 2 * f[1] * x28 - f[4] * x71 - f[7] * x72 - x19 * x66;
                T x74 = x49 * x50;
                T x75 = x37 * (-x69 - x70) + x52 * x73 + x68 * x74;
                T x76 = x4 - x6;
                T x77 = x76 * x9;
                T x78 = x76 * x8;
                T x79 = (2.0 / 3.0) * f[4] * f[6] - 2.0 / 3.0 * x4;
                T x80 = 2 * f[2];
                T x81 = x15 * x80 + x65 * x79;
                T x82 = (4.0 / 3.0) * f[4] * f[6] - 4.0 / 3.0 * x4;
                T x83 = f[5] * x43;
                T x84 = f[8] * x48;
                T x85 = 2 * f[2] * x28 - f[5] * x71 - f[8] * x72 - x19 * x80;
                T x86 = x37 * (-x83 - x84) + x52 * x85 + x74 * x82;
                T x87 = f[1] * f[8];
                T x88 = -f[2] * f[7] + x87;
                T x89 = -x88;
                T x90 = x89 * x9;
                T x91 = x8 * x89;
                T x92 = f[2] * f[7];
                T x93 = (2.0 / 3.0) * x87 - 2.0 / 3.0 * x92;
                T x94 = x15 * x43 + x65 * x93;
                T x95 = (4.0 / 3.0) * x87 - 4.0 / 3.0 * x92;
                T x96 = 2 * x40;
                T x97 = 2 * x41;
                T x98 = 2 * f[3] * x28 - x23 * x43 - x38 * x42 - x48 * x56;
                T x99 = x37 * (-x96 - x97) + x52 * x98 + x74 * x95;
                T x100 = f[1] * f[5];
                T x101 = f[2] * f[4];
                T x102 = x100 - x101;
                T x103 = x102 * x9;
                T x104 = x102 * x8;
                T x105 = (2.0 / 3.0) * f[2] * f[4] - 2.0 / 3.0 * x100;
                T x106 = x105 * x65 + x15 * x48;
                T x107 = (4.0 / 3.0) * f[2] * f[4] - 4.0 / 3.0 * x100;
                T x108 = 2 * x45;
                T x109 = 2 * x46;
                T x110 = 2 * f[6] * x28 - x27 * x48 - x38 * x47 - x43 * x56;
                T x111 = x107 * x74 + x110 * x52 + x37 * (-x108 - x109);
                T x112 = f[0] * f[8];
                T x113 = (2.0 / 3.0) * f[2] * f[6] - 2.0 / 3.0 * x112;
                T x114 = 2 * f[4];
                T x115 = f[8] * x13;
                T x116 = (2.0 / 3.0) * x28;
                T x117 = x115 * x116;
                T x118 = x113 * x65 + x114 * x15 - x117;
                T x119 = (4.0 / 3.0) * f[2] * f[6] - 4.0 / 3.0 * x112;
                T x120 = f[0] * f[4];
                T x121 = f[1] * f[3];
                T x122 = 2 * x56;
                T x123 = 2 * f[4] * x28 - f[7] * x122 - x114 * x23 - x42 * x66;
                T x124 = (4.0 / 3.0) * x50 * x57;
                T x125 = f[8] * x124;
                T x126 = x119 * x74 + x123 * x52 - x125 + x37 * (4 * x120 - 2 * x121);
                T x127 = f[2] * f[6];
                T x128 = x112 - x127;
                T x129 = x128 * x8;
                T x130 = K * x10 / x7;
                T x131 = f[8] * x130;
                T x132 = x128 * x9 + x131;
                T x133 = (2.0 / 3.0) * f[1] * f[3] - 2.0 / 3.0 * x120;
                T x134 = 2 * f[8];
                T x135 = x116 * x13;
                T x136 = f[4] * x135;
                T x137 = x133 * x65 + x134 * x15 - x136;
                T x138 = (4.0 / 3.0) * f[1] * f[3] - 4.0 / 3.0 * x120;
                T x139 = -f[2] * x72 - f[5] * x122 + 2 * f[8] * x28 - x134 * x27;
                T x140 = f[4] * x124;
                T x141 = x138 * x74 + x139 * x52 - x140 + x37 * (4 * x112 - 2 * x127);
                T x142 = x120 - x121;
                T x143 = x142 * x8;
                T x144 = f[4] * x130;
                T x145 = x142 * x9 + x144;
                T x146 = f[0] * f[7];
                T x147 = f[1] * f[6];
                T x148 = (2.0 / 3.0) * x146 - 2.0 / 3.0 * x147;
                T x149 = 2 * f[5];
                T x150 = f[7] * x135;
                T x151 = x148 * x65 + x149 * x15 + x150;
                T x152 = (4.0 / 3.0) * x146 - 4.0 / 3.0 * x147;
                T x153 = f[0] * f[5];
                T x154 = f[2] * f[3];
                T x155 = -f[2] * x71 + 2 * f[5] * x28 - f[8] * x122 - x149 * x23;
                T x156 = f[7] * x124;
                T x157 = x152 * x74 + x155 * x52 + x156 + x37 * (4 * x153 - 2 * x154);
                T x158 = -f[1] * f[6] + x146;
                T x159 = -x158;
                T x160 = x159 * x8;
                T x161 = f[7] * x130;
                T x162 = x159 * x9 - x161;
                T x163 = (2.0 / 3.0) * x153 - 2.0 / 3.0 * x154;
                T x164 = 2 * f[7];
                T x165 = f[5] * x135;
                T x166 = x15 * x164 + x163 * x65 + x165;
                T x167 = (4.0 / 3.0) * x153 - 4.0 / 3.0 * x154;
                T x168 = 2 * f[7] * x28 - x114 * x56 - x164 * x27 - x47 * x66;
                T x169 = f[5] * x124;
                T x170 = x167 * x74 + x168 * x52 + x169 + x37 * (4 * x146 - 2 * x147);
                T x171 = -f[2] * f[3] + x153;
                T x172 = -x171;
                T x173 = x172 * x8;
                T x174 = f[5] * x130;
                T x175 = x172 * x9 - x174;
                T x176 = x10 * x60;
                T x177 = x13 * x64;
                T x178 = x29 * (-5.0 / 3.0 * x3 + (5.0 / 3.0) * x5);
                T x179 = 2 * x20;
                T x180 = 2 * x24;
                T x181 = x179 + x180;
                T x182 = x50 * x73;
                T x183 = x58 * (-7.0 / 3.0 * x3 + (7.0 / 3.0) * x5);
                T x184 = x63 * x76;
                T x185 = x13 * x66;
                T x186 = x177 * x80 + x185 * x79;
                T x187 = f[5] * x114;
                T x188 = f[8] * x164;
                T x189 = x50 * x68;
                T x190 = x182 * x82 + x189 * x85 + x37 * (-x187 - x188);
                T x191 = x128 * x63;
                T x192 = x113 * x185 + x114 * x177;
                T x193 = 2 * x39;
                T x194 = x119 * x182 + x123 * x189 + x37 * (-x193 - x97);
                T x195 = x172 * x63;
                T x196 = x163 * x185 + x164 * x177;
                T x197 = 2 * x44;
                T x198 = x167 * x182 + x168 * x189 + x37 * (-x109 - x197);
                T x199 = f[6] * x135;
                T x200 = x148 * x185 + x149 * x177 - x199;
                T x201 = f[6] * x124;
                T x202 = x152 * x182 + x155 * x189 - x201 + x37 * (4 * x100 - 2 * x101);
                T x203 = f[6] * x130;
                T x204 = x159 * x63 + x203;
                T x205 = x105 * x185 - x165 + x177 * x48;
                T x206 = x107 * x182 + x110 * x189 - x169 + x37 * (4 * f[1] * f[6] - 2 * x146);
                T x207 = x102 * x63 + x174;
                T x208 = x117 + x177 * x43 + x185 * x93;
                T x209 = x125 + x182 * x95 + x189 * x98 + x37 * (4 * f[1] * f[3] - 2 * x120);
                T x210 = -x131 + x63 * x89;
                T x211 = f[3] * x135;
                T x212 = x133 * x185 + x134 * x177 + x211;
                T x213 = f[3] * x124;
                T x214 = x138 * x182 + x139 * x189 + x213 + x37 * (4 * x87 - 2 * x92);
                T x215 = f[3] * x130;
                T x216 = x142 * x63 - x215;
                T x217 = -x10 * x76;
                T x218 = x13 * x79;
                T x219 = x29 * ((5.0 / 3.0) * f[4] * f[6] - 5.0 / 3.0 * x4);
                T x220 = x50 * x85;
                T x221 = x58 * ((7.0 / 3.0) * f[4] * f[6] - 7.0 / 3.0 * x4);
                T x222 = x159 * x78;
                T x223 = x13 * x80;
                T x224 = x148 * x223 + x149 * x218;
                T x225 = x50 * x82;
                T x226 = x152 * x220 + x155 * x225 + x37 * (-x193 - x96);
                T x227 = x142 * x78;
                T x228 = x133 * x223 + x134 * x218;
                T x229 = x138 * x220 + x139 * x225 + x37 * (-x108 - x197);
                T x230 = -x150 + x218 * x43 + x223 * x93;
                T x231 = -x156 + x220 * x95 + x225 * x98 + x37 * (4 * f[2] * f[3] - 2 * x153);
                T x232 = x161 + x78 * x89;
                T x233 = x163 * x223 + x164 * x218 - x211;
                T x234 = x167 * x220 + x168 * x225 - x213 + x37 * (4 * f[2] * f[7] - 2 * x87);
                T x235 = x172 * x78 + x215;
                T x236 = x113 * x223 + x114 * x218 + x199;
                T x237 = x119 * x220 + x123 * x225 + x201 + x37 * (4 * f[2] * f[4] - 2 * x100);
                T x238 = x128 * x78 - x203;
                T x239 = x105 * x223 + x136 + x218 * x48;
                T x240 = x107 * x220 + x110 * x225 + x140 + x37 * (4 * f[2] * f[6] - 2 * x112);
                T x241 = x102 * x78 - x144;
                T x242 = x10 * x88;
                T x243 = x13 * x93;
                T x244 = x29 * ((5.0 / 3.0) * x87 - 5.0 / 3.0 * x92);
                T x245 = 2 * x18;
                T x246 = x245 + x32;
                T x247 = 2 * x17;
                T x248 = x247 + x35;
                T x249 = x50 * x98;
                T x250 = x58 * ((7.0 / 3.0) * x87 - 7.0 / 3.0 * x92);
                T x251 = x128 * x91;
                T x252 = x13 * x43;
                T x253 = x113 * x252 + x114 * x243;
                T x254 = f[1] * x38;
                T x255 = x50 * x95;
                T x256 = x119 * x249 + x123 * x255 + x37 * (-x254 - x70);
                T x257 = x159 * x91;
                T x258 = x148 * x252 + x149 * x243;
                T x259 = f[2] * x38;
                T x260 = x152 * x249 + x155 * x255 + x37 * (-x259 - x84);
                T x261 = x102 * x91;
                T x262 = x105 * x252 + x243 * x48;
                T x263 = 2 * x54;
                T x264 = 2 * x55;
                T x265 = x107 * x249 + x110 * x255 + x37 * (-x263 - x264);
                T x266 = f[2] * x135;
                T x267 = x163 * x252 + x164 * x243 - x266;
                T x268 = f[2] * x124;
                T x269 = x167 * x249 + x168 * x255 - x268 + x37 * (4 * x4 - 2 * x6);
                T x270 = f[2] * x130;
                T x271 = x172 * x91 + x270;
                T x272 = f[1] * x135;
                T x273 = x133 * x252 + x134 * x243 + x272;
                T x274 = f[1] * x124;
                T x275 = x138 * x249 + x139 * x255 + x274 + x37 * (-2 * x3 + 4 * x5);
                T x276 = f[1] * x130;
                T x277 = x142 * x91 - x276;
                T x278 = -x10 * x128;
                T x279 = x113 * x13;
                T x280 = x29 * ((5.0 / 3.0) * f[2] * f[6] - 5.0 / 3.0 * x112);
                T x281 = 2 * x16;
                T x282 = x180 + x281;
                T x283 = x119 * x50;
                T x284 = x58 * ((7.0 / 3.0) * f[2] * f[6] - 7.0 / 3.0 * x112);
                T x285 = x129 * x159;
                T x286 = x114 * x13;
                T x287 = x148 * x286 + x149 * x279;
                T x288 = f[2] * x66;
                T x289 = x123 * x50;
                T x290 = x152 * x289 + x155 * x283 + x37 * (-x188 - x288);
                T x291 = x129 * x172;
                T x292 = x163 * x286 + x164 * x279;
                T x293 = 2 * x53;
                T x294 = x167 * x289 + x168 * x283 + x37 * (-x264 - x293);
                T x295 = f[0] * x135;
                T x296 = x133 * x286 + x134 * x279 - x295;
                T x297 = f[0] * x124;
                T x298 = x138 * x289 + x139 * x283 - x297 + x37 * (4 * x0 - 2 * x1);
                T x299 = f[0] * x130;
                T x300 = x129 * x142 + x299;
                T x301 = x105 * x286 + x266 + x279 * x48;
                T x302 = x107 * x289 + x110 * x283 + x268 + x37 * (4 * f[4] * f[6] - 2 * x4);
                T x303 = x102 * x129 - x270;
                T x304 = x10 * x158;
                T x305 = x13 * x148;
                T x306 = x29 * ((5.0 / 3.0) * x146 - 5.0 / 3.0 * x147);
                T x307 = x155 * x50;
                T x308 = x58 * ((7.0 / 3.0) * x146 - 7.0 / 3.0 * x147);
                T x309 = x142 * x160;
                T x310 = x13 * x149;
                T x311 = x133 * x310 + x134 * x305;
                T x312 = x152 * x50;
                T x313 = x138 * x307 + x139 * x312 + x37 * (-x263 - x293);
                T x314 = x105 * x310 - x272 + x305 * x48;
                T x315 = x107 * x307 + x110 * x312 - x274 + x37 * (4 * f[5] * f[6] - 2 * x5);
                T x316 = x102 * x160 + x276;
                T x317 = x163 * x310 + x164 * x305 + x295;
                T x318 = x167 * x307 + x168 * x312 + x297 + x37 * (4 * f[5] * f[7] - 2 * x0);
                T x319 = x160 * x172 - x299;
                T x320 = -x10 * x102;
                T x321 = x105 * x13;
                T x322 = x29 * ((5.0 / 3.0) * f[2] * f[4] - 5.0 / 3.0 * x100);
                T x323 = x245 + x31;
                T x324 = x247 + x34;
                T x325 = x107 * x50;
                T x326 = x58 * ((7.0 / 3.0) * f[2] * f[4] - 7.0 / 3.0 * x100);
                T x327 = x104 * x172;
                T x328 = x13 * x48;
                T x329 = x163 * x328 + x164 * x321;
                T x330 = x110 * x50;
                T x331 = x167 * x330 + x168 * x325 + x37 * (-x254 - x69);
                T x332 = x104 * x142;
                T x333 = x133 * x328 + x134 * x321;
                T x334 = x138 * x330 + x139 * x325 + x37 * (-x259 - x83);
                T x335 = x10 * x171;
                T x336 = x13 * x163;
                T x337 = x29 * ((5.0 / 3.0) * x153 - 5.0 / 3.0 * x154);
                T x338 = x179 + x281;
                T x339 = x168 * x50;
                T x340 = x58 * ((7.0 / 3.0) * x153 - 7.0 / 3.0 * x154);
                T x341 = x142 * x173;
                T x342 = x13 * x133 * x164 + x134 * x336;
                T x343 = x139 * x50;
                T x344 = x138 * x339 + x167 * x343 + x37 * (-x187 - x288);
                T x345 = -x10 * x142;
                T x346 = x29 * ((5.0 / 3.0) * f[1] * f[3] - 5.0 / 3.0 * x120);
                T x347 = x58 * ((7.0 / 3.0) * f[1] * f[3] - 7.0 / 3.0 * x120);
                res[0] +=
                    dx *
                    (grad_test[0] *
                         (disp_grad[0] *
                              (C1 * (4 * f[0] * x15 + x12 + x14 * x30) +
                               C2 * (x37 * (x33 + x36) + 2 * x49 * x52 + x51 * x59) + x11 * x9 + pow(x2, 2) * x8) +
                          disp_grad[1] * (C1 * (x30 * x64 + x67) + C2 * (x59 * x68 + x75) + x11 * x63 + x62) +
                          disp_grad[2] * (C1 * (x30 * x79 + x81) + C2 * (x59 * x82 + x86) + x11 * x78 + x77) +
                          disp_grad[3] * (C1 * (x30 * x93 + x94) + C2 * (x59 * x95 + x99) + x11 * x91 + x90) +
                          disp_grad[4] * (C1 * (x113 * x30 + x118) + C2 * (x119 * x59 + x126) + x11 * x129 + x132) +
                          disp_grad[5] * (C1 * (x148 * x30 + x151) + C2 * (x152 * x59 + x157) + x11 * x160 + x162) +
                          disp_grad[6] * (C1 * (x105 * x30 + x106) + C2 * (x107 * x59 + x111) + x103 + x104 * x11) +
                          disp_grad[7] * (C1 * (x163 * x30 + x166) + C2 * (x167 * x59 + x170) + x11 * x173 + x175) +
                          disp_grad[8] * (C1 * (x133 * x30 + x137) + C2 * (x138 * x59 + x141) + x11 * x143 + x145)) +
                     grad_test[1] *
                         (disp_grad[0] * (C1 * (x14 * x178 + x67) + C2 * (x183 * x51 + x75) + x176 * x9 + x62) +
                          disp_grad[1] * (C1 * (4 * f[1] * x177 + x12 + x178 * x64) +
                                          C2 * (2 * x182 * x68 + x183 * x68 + x37 * (x181 + x33)) + x176 * x63 +
                                          pow(x61, 2) * x8) +
                          disp_grad[2] * (C1 * (x178 * x79 + x186) + C2 * (x183 * x82 + x190) + x176 * x78 + x184) +
                          disp_grad[3] * (C1 * (x178 * x93 + x208) + C2 * (x183 * x95 + x209) + x176 * x91 + x210) +
                          disp_grad[4] * (C1 * (x113 * x178 + x192) + C2 * (x119 * x183 + x194) + x129 * x176 + x191) +
                          disp_grad[5] * (C1 * (x148 * x178 + x200) + C2 * (x152 * x183 + x202) + x160 * x176 + x204) +
                          disp_grad[6] * (C1 * (x105 * x178 + x205) + C2 * (x107 * x183 + x206) + x104 * x176 + x207) +
                          disp_grad[7] * (C1 * (x163 * x178 + x196) + C2 * (x167 * x183 + x198) + x173 * x176 + x195) +
                          disp_grad[8] * (C1 * (x133 * x178 + x212) + C2 * (x138 * x183 + x214) + x143 * x176 + x216)) +
                     grad_test[2] *
                         (disp_grad[0] * (C1 * (x14 * x219 + x81) + C2 * (x221 * x51 + x86) + x217 * x9 + x77) +
                          disp_grad[1] * (C1 * (x186 + x219 * x64) + C2 * (x190 + x221 * x68) + x184 + x217 * x63) +
                          disp_grad[2] * (C1 * (4 * f[2] * x218 + x12 + x219 * x79) +
                                          C2 * (2 * x220 * x82 + x221 * x82 + x37 * (x181 + x36)) + x217 * x78 +
                                          pow(x76, 2) * x8) +
                          disp_grad[3] * (C1 * (x219 * x93 + x230) + C2 * (x221 * x95 + x231) + x217 * x91 + x232) +
                          disp_grad[4] * (C1 * (x113 * x219 + x236) + C2 * (x119 * x221 + x237) + x129 * x217 + x238) +
                          disp_grad[5] * (C1 * (x148 * x219 + x224) + C2 * (x152 * x221 + x226) + x160 * x217 + x222) +
                          disp_grad[6] * (C1 * (x105 * x219 + x239) + C2 * (x107 * x221 + x240) + x104 * x217 + x241) +
                          disp_grad[7] * (C1 * (x163 * x219 + x233) + C2 * (x167 * x221 + x234) + x173 * x217 + x235) +
                          disp_grad[8] * (C1 * (x133 * x219 + x228) + C2 * (x138 * x221 + x229) + x143 * x217 + x227)));
                res[1] +=
                    dx *
                    (grad_test[0] *
                         (disp_grad[0] * (C1 * (x14 * x244 + x94) + C2 * (x250 * x51 + x99) + x242 * x9 + x90) +
                          disp_grad[1] * (C1 * (x208 + x244 * x64) + C2 * (x209 + x250 * x68) + x210 + x242 * x63) +
                          disp_grad[2] * (C1 * (x230 + x244 * x79) + C2 * (x231 + x250 * x82) + x232 + x242 * x78) +
                          disp_grad[3] * (C1 * (4 * f[3] * x243 + x12 + x244 * x93) +
                                          C2 * (2 * x249 * x95 + x250 * x95 + x37 * (x246 + x248)) + x242 * x91 +
                                          x8 * pow(x89, 2)) +
                          disp_grad[4] * (C1 * (x113 * x244 + x253) + C2 * (x119 * x250 + x256) + x129 * x242 + x251) +
                          disp_grad[5] * (C1 * (x148 * x244 + x258) + C2 * (x152 * x250 + x260) + x160 * x242 + x257) +
                          disp_grad[6] * (C1 * (x105 * x244 + x262) + C2 * (x107 * x250 + x265) + x104 * x242 + x261) +
                          disp_grad[7] * (C1 * (x163 * x244 + x267) + C2 * (x167 * x250 + x269) + x173 * x242 + x271) +
                          disp_grad[8] * (C1 * (x133 * x244 + x273) + C2 * (x138 * x250 + x275) + x143 * x242 + x277)) +
                     grad_test[1] *
                         (disp_grad[0] * (C1 * (x118 + x14 * x280) + C2 * (x126 + x284 * x51) + x132 + x278 * x9) +
                          disp_grad[1] * (C1 * (x192 + x280 * x64) + C2 * (x194 + x284 * x68) + x191 + x278 * x63) +
                          disp_grad[2] * (C1 * (x236 + x280 * x79) + C2 * (x237 + x284 * x82) + x238 + x278 * x78) +
                          disp_grad[3] * (C1 * (x253 + x280 * x93) + C2 * (x256 + x284 * x95) + x251 + x278 * x91) +
                          disp_grad[4] * (C1 * (4 * f[4] * x279 + x113 * x280 + x12) +
                                          C2 * (x119 * x284 + 2 * x123 * x283 + x37 * (x246 + x282)) +
                                          pow(x128, 2) * x8 + x129 * x278) +
                          disp_grad[5] * (C1 * (x148 * x280 + x287) + C2 * (x152 * x284 + x290) + x160 * x278 + x285) +
                          disp_grad[6] * (C1 * (x105 * x280 + x301) + C2 * (x107 * x284 + x302) + x104 * x278 + x303) +
                          disp_grad[7] * (C1 * (x163 * x280 + x292) + C2 * (x167 * x284 + x294) + x173 * x278 + x291) +
                          disp_grad[8] * (C1 * (x133 * x280 + x296) + C2 * (x138 * x284 + x298) + x143 * x278 + x300)) +
                     grad_test[2] *
                         (disp_grad[0] * (C1 * (x14 * x306 + x151) + C2 * (x157 + x308 * x51) + x162 + x304 * x9) +
                          disp_grad[1] * (C1 * (x200 + x306 * x64) + C2 * (x202 + x308 * x68) + x204 + x304 * x63) +
                          disp_grad[2] * (C1 * (x224 + x306 * x79) + C2 * (x226 + x308 * x82) + x222 + x304 * x78) +
                          disp_grad[3] * (C1 * (x258 + x306 * x93) + C2 * (x260 + x308 * x95) + x257 + x304 * x91) +
                          disp_grad[4] * (C1 * (x113 * x306 + x287) + C2 * (x119 * x308 + x290) + x129 * x304 + x285) +
                          disp_grad[5] * (C1 * (4 * f[5] * x305 + x12 + x148 * x306) +
                                          C2 * (2 * x152 * x307 + x152 * x308 + x37 * (x248 + x282)) +
                                          pow(x159, 2) * x8 + x160 * x304) +
                          disp_grad[6] * (C1 * (x105 * x306 + x314) + C2 * (x107 * x308 + x315) + x104 * x304 + x316) +
                          disp_grad[7] * (C1 * (x163 * x306 + x317) + C2 * (x167 * x308 + x318) + x173 * x304 + x319) +
                          disp_grad[8] * (C1 * (x133 * x306 + x311) + C2 * (x138 * x308 + x313) + x143 * x304 + x309)));
                res[2] +=
                    dx *
                    (grad_test[0] *
                         (disp_grad[0] * (C1 * (x106 + x14 * x322) + C2 * (x111 + x326 * x51) + x103 + x320 * x9) +
                          disp_grad[1] * (C1 * (x205 + x322 * x64) + C2 * (x206 + x326 * x68) + x207 + x320 * x63) +
                          disp_grad[2] * (C1 * (x239 + x322 * x79) + C2 * (x240 + x326 * x82) + x241 + x320 * x78) +
                          disp_grad[3] * (C1 * (x262 + x322 * x93) + C2 * (x265 + x326 * x95) + x261 + x320 * x91) +
                          disp_grad[4] * (C1 * (x113 * x322 + x301) + C2 * (x119 * x326 + x302) + x129 * x320 + x303) +
                          disp_grad[5] * (C1 * (x148 * x322 + x314) + C2 * (x152 * x326 + x315) + x160 * x320 + x316) +
                          disp_grad[6] * (C1 * (4 * f[6] * x321 + x105 * x322 + x12) +
                                          C2 * (x107 * x326 + 2 * x110 * x325 + x37 * (x323 + x324)) +
                                          pow(x102, 2) * x8 + x104 * x320) +
                          disp_grad[7] * (C1 * (x163 * x322 + x329) + C2 * (x167 * x326 + x331) + x173 * x320 + x327) +
                          disp_grad[8] * (C1 * (x133 * x322 + x333) + C2 * (x138 * x326 + x334) + x143 * x320 + x332)) +
                     grad_test[1] *
                         (disp_grad[0] * (C1 * (x14 * x337 + x166) + C2 * (x170 + x340 * x51) + x175 + x335 * x9) +
                          disp_grad[1] * (C1 * (x196 + x337 * x64) + C2 * (x198 + x340 * x68) + x195 + x335 * x63) +
                          disp_grad[2] * (C1 * (x233 + x337 * x79) + C2 * (x234 + x340 * x82) + x235 + x335 * x78) +
                          disp_grad[3] * (C1 * (x267 + x337 * x93) + C2 * (x269 + x340 * x95) + x271 + x335 * x91) +
                          disp_grad[4] * (C1 * (x113 * x337 + x292) + C2 * (x119 * x340 + x294) + x129 * x335 + x291) +
                          disp_grad[5] * (C1 * (x148 * x337 + x317) + C2 * (x152 * x340 + x318) + x160 * x335 + x319) +
                          disp_grad[6] * (C1 * (x105 * x337 + x329) + C2 * (x107 * x340 + x331) + x104 * x335 + x327) +
                          disp_grad[7] * (C1 * (4 * f[7] * x336 + x12 + x163 * x337) +
                                          C2 * (2 * x167 * x339 + x167 * x340 + x37 * (x323 + x338)) +
                                          pow(x172, 2) * x8 + x173 * x335) +
                          disp_grad[8] * (C1 * (x133 * x337 + x342) + C2 * (x138 * x340 + x344) + x143 * x335 + x341)) +
                     grad_test[2] *
                         (disp_grad[0] * (C1 * (x137 + x14 * x346) + C2 * (x141 + x347 * x51) + x145 + x345 * x9) +
                          disp_grad[1] * (C1 * (x212 + x346 * x64) + C2 * (x214 + x347 * x68) + x216 + x345 * x63) +
                          disp_grad[2] * (C1 * (x228 + x346 * x79) + C2 * (x229 + x347 * x82) + x227 + x345 * x78) +
                          disp_grad[3] * (C1 * (x273 + x346 * x93) + C2 * (x275 + x347 * x95) + x277 + x345 * x91) +
                          disp_grad[4] * (C1 * (x113 * x346 + x296) + C2 * (x119 * x347 + x298) + x129 * x345 + x300) +
                          disp_grad[5] * (C1 * (x148 * x346 + x311) + C2 * (x152 * x347 + x313) + x160 * x345 + x309) +
                          disp_grad[6] * (C1 * (x105 * x346 + x333) + C2 * (x107 * x347 + x334) + x104 * x345 + x332) +
                          disp_grad[7] * (C1 * (x163 * x346 + x342) + C2 * (x167 * x347 + x344) + x173 * x345 + x341) +
                          disp_grad[8] * (C1 * (4 * x115 * x133 + x12 + x133 * x346) +
                                          C2 * (2 * x138 * x343 + x138 * x347 + x37 * (x324 + x338)) +
                                          pow(x142, 2) * x8 + x143 * x345)));
            }

            T C1{0.083};
            T C2{0.083};
            T K{166.67};
        };
    }  // namespace kernels
}  // namespace utopia

#endif  // UTOPIA_TPL_HYPERELASTICITY_MooneyRivlin_3_IMPL_hpp
