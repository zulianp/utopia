#ifndef UTOPIA_TPL_HYPERELASTICITY_MooneyRivlin_3_IMPL_hpp
#define UTOPIA_TPL_HYPERELASTICITY_MooneyRivlin_3_IMPL_hpp

#include "utopia_Input.hpp"

#include "utopia_hyperelasticity_MooneyRivlin.hpp"

namespace utopia {
	namespace kernels {

		/**
		 * Specialization of MooneyRivlin for dimension 3
		 */
		template<typename T>
		class MooneyRivlin<T, 3> {
		public:
			static constexpr int Dim = 3;

			class Params : public Configurable {
			public:
				void read(Input &in) override
				{
					in.get("C1", C1);
					in.get("C2", C2);
				}

				T C1{1.0};
				T C2{1.0};
			};

			MooneyRivlin(const Params &params)
			{
				C1 = params.C1;
				C2 = params.C2;
			}

			UTOPIA_FUNCTION void hessian(
				const T *UTOPIA_RESTRICT f,
				const T *grad_test,
				const T *grad_trial,
				const T dx,
				T *UTOPIA_RESTRICT bf) const
			{
				using namespace utopia::device;
				// Automatically generated
				T x0 = f[4]*f[8];
				T x1 = f[5]*f[6];
				T x2 = f[3]*f[7];
				T x3 = f[5]*f[7];
				T x4 = f[3]*f[8];
				T x5 = f[4]*f[6];
				T x6 = f[0]*x0 - f[0]*x3 + f[1]*x1 - f[1]*x4 + f[2]*x2 - f[2]*x5;
				T x7 = 2/pow(x6, 2.0/3.0);
				T x8 = pow(x6, -5.0/3.0);
				T x9 = -2.0/3.0*x0 + (2.0/3.0)*x3;
				T x10 = x8*x9;
				T x11 = pow(f[0], 2);
				T x12 = pow(f[3], 2);
				T x13 = pow(f[6], 2);
				T x14 = x11 + x12 + x13;
				T x15 = pow(f[1], 2);
				T x16 = pow(f[4], 2);
				T x17 = pow(f[7], 2);
				T x18 = x15 + x16 + x17;
				T x19 = pow(f[2], 2);
				T x20 = pow(f[5], 2);
				T x21 = pow(f[8], 2);
				T x22 = x19 + x20 + x21;
				T x23 = x14 + x18 + x22;
				T x24 = x23/pow(x6, 8.0/3.0);
				T x25 = x24*(-5.0/3.0*x0 + (5.0/3.0)*x3);
				T x26 = 2*x20;
				T x27 = 2*x21;
				T x28 = x26 + x27;
				T x29 = 2*x16;
				T x30 = 2*x17;
				T x31 = x29 + x30;
				T x32 = pow(x6, -4.0/3.0);
				T x33 = 2*f[0];
				T x34 = f[0]*f[1];
				T x35 = f[3]*f[4];
				T x36 = f[6]*f[7];
				T x37 = x34 + x35 + x36;
				T x38 = 2*f[1];
				T x39 = f[0]*f[2];
				T x40 = f[3]*f[5];
				T x41 = f[6]*f[8];
				T x42 = x39 + x40 + x41;
				T x43 = 2*f[2];
				T x44 = -x14*x33 + x23*x33 - x37*x38 - x42*x43;
				T x45 = pow(x6, -7.0/3.0);
				T x46 = -4.0/3.0*x0 + (4.0/3.0)*x3;
				T x47 = x45*x46;
				T x48 = f[1]*f[2];
				T x49 = f[4]*f[5];
				T x50 = f[7]*f[8];
				T x51 = x48 + x49 + x50;
				T x52 = -1.0/2.0*pow(x14, 2) - 1.0/2.0*pow(x18, 2) - 1.0/2.0*pow(x22, 2) + (1.0/2.0)*pow(x23, 2) - pow(x37, 2) - pow(x42, 2) - pow(x51, 2);
				T x53 = x52/pow(x6, 10.0/3.0);
				T x54 = x53*(-7.0/3.0*x0 + (7.0/3.0)*x3);
				T x55 = -2.0/3.0*x1 + (2.0/3.0)*x4;
				T x56 = x33*x8;
				T x57 = x10*x38 + x55*x56;
				T x58 = -4.0/3.0*x1 + (4.0/3.0)*x4;
				T x59 = -2*x35;
				T x60 = -2*x36;
				T x61 = -x18*x38 + x23*x38 - x33*x37 - x43*x51;
				T x62 = x44*x45;
				T x63 = x32*(x59 + x60) + x47*x61 + x58*x62;
				T x64 = -2.0/3.0*x2 + (2.0/3.0)*x5;
				T x65 = x10*x43 + x56*x64;
				T x66 = -4.0/3.0*x2 + (4.0/3.0)*x5;
				T x67 = -2*x40;
				T x68 = -2*x41;
				T x69 = -x22*x43 + x23*x43 - x33*x42 - x38*x51;
				T x70 = x32*(x67 + x68) + x47*x69 + x62*x66;
				T x71 = x55*x8;
				T x72 = x24*(-5.0/3.0*x1 + (5.0/3.0)*x4);
				T x73 = 2*x12;
				T x74 = 2*x13;
				T x75 = x73 + x74;
				T x76 = x45*x61;
				T x77 = x53*(-7.0/3.0*x1 + (7.0/3.0)*x4);
				T x78 = x64*x8;
				T x79 = x38*x78 + x43*x71;
				T x80 = -2*x49;
				T x81 = -2*x50;
				T x82 = x45*x58;
				T x83 = x32*(x80 + x81) + x66*x76 + x69*x82;
				T x84 = x24*(-5.0/3.0*x2 + (5.0/3.0)*x5);
				T x85 = x45*x69;
				T x86 = x53*(-7.0/3.0*x2 + (7.0/3.0)*x5);
				T x87 = f[1]*f[8];
				T x88 = f[2]*f[7];
				T x89 = x24*((5.0/3.0)*x87 - 5.0/3.0*x88);
				T x90 = (2.0/3.0)*x87 - 2.0/3.0*x88;
				T x91 = 2*f[3];
				T x92 = x10*x91 + x56*x90;
				T x93 = x53*((7.0/3.0)*x87 - 7.0/3.0*x88);
				T x94 = -f[4]*x38;
				T x95 = -f[5]*x43;
				T x96 = (4.0/3.0)*x87 - 4.0/3.0*x88;
				T x97 = 2*f[4];
				T x98 = 2*f[5];
				T x99 = -x14*x91 + x23*x91 - x37*x97 - x42*x98;
				T x100 = x32*(x94 + x95) + x47*x99 + x62*x96;
				T x101 = x8*x90;
				T x102 = f[8]*x8;
				T x103 = (2.0/3.0)*x23;
				T x104 = x102*x103;
				T x105 = x101*x38 + x104 + x71*x91;
				T x106 = 4*f[3];
				T x107 = (4.0/3.0)*x45*x52;
				T x108 = f[8]*x107;
				T x109 = x108 + x32*(f[1]*x106 - f[4]*x33) + x76*x96 + x82*x99;
				T x110 = x103*x8;
				T x111 = f[7]*x110;
				T x112 = x101*x43 - x111 + x78*x91;
				T x113 = x45*x66;
				T x114 = f[7]*x107;
				T x115 = x113*x99 - x114 + x32*(f[2]*x106 - f[5]*x33) + x85*x96;
				T x116 = f[0]*f[8];
				T x117 = f[2]*f[6];
				T x118 = x24*(-5.0/3.0*x116 + (5.0/3.0)*x117);
				T x119 = -2.0/3.0*x116 + (2.0/3.0)*x117;
				T x120 = x119*x8;
				T x121 = x120*x38 + x71*x97;
				T x122 = x53*(-7.0/3.0*x116 + (7.0/3.0)*x117);
				T x123 = -f[3]*x33;
				T x124 = -4.0/3.0*x116 + (4.0/3.0)*x117;
				T x125 = -x18*x97 + x23*x97 - x37*x91 - x51*x98;
				T x126 = x124*x76 + x125*x82 + x32*(x123 + x95);
				T x127 = x10*x97 - x104 + x119*x56;
				T x128 = 4*f[4];
				T x129 = -x108 + x124*x62 + x125*x47 + x32*(f[0]*x128 - f[3]*x38);
				T x130 = f[6]*x110;
				T x131 = x120*x43 + x130 + x78*x97;
				T x132 = f[6]*x107;
				T x133 = x113*x125 + x124*x85 + x132 + x32*(f[2]*x128 - f[5]*x38);
				T x134 = f[0]*f[7];
				T x135 = f[1]*f[6];
				T x136 = x24*((5.0/3.0)*x134 - 5.0/3.0*x135);
				T x137 = (2.0/3.0)*x134 - 2.0/3.0*x135;
				T x138 = x137*x8;
				T x139 = x138*x43 + x78*x98;
				T x140 = x53*((7.0/3.0)*x134 - 7.0/3.0*x135);
				T x141 = (4.0/3.0)*x134 - 4.0/3.0*x135;
				T x142 = -x22*x98 + x23*x98 - x42*x91 - x51*x97;
				T x143 = x113*x142 + x141*x85 + x32*(x123 + x94);
				T x144 = x10*x98 + x111 + x137*x56;
				T x145 = 4*f[5];
				T x146 = x114 + x141*x62 + x142*x47 + x32*(f[0]*x145 - f[3]*x43);
				T x147 = -x130 + x138*x38 + x71*x98;
				T x148 = -x132 + x141*x76 + x142*x82 + x32*(f[1]*x145 - f[4]*x43);
				T x149 = f[1]*f[5];
				T x150 = f[2]*f[4];
				T x151 = x24*(-5.0/3.0*x149 + (5.0/3.0)*x150);
				T x152 = -2.0/3.0*x149 + (2.0/3.0)*x150;
				T x153 = 2*f[6];
				T x154 = x10*x153 + x152*x56;
				T x155 = x53*(-7.0/3.0*x149 + (7.0/3.0)*x150);
				T x156 = -f[7]*x38;
				T x157 = -f[8]*x43;
				T x158 = -4.0/3.0*x149 + (4.0/3.0)*x150;
				T x159 = 2*f[7];
				T x160 = 2*f[8];
				T x161 = -x14*x153 + x153*x23 - x159*x37 - x160*x42;
				T x162 = x158*x62 + x161*x47 + x32*(x156 + x157);
				T x163 = x152*x8;
				T x164 = f[5]*x110;
				T x165 = x153*x71 + x163*x38 - x164;
				T x166 = f[5]*x107;
				T x167 = x158*x76 + x161*x82 - x166 + x32*(-f[7]*x33 + 4*x135);
				T x168 = f[4]*x110;
				T x169 = x153*x78 + x163*x43 + x168;
				T x170 = f[4]*x107;
				T x171 = x113*x161 + x158*x85 + x170 + x32*(-f[8]*x33 + 4*x117);
				T x172 = f[0]*f[5];
				T x173 = f[2]*f[3];
				T x174 = x24*((5.0/3.0)*x172 - 5.0/3.0*x173);
				T x175 = (2.0/3.0)*x172 - 2.0/3.0*x173;
				T x176 = x175*x8;
				T x177 = x159*x71 + x176*x38;
				T x178 = x53*((7.0/3.0)*x172 - 7.0/3.0*x173);
				T x179 = -f[6]*x33;
				T x180 = (4.0/3.0)*x172 - 4.0/3.0*x173;
				T x181 = -x153*x37 - x159*x18 + x159*x23 - x160*x51;
				T x182 = x180*x76 + x181*x82 + x32*(x157 + x179);
				T x183 = x10*x159 + x164 + x175*x56;
				T x184 = x166 + x180*x62 + x181*x47 + x32*(-f[6]*x38 + 4*x134);
				T x185 = f[3]*x110;
				T x186 = x159*x78 + x176*x43 - x185;
				T x187 = f[3]*x107;
				T x188 = x113*x181 + x180*x85 - x187 + x32*(-f[8]*x38 + 4*x88);
				T x189 = f[0]*f[4];
				T x190 = f[1]*f[3];
				T x191 = x24*(-5.0/3.0*x189 + (5.0/3.0)*x190);
				T x192 = -2.0/3.0*x189 + (2.0/3.0)*x190;
				T x193 = x192*x8;
				T x194 = x160*x78 + x193*x43;
				T x195 = x53*(-7.0/3.0*x189 + (7.0/3.0)*x190);
				T x196 = -4.0/3.0*x189 + (4.0/3.0)*x190;
				T x197 = -x153*x42 - x159*x51 - x160*x22 + x160*x23;
				T x198 = x113*x197 + x196*x85 + x32*(x156 + x179);
				T x199 = x10*x160 - x168 + x192*x56;
				T x200 = -x170 + x196*x62 + x197*x47 + x32*(-f[6]*x43 + 4*x116);
				T x201 = x160*x71 + x185 + x193*x38;
				T x202 = x187 + x196*x76 + x197*x82 + x32*(-f[7]*x43 + 4*x87);
				T x203 = 2*x19;
				T x204 = x203 + x27;
				T x205 = 2*x15;
				T x206 = x205 + x30;
				T x207 = x45*x99;
				T x208 = x101*x97 + x120*x91;
				T x209 = -2*x34;
				T x210 = x45*x96;
				T x211 = x124*x207 + x125*x210 + x32*(x209 + x60);
				T x212 = x101*x98 + x138*x91;
				T x213 = -2*x39;
				T x214 = x141*x207 + x142*x210 + x32*(x213 + x68);
				T x215 = 2*x11;
				T x216 = x215 + x74;
				T x217 = x124*x45;
				T x218 = x120*x98 + x138*x97;
				T x219 = -2*x48;
				T x220 = x125*x45;
				T x221 = x141*x220 + x142*x217 + x32*(x219 + x81);
				T x222 = x142*x45;
				T x223 = x101*x153 + x163*x91;
				T x224 = -f[7]*x97;
				T x225 = -f[8]*x98;
				T x226 = x158*x207 + x161*x210 + x32*(x224 + x225);
				T x227 = f[2]*x110;
				T x228 = x120*x153 + x163*x97 + x227;
				T x229 = f[2]*x107;
				T x230 = x158*x220 + x161*x217 + x229 + x32*(-2*x2 + 4*x5);
				T x231 = f[1]*x110;
				T x232 = x138*x153 + x163*x98 - x231;
				T x233 = x141*x45;
				T x234 = f[1]*x107;
				T x235 = x158*x222 + x161*x233 - x234 + x32*(4*x1 - 2*x4);
				T x236 = x120*x159 + x176*x97;
				T x237 = -f[6]*x91;
				T x238 = x180*x220 + x181*x217 + x32*(x225 + x237);
				T x239 = x101*x159 + x176*x91 - x227;
				T x240 = x180*x207 + x181*x210 - x229 + x32*(4*x2 - 2*x5);
				T x241 = f[0]*x110;
				T x242 = x138*x159 + x176*x98 + x241;
				T x243 = f[0]*x107;
				T x244 = x180*x222 + x181*x233 + x243 + x32*(-2*x0 + 4*x3);
				T x245 = x138*x160 + x193*x98;
				T x246 = x196*x222 + x197*x233 + x32*(x224 + x237);
				T x247 = x101*x160 + x193*x91 + x231;
				T x248 = x196*x207 + x197*x210 + x234 + x32*(-2*x1 + 4*x4);
				T x249 = x120*x160 + x193*x97 - x241;
				T x250 = x196*x220 + x197*x217 - x243 + x32*(4*x0 - 2*x3);
				T x251 = x203 + x26;
				T x252 = x205 + x29;
				T x253 = x158*x45;
				T x254 = x153*x176 + x159*x163;
				T x255 = x161*x45;
				T x256 = x180*x255 + x181*x253 + x32*(x209 + x59);
				T x257 = x153*x193 + x160*x163;
				T x258 = x196*x255 + x197*x253 + x32*(x213 + x67);
				T x259 = x215 + x73;
				T x260 = x181*x45;
				T x261 = x159*x193 + x160*x176;
				T x262 = x197*x45;
				T x263 = x180*x262 + x196*x260 + x32*(x219 + x80);
				bf[0] += dx*(grad_trial[0]*(grad_test[0]*(C1*(4*f[0]*x10 + x25*x9 + x7) + C2*(x32*(x28 + x31) + 2*x44*x47 + x46*x54)) + grad_test[1]*(C1*(x25*x55 + x57) + C2*(x54*x58 + x63)) + grad_test[2]*(C1*(x25*x64 + x65) + C2*(x54*x66 + x70))) + grad_trial[1]*(grad_test[0]*(C1*(x57 + x72*x9) + C2*(x46*x77 + x63)) + grad_test[1]*(C1*(4*f[1]*x71 + x55*x72 + x7) + C2*(x32*(x28 + x75) + 2*x58*x76 + x58*x77)) + grad_test[2]*(C1*(x64*x72 + x79) + C2*(x66*x77 + x83))) + grad_trial[2]*(grad_test[0]*(C1*(x65 + x84*x9) + C2*(x46*x86 + x70)) + grad_test[1]*(C1*(x55*x84 + x79) + C2*(x58*x86 + x83)) + grad_test[2]*(C1*(4*f[2]*x78 + x64*x84 + x7) + C2*(x32*(x31 + x75) + 2*x66*x85 + x66*x86))));
				bf[1] += dx*(grad_trial[0]*(grad_test[0]*(C1*(x89*x9 + x92) + C2*(x100 + x46*x93)) + grad_test[1]*(C1*(x105 + x55*x89) + C2*(x109 + x58*x93)) + grad_test[2]*(C1*(x112 + x64*x89) + C2*(x115 + x66*x93))) + grad_trial[1]*(grad_test[0]*(C1*(x118*x9 + x127) + C2*(x122*x46 + x129)) + grad_test[1]*(C1*(x118*x55 + x121) + C2*(x122*x58 + x126)) + grad_test[2]*(C1*(x118*x64 + x131) + C2*(x122*x66 + x133))) + grad_trial[2]*(grad_test[0]*(C1*(x136*x9 + x144) + C2*(x140*x46 + x146)) + grad_test[1]*(C1*(x136*x55 + x147) + C2*(x140*x58 + x148)) + grad_test[2]*(C1*(x136*x64 + x139) + C2*(x140*x66 + x143))));
				bf[2] += dx*(grad_trial[0]*(grad_test[0]*(C1*(x151*x9 + x154) + C2*(x155*x46 + x162)) + grad_test[1]*(C1*(x151*x55 + x165) + C2*(x155*x58 + x167)) + grad_test[2]*(C1*(x151*x64 + x169) + C2*(x155*x66 + x171))) + grad_trial[1]*(grad_test[0]*(C1*(x174*x9 + x183) + C2*(x178*x46 + x184)) + grad_test[1]*(C1*(x174*x55 + x177) + C2*(x178*x58 + x182)) + grad_test[2]*(C1*(x174*x64 + x186) + C2*(x178*x66 + x188))) + grad_trial[2]*(grad_test[0]*(C1*(x191*x9 + x199) + C2*(x195*x46 + x200)) + grad_test[1]*(C1*(x191*x55 + x201) + C2*(x195*x58 + x202)) + grad_test[2]*(C1*(x191*x64 + x194) + C2*(x195*x66 + x198))));
				bf[3] += dx*(grad_trial[0]*(grad_test[0]*(C1*(x25*x90 + x92) + C2*(x100 + x54*x96)) + grad_test[1]*(C1*(x119*x25 + x127) + C2*(x124*x54 + x129)) + grad_test[2]*(C1*(x137*x25 + x144) + C2*(x141*x54 + x146))) + grad_trial[1]*(grad_test[0]*(C1*(x105 + x72*x90) + C2*(x109 + x77*x96)) + grad_test[1]*(C1*(x119*x72 + x121) + C2*(x124*x77 + x126)) + grad_test[2]*(C1*(x137*x72 + x147) + C2*(x141*x77 + x148))) + grad_trial[2]*(grad_test[0]*(C1*(x112 + x84*x90) + C2*(x115 + x86*x96)) + grad_test[1]*(C1*(x119*x84 + x131) + C2*(x124*x86 + x133)) + grad_test[2]*(C1*(x137*x84 + x139) + C2*(x141*x86 + x143))));
				bf[4] += dx*(grad_trial[0]*(grad_test[0]*(C1*(x101*x106 + x7 + x89*x90) + C2*(2*x207*x96 + x32*(x204 + x206) + x93*x96)) + grad_test[1]*(C1*(x119*x89 + x208) + C2*(x124*x93 + x211)) + grad_test[2]*(C1*(x137*x89 + x212) + C2*(x141*x93 + x214))) + grad_trial[1]*(grad_test[0]*(C1*(x118*x90 + x208) + C2*(x122*x96 + x211)) + grad_test[1]*(C1*(x118*x119 + x120*x128 + x7) + C2*(x122*x124 + 2*x125*x217 + x32*(x204 + x216))) + grad_test[2]*(C1*(x118*x137 + x218) + C2*(x122*x141 + x221))) + grad_trial[2]*(grad_test[0]*(C1*(x136*x90 + x212) + C2*(x140*x96 + x214)) + grad_test[1]*(C1*(x119*x136 + x218) + C2*(x124*x140 + x221)) + grad_test[2]*(C1*(x136*x137 + x138*x145 + x7) + C2*(x140*x141 + 2*x141*x222 + x32*(x206 + x216)))));
				bf[5] += dx*(grad_trial[0]*(grad_test[0]*(C1*(x151*x90 + x223) + C2*(x155*x96 + x226)) + grad_test[1]*(C1*(x119*x151 + x228) + C2*(x124*x155 + x230)) + grad_test[2]*(C1*(x137*x151 + x232) + C2*(x141*x155 + x235))) + grad_trial[1]*(grad_test[0]*(C1*(x174*x90 + x239) + C2*(x178*x96 + x240)) + grad_test[1]*(C1*(x119*x174 + x236) + C2*(x124*x178 + x238)) + grad_test[2]*(C1*(x137*x174 + x242) + C2*(x141*x178 + x244))) + grad_trial[2]*(grad_test[0]*(C1*(x191*x90 + x247) + C2*(x195*x96 + x248)) + grad_test[1]*(C1*(x119*x191 + x249) + C2*(x124*x195 + x250)) + grad_test[2]*(C1*(x137*x191 + x245) + C2*(x141*x195 + x246))));
				bf[6] += dx*(grad_trial[0]*(grad_test[0]*(C1*(x152*x25 + x154) + C2*(x158*x54 + x162)) + grad_test[1]*(C1*(x175*x25 + x183) + C2*(x180*x54 + x184)) + grad_test[2]*(C1*(x192*x25 + x199) + C2*(x196*x54 + x200))) + grad_trial[1]*(grad_test[0]*(C1*(x152*x72 + x165) + C2*(x158*x77 + x167)) + grad_test[1]*(C1*(x175*x72 + x177) + C2*(x180*x77 + x182)) + grad_test[2]*(C1*(x192*x72 + x201) + C2*(x196*x77 + x202))) + grad_trial[2]*(grad_test[0]*(C1*(x152*x84 + x169) + C2*(x158*x86 + x171)) + grad_test[1]*(C1*(x175*x84 + x186) + C2*(x180*x86 + x188)) + grad_test[2]*(C1*(x192*x84 + x194) + C2*(x196*x86 + x198))));
				bf[7] += dx*(grad_trial[0]*(grad_test[0]*(C1*(x152*x89 + x223) + C2*(x158*x93 + x226)) + grad_test[1]*(C1*(x175*x89 + x239) + C2*(x180*x93 + x240)) + grad_test[2]*(C1*(x192*x89 + x247) + C2*(x196*x93 + x248))) + grad_trial[1]*(grad_test[0]*(C1*(x118*x152 + x228) + C2*(x122*x158 + x230)) + grad_test[1]*(C1*(x118*x175 + x236) + C2*(x122*x180 + x238)) + grad_test[2]*(C1*(x118*x192 + x249) + C2*(x122*x196 + x250))) + grad_trial[2]*(grad_test[0]*(C1*(x136*x152 + x232) + C2*(x140*x158 + x235)) + grad_test[1]*(C1*(x136*x175 + x242) + C2*(x140*x180 + x244)) + grad_test[2]*(C1*(x136*x192 + x245) + C2*(x140*x196 + x246))));
				bf[8] += dx*(grad_trial[0]*(grad_test[0]*(C1*(4*f[6]*x163 + x151*x152 + x7) + C2*(x155*x158 + 2*x161*x253 + x32*(x251 + x252))) + grad_test[1]*(C1*(x151*x175 + x254) + C2*(x155*x180 + x256)) + grad_test[2]*(C1*(x151*x192 + x257) + C2*(x155*x196 + x258))) + grad_trial[1]*(grad_test[0]*(C1*(x152*x174 + x254) + C2*(x158*x178 + x256)) + grad_test[1]*(C1*(4*f[7]*x176 + x174*x175 + x7) + C2*(x178*x180 + 2*x180*x260 + x32*(x251 + x259))) + grad_test[2]*(C1*(x174*x192 + x261) + C2*(x178*x196 + x263))) + grad_trial[2]*(grad_test[0]*(C1*(x152*x191 + x257) + C2*(x158*x195 + x258)) + grad_test[1]*(C1*(x175*x191 + x261) + C2*(x180*x195 + x263)) + grad_test[2]*(C1*(4*x102*x192 + x191*x192 + x7) + C2*(x195*x196 + 2*x196*x262 + x32*(x252 + x259)))));
			}

			UTOPIA_FUNCTION void gradient(
				const T *UTOPIA_RESTRICT f,
				const T *UTOPIA_RESTRICT grad_test,
				const T dx,
				T *UTOPIA_RESTRICT lf) const
			{
				using namespace utopia::device;
			    // Automatically generated
				T x0 = f[4]*f[8];
				T x1 = f[5]*f[6];
				T x2 = f[3]*f[7];
				T x3 = f[5]*f[7];
				T x4 = f[3]*f[8];
				T x5 = f[4]*f[6];
				T x6 = f[0]*x0 - f[0]*x3 + f[1]*x1 - f[1]*x4 + f[2]*x2 - f[2]*x5;
				T x7 = pow(x6, -2.0/3.0);
				T x8 = 2*f[0];
				T x9 = pow(f[0], 2) + pow(f[3], 2) + pow(f[6], 2);
				T x10 = pow(f[1], 2) + pow(f[4], 2) + pow(f[7], 2);
				T x11 = pow(f[2], 2) + pow(f[5], 2) + pow(f[8], 2);
				T x12 = x10 + x11 + x9;
				T x13 = x12/pow(x6, 5.0/3.0);
				T x14 = pow(x6, -4.0/3.0);
				T x15 = f[0]*f[1] + f[3]*f[4] + f[6]*f[7];
				T x16 = 2*f[1];
				T x17 = f[0]*f[2] + f[3]*f[5] + f[6]*f[8];
				T x18 = 2*f[2];
				T x19 = f[1]*f[2] + f[4]*f[5] + f[7]*f[8];
				T x20 = (-1.0/2.0*pow(x10, 2) - 1.0/2.0*pow(x11, 2) + (1.0/2.0)*pow(x12, 2) - pow(x15, 2) - pow(x17, 2) - pow(x19, 2) - 1.0/2.0*pow(x9, 2))/pow(x6, 7.0/3.0);
				T x21 = 2*f[3];
				T x22 = f[1]*f[8];
				T x23 = f[2]*f[7];
				T x24 = 2*f[4];
				T x25 = 2*f[5];
				T x26 = f[0]*f[8];
				T x27 = f[2]*f[6];
				T x28 = f[0]*f[7];
				T x29 = f[1]*f[6];
				T x30 = 2*f[6];
				T x31 = f[1]*f[5];
				T x32 = f[2]*f[4];
				T x33 = 2*f[7];
				T x34 = 2*f[8];
				T x35 = f[0]*f[5];
				T x36 = f[2]*f[3];
				T x37 = f[0]*f[4];
				T x38 = f[1]*f[3];
				lf[0] += dx*(grad_test[0]*(C1*(x13*(-2.0/3.0*x0 + (2.0/3.0)*x3) + x7*x8) + C2*(x14*(x12*x8 - x15*x16 - x17*x18 - x8*x9) + x20*(-4.0/3.0*x0 + (4.0/3.0)*x3))) + grad_test[1]*(C1*(x13*(-2.0/3.0*x1 + (2.0/3.0)*x4) + x16*x7) + C2*(x14*(-x10*x16 + x12*x16 - x15*x8 - x18*x19) + x20*(-4.0/3.0*x1 + (4.0/3.0)*x4))) + grad_test[2]*(C1*(x13*(-2.0/3.0*x2 + (2.0/3.0)*x5) + x18*x7) + C2*(x14*(-x11*x18 + x12*x18 - x16*x19 - x17*x8) + x20*(-4.0/3.0*x2 + (4.0/3.0)*x5))));
				lf[1] += dx*(grad_test[0]*(C1*(x13*((2.0/3.0)*x22 - 2.0/3.0*x23) + x21*x7) + C2*(x14*(x12*x21 - x15*x24 - x17*x25 - x21*x9) + x20*((4.0/3.0)*x22 - 4.0/3.0*x23))) + grad_test[1]*(C1*(x13*(-2.0/3.0*x26 + (2.0/3.0)*x27) + x24*x7) + C2*(x14*(-x10*x24 + x12*x24 - x15*x21 - x19*x25) + x20*(-4.0/3.0*x26 + (4.0/3.0)*x27))) + grad_test[2]*(C1*(x13*((2.0/3.0)*x28 - 2.0/3.0*x29) + x25*x7) + C2*(x14*(-x11*x25 + x12*x25 - x17*x21 - x19*x24) + x20*((4.0/3.0)*x28 - 4.0/3.0*x29))));
				lf[2] += dx*(grad_test[0]*(C1*(x13*(-2.0/3.0*x31 + (2.0/3.0)*x32) + x30*x7) + C2*(x14*(x12*x30 - x15*x33 - x17*x34 - x30*x9) + x20*(-4.0/3.0*x31 + (4.0/3.0)*x32))) + grad_test[1]*(C1*(x13*((2.0/3.0)*x35 - 2.0/3.0*x36) + x33*x7) + C2*(x14*(-x10*x33 + x12*x33 - x15*x30 - x19*x34) + x20*((4.0/3.0)*x35 - 4.0/3.0*x36))) + grad_test[2]*(C1*(x13*(-2.0/3.0*x37 + (2.0/3.0)*x38) + x34*x7) + C2*(x14*(-x11*x34 + x12*x34 - x17*x30 - x19*x33) + x20*(-4.0/3.0*x37 + (4.0/3.0)*x38))));
			}

			UTOPIA_FUNCTION void value(
				const T *UTOPIA_RESTRICT f,
				const T dx,
				T &e
				) const
			{
				using namespace utopia::device;
			    // Automatically generated
				T x0 = pow(f[0], 2) + pow(f[3], 2) + pow(f[6], 2);
				T x1 = pow(f[1], 2) + pow(f[4], 2) + pow(f[7], 2);
				T x2 = pow(f[2], 2) + pow(f[5], 2) + pow(f[8], 2);
				T x3 = x0 + x1 + x2;
				T x4 = f[0]*f[4]*f[8] - f[0]*f[5]*f[7] - f[1]*f[3]*f[8] + f[1]*f[5]*f[6] + f[2]*f[3]*f[7] - f[2]*f[4]*f[6];
				e += dx*(C1*(x3/pow(x4, 2.0/3.0) - 3) + C2*(-3 + (-1.0/2.0*pow(x0, 2) - 1.0/2.0*pow(x1, 2) - 1.0/2.0*pow(x2, 2) + (1.0/2.0)*pow(x3, 2) - pow(f[0]*f[1] + f[3]*f[4] + f[6]*f[7], 2) - pow(f[0]*f[2] + f[3]*f[5] + f[6]*f[8], 2) - pow(f[1]*f[2] + f[4]*f[5] + f[7]*f[8], 2))/pow(x4, 4.0/3.0)));
			}

			UTOPIA_FUNCTION void eval(
				const T *UTOPIA_RESTRICT f,
				const T *grad_test,
				const T *grad_trial,
				const T dx,
				T &e,
				T *UTOPIA_RESTRICT lf,
				T *UTOPIA_RESTRICT bf) const
			{
				using namespace utopia::device;
			    // Automatically generated
				T x0 = pow(f[0], 2);
				T x1 = pow(f[3], 2);
				T x2 = pow(f[6], 2);
				T x3 = x0 + x1 + x2;
				T x4 = pow(f[1], 2);
				T x5 = pow(f[4], 2);
				T x6 = pow(f[7], 2);
				T x7 = x4 + x5 + x6;
				T x8 = pow(f[2], 2);
				T x9 = pow(f[5], 2);
				T x10 = pow(f[8], 2);
				T x11 = x10 + x8 + x9;
				T x12 = x11 + x3 + x7;
				T x13 = f[4]*f[8];
				T x14 = f[5]*f[6];
				T x15 = f[3]*f[7];
				T x16 = f[5]*f[7];
				T x17 = f[3]*f[8];
				T x18 = f[4]*f[6];
				T x19 = f[0]*x13 - f[0]*x16 + f[1]*x14 - f[1]*x17 + f[2]*x15 - f[2]*x18;
				T x20 = pow(x19, -2.0/3.0);
				T x21 = pow(x19, -4.0/3.0);
				T x22 = f[0]*f[1];
				T x23 = f[3]*f[4];
				T x24 = f[6]*f[7];
				T x25 = x22 + x23 + x24;
				T x26 = f[0]*f[2];
				T x27 = f[3]*f[5];
				T x28 = f[6]*f[8];
				T x29 = x26 + x27 + x28;
				T x30 = f[1]*f[2];
				T x31 = f[4]*f[5];
				T x32 = f[7]*f[8];
				T x33 = x30 + x31 + x32;
				T x34 = -1.0/2.0*pow(x11, 2) + (1.0/2.0)*pow(x12, 2) - pow(x25, 2) - pow(x29, 2) - 1.0/2.0*pow(x3, 2) - pow(x33, 2) - 1.0/2.0*pow(x7, 2);
				T x35 = 2*x20;
				T x36 = -2.0/3.0*x13 + (2.0/3.0)*x16;
				T x37 = pow(x19, -5.0/3.0);
				T x38 = x12*x37;
				T x39 = 2*f[0];
				T x40 = 2*f[1];
				T x41 = 2*f[2];
				T x42 = x12*x39 - x25*x40 - x29*x41 - x3*x39;
				T x43 = -4.0/3.0*x13 + (4.0/3.0)*x16;
				T x44 = pow(x19, -7.0/3.0);
				T x45 = x34*x44;
				T x46 = -2.0/3.0*x14 + (2.0/3.0)*x17;
				T x47 = x12*x40 - x25*x39 - x33*x41 - x40*x7;
				T x48 = -4.0/3.0*x14 + (4.0/3.0)*x17;
				T x49 = -2.0/3.0*x15 + (2.0/3.0)*x18;
				T x50 = -x11*x41 + x12*x41 - x29*x39 - x33*x40;
				T x51 = -4.0/3.0*x15 + (4.0/3.0)*x18;
				T x52 = f[1]*f[8];
				T x53 = f[2]*f[7];
				T x54 = (2.0/3.0)*x52 - 2.0/3.0*x53;
				T x55 = 2*f[3];
				T x56 = 2*f[4];
				T x57 = 2*f[5];
				T x58 = x12*x55 - x25*x56 - x29*x57 - x3*x55;
				T x59 = (4.0/3.0)*x52 - 4.0/3.0*x53;
				T x60 = f[0]*f[8];
				T x61 = f[2]*f[6];
				T x62 = -2.0/3.0*x60 + (2.0/3.0)*x61;
				T x63 = x12*x56 - x25*x55 - x33*x57 - x56*x7;
				T x64 = -4.0/3.0*x60 + (4.0/3.0)*x61;
				T x65 = f[0]*f[7];
				T x66 = f[1]*f[6];
				T x67 = (2.0/3.0)*x65 - 2.0/3.0*x66;
				T x68 = -x11*x57 + x12*x57 - x29*x55 - x33*x56;
				T x69 = (4.0/3.0)*x65 - 4.0/3.0*x66;
				T x70 = f[1]*f[5];
				T x71 = f[2]*f[4];
				T x72 = -2.0/3.0*x70 + (2.0/3.0)*x71;
				T x73 = 2*f[6];
				T x74 = 2*f[7];
				T x75 = 2*f[8];
				T x76 = x12*x73 - x25*x74 - x29*x75 - x3*x73;
				T x77 = -4.0/3.0*x70 + (4.0/3.0)*x71;
				T x78 = f[0]*f[5];
				T x79 = f[2]*f[3];
				T x80 = (2.0/3.0)*x78 - 2.0/3.0*x79;
				T x81 = x12*x74 - x25*x73 - x33*x75 - x7*x74;
				T x82 = (4.0/3.0)*x78 - 4.0/3.0*x79;
				T x83 = f[0]*f[4];
				T x84 = f[1]*f[3];
				T x85 = -2.0/3.0*x83 + (2.0/3.0)*x84;
				T x86 = -x11*x75 + x12*x75 - x29*x73 - x33*x74;
				T x87 = -4.0/3.0*x83 + (4.0/3.0)*x84;
				T x88 = x36*x37;
				T x89 = x12/pow(x19, 8.0/3.0);
				T x90 = x89*(-5.0/3.0*x13 + (5.0/3.0)*x16);
				T x91 = 2*x9;
				T x92 = 2*x10;
				T x93 = x91 + x92;
				T x94 = 2*x5;
				T x95 = 2*x6;
				T x96 = x94 + x95;
				T x97 = x43*x44;
				T x98 = x34/pow(x19, 10.0/3.0);
				T x99 = x98*(-7.0/3.0*x13 + (7.0/3.0)*x16);
				T x100 = x37*x39;
				T x101 = x100*x46 + x40*x88;
				T x102 = -2*x23;
				T x103 = -2*x24;
				T x104 = x42*x44;
				T x105 = x104*x48 + x21*(x102 + x103) + x47*x97;
				T x106 = x100*x49 + x41*x88;
				T x107 = -2*x27;
				T x108 = -2*x28;
				T x109 = x104*x51 + x21*(x107 + x108) + x50*x97;
				T x110 = x37*x46;
				T x111 = x89*(-5.0/3.0*x14 + (5.0/3.0)*x17);
				T x112 = 2*x1;
				T x113 = 2*x2;
				T x114 = x112 + x113;
				T x115 = x44*x47;
				T x116 = x98*(-7.0/3.0*x14 + (7.0/3.0)*x17);
				T x117 = x37*x49;
				T x118 = x110*x41 + x117*x40;
				T x119 = -2*x31;
				T x120 = -2*x32;
				T x121 = x44*x48;
				T x122 = x115*x51 + x121*x50 + x21*(x119 + x120);
				T x123 = x89*(-5.0/3.0*x15 + (5.0/3.0)*x18);
				T x124 = x44*x50;
				T x125 = x98*(-7.0/3.0*x15 + (7.0/3.0)*x18);
				T x126 = x89*((5.0/3.0)*x52 - 5.0/3.0*x53);
				T x127 = x100*x54 + x55*x88;
				T x128 = x98*((7.0/3.0)*x52 - 7.0/3.0*x53);
				T x129 = -f[4]*x40;
				T x130 = -f[5]*x41;
				T x131 = x104*x59 + x21*(x129 + x130) + x58*x97;
				T x132 = x37*x54;
				T x133 = (2.0/3.0)*x38;
				T x134 = f[8]*x133;
				T x135 = x110*x55 + x132*x40 + x134;
				T x136 = (4.0/3.0)*x45;
				T x137 = f[8]*x136;
				T x138 = x115*x59 + x121*x58 + x137 + x21*(-f[4]*x39 + 4*x84);
				T x139 = f[7]*x133;
				T x140 = x117*x55 + x132*x41 - x139;
				T x141 = x44*x51;
				T x142 = f[7]*x136;
				T x143 = x124*x59 + x141*x58 - x142 + x21*(-f[5]*x39 + 4*x79);
				T x144 = x89*(-5.0/3.0*x60 + (5.0/3.0)*x61);
				T x145 = x37*x62;
				T x146 = x110*x56 + x145*x40;
				T x147 = x98*(-7.0/3.0*x60 + (7.0/3.0)*x61);
				T x148 = -f[3]*x39;
				T x149 = x115*x64 + x121*x63 + x21*(x130 + x148);
				T x150 = x100*x62 - x134 + x56*x88;
				T x151 = x104*x64 - x137 + x21*(-f[3]*x40 + 4*x83) + x63*x97;
				T x152 = f[6]*x133;
				T x153 = x117*x56 + x145*x41 + x152;
				T x154 = f[6]*x136;
				T x155 = x124*x64 + x141*x63 + x154 + x21*(-f[5]*x40 + 4*x71);
				T x156 = x89*((5.0/3.0)*x65 - 5.0/3.0*x66);
				T x157 = x37*x67;
				T x158 = x117*x57 + x157*x41;
				T x159 = x98*((7.0/3.0)*x65 - 7.0/3.0*x66);
				T x160 = x124*x69 + x141*x68 + x21*(x129 + x148);
				T x161 = x100*x67 + x139 + x57*x88;
				T x162 = x104*x69 + x142 + x21*(-f[3]*x41 + 4*x78) + x68*x97;
				T x163 = x110*x57 - x152 + x157*x40;
				T x164 = x115*x69 + x121*x68 - x154 + x21*(-f[4]*x41 + 4*x70);
				T x165 = x89*(-5.0/3.0*x70 + (5.0/3.0)*x71);
				T x166 = x100*x72 + x73*x88;
				T x167 = x98*(-7.0/3.0*x70 + (7.0/3.0)*x71);
				T x168 = -f[7]*x40;
				T x169 = -f[8]*x41;
				T x170 = x104*x77 + x21*(x168 + x169) + x76*x97;
				T x171 = x37*x72;
				T x172 = f[5]*x133;
				T x173 = x110*x73 + x171*x40 - x172;
				T x174 = f[5]*x136;
				T x175 = x115*x77 + x121*x76 - x174 + x21*(-f[7]*x39 + 4*x66);
				T x176 = f[4]*x133;
				T x177 = x117*x73 + x171*x41 + x176;
				T x178 = f[4]*x136;
				T x179 = x124*x77 + x141*x76 + x178 + x21*(-f[8]*x39 + 4*x61);
				T x180 = x89*((5.0/3.0)*x78 - 5.0/3.0*x79);
				T x181 = x37*x80;
				T x182 = x110*x74 + x181*x40;
				T x183 = x98*((7.0/3.0)*x78 - 7.0/3.0*x79);
				T x184 = -f[6]*x39;
				T x185 = x115*x82 + x121*x81 + x21*(x169 + x184);
				T x186 = x100*x80 + x172 + x74*x88;
				T x187 = x104*x82 + x174 + x21*(-f[6]*x40 + 4*x65) + x81*x97;
				T x188 = f[3]*x133;
				T x189 = x117*x74 + x181*x41 - x188;
				T x190 = f[3]*x136;
				T x191 = x124*x82 + x141*x81 - x190 + x21*(-f[8]*x40 + 4*x53);
				T x192 = x89*(-5.0/3.0*x83 + (5.0/3.0)*x84);
				T x193 = x37*x85;
				T x194 = x117*x75 + x193*x41;
				T x195 = x98*(-7.0/3.0*x83 + (7.0/3.0)*x84);
				T x196 = x124*x87 + x141*x86 + x21*(x168 + x184);
				T x197 = x100*x85 - x176 + x75*x88;
				T x198 = x104*x87 - x178 + x21*(-f[6]*x41 + 4*x60) + x86*x97;
				T x199 = x110*x75 + x188 + x193*x40;
				T x200 = x115*x87 + x121*x86 + x190 + x21*(-f[7]*x41 + 4*x52);
				T x201 = 2*x8;
				T x202 = x201 + x92;
				T x203 = 2*x4;
				T x204 = x203 + x95;
				T x205 = x44*x58;
				T x206 = x132*x56 + x145*x55;
				T x207 = -2*x22;
				T x208 = x44*x59;
				T x209 = x205*x64 + x208*x63 + x21*(x103 + x207);
				T x210 = x132*x57 + x157*x55;
				T x211 = -2*x26;
				T x212 = x205*x69 + x208*x68 + x21*(x108 + x211);
				T x213 = 2*x0;
				T x214 = x113 + x213;
				T x215 = x44*x64;
				T x216 = x145*x57 + x157*x56;
				T x217 = -2*x30;
				T x218 = x44*x63;
				T x219 = x21*(x120 + x217) + x215*x68 + x218*x69;
				T x220 = x44*x68;
				T x221 = x132*x73 + x171*x55;
				T x222 = -f[7]*x56;
				T x223 = -f[8]*x57;
				T x224 = x205*x77 + x208*x76 + x21*(x222 + x223);
				T x225 = f[2]*x133;
				T x226 = x145*x73 + x171*x56 + x225;
				T x227 = f[2]*x136;
				T x228 = x21*(-2*x15 + 4*x18) + x215*x76 + x218*x77 + x227;
				T x229 = f[1]*x133;
				T x230 = x157*x73 + x171*x57 - x229;
				T x231 = x44*x69;
				T x232 = f[1]*x136;
				T x233 = x21*(4*x14 - 2*x17) + x220*x77 + x231*x76 - x232;
				T x234 = x145*x74 + x181*x56;
				T x235 = -f[6]*x55;
				T x236 = x21*(x223 + x235) + x215*x81 + x218*x82;
				T x237 = x132*x74 + x181*x55 - x225;
				T x238 = x205*x82 + x208*x81 + x21*(4*x15 - 2*x18) - x227;
				T x239 = f[0]*x133;
				T x240 = x157*x74 + x181*x57 + x239;
				T x241 = f[0]*x136;
				T x242 = x21*(-2*x13 + 4*x16) + x220*x82 + x231*x81 + x241;
				T x243 = x157*x75 + x193*x57;
				T x244 = x21*(x222 + x235) + x220*x87 + x231*x86;
				T x245 = x132*x75 + x193*x55 + x229;
				T x246 = x205*x87 + x208*x86 + x21*(-2*x14 + 4*x17) + x232;
				T x247 = x145*x75 + x193*x56 - x239;
				T x248 = x21*(4*x13 - 2*x16) + x215*x86 + x218*x87 - x241;
				T x249 = x201 + x91;
				T x250 = x203 + x94;
				T x251 = x44*x77;
				T x252 = x171*x74 + x181*x73;
				T x253 = x44*x76;
				T x254 = x21*(x102 + x207) + x251*x81 + x253*x82;
				T x255 = x171*x75 + x193*x73;
				T x256 = x21*(x107 + x211) + x251*x86 + x253*x87;
				T x257 = x112 + x213;
				T x258 = x44*x81;
				T x259 = x181*x75 + x193*x74;
				T x260 = x44*x86;
				T x261 = x21*(x119 + x217) + x258*x87 + x260*x82;
				e += dx*(C1*(x12*x20 - 3) + C2*(x21*x34 - 3));
				lf[0] += dx*(grad_test[0]*(C1*(f[0]*x35 + x36*x38) + C2*(x21*x42 + x43*x45)) + grad_test[1]*(C1*(f[1]*x35 + x38*x46) + C2*(x21*x47 + x45*x48)) + grad_test[2]*(C1*(f[2]*x35 + x38*x49) + C2*(x21*x50 + x45*x51)));
				lf[1] += dx*(grad_test[0]*(C1*(f[3]*x35 + x38*x54) + C2*(x21*x58 + x45*x59)) + grad_test[1]*(C1*(f[4]*x35 + x38*x62) + C2*(x21*x63 + x45*x64)) + grad_test[2]*(C1*(f[5]*x35 + x38*x67) + C2*(x21*x68 + x45*x69)));
				lf[2] += dx*(grad_test[0]*(C1*(f[6]*x35 + x38*x72) + C2*(x21*x76 + x45*x77)) + grad_test[1]*(C1*(f[7]*x35 + x38*x80) + C2*(x21*x81 + x45*x82)) + grad_test[2]*(C1*(f[8]*x35 + x38*x85) + C2*(x21*x86 + x45*x87)));
				bf[0] += dx*(grad_trial[0]*(grad_test[0]*(C1*(4*f[0]*x88 + x35 + x36*x90) + C2*(x21*(x93 + x96) + 2*x42*x97 + x43*x99)) + grad_test[1]*(C1*(x101 + x46*x90) + C2*(x105 + x48*x99)) + grad_test[2]*(C1*(x106 + x49*x90) + C2*(x109 + x51*x99))) + grad_trial[1]*(grad_test[0]*(C1*(x101 + x111*x36) + C2*(x105 + x116*x43)) + grad_test[1]*(C1*(4*f[1]*x110 + x111*x46 + x35) + C2*(2*x115*x48 + x116*x48 + x21*(x114 + x93))) + grad_test[2]*(C1*(x111*x49 + x118) + C2*(x116*x51 + x122))) + grad_trial[2]*(grad_test[0]*(C1*(x106 + x123*x36) + C2*(x109 + x125*x43)) + grad_test[1]*(C1*(x118 + x123*x46) + C2*(x122 + x125*x48)) + grad_test[2]*(C1*(4*f[2]*x117 + x123*x49 + x35) + C2*(2*x124*x51 + x125*x51 + x21*(x114 + x96)))));
				bf[1] += dx*(grad_trial[0]*(grad_test[0]*(C1*(x126*x36 + x127) + C2*(x128*x43 + x131)) + grad_test[1]*(C1*(x126*x46 + x135) + C2*(x128*x48 + x138)) + grad_test[2]*(C1*(x126*x49 + x140) + C2*(x128*x51 + x143))) + grad_trial[1]*(grad_test[0]*(C1*(x144*x36 + x150) + C2*(x147*x43 + x151)) + grad_test[1]*(C1*(x144*x46 + x146) + C2*(x147*x48 + x149)) + grad_test[2]*(C1*(x144*x49 + x153) + C2*(x147*x51 + x155))) + grad_trial[2]*(grad_test[0]*(C1*(x156*x36 + x161) + C2*(x159*x43 + x162)) + grad_test[1]*(C1*(x156*x46 + x163) + C2*(x159*x48 + x164)) + grad_test[2]*(C1*(x156*x49 + x158) + C2*(x159*x51 + x160))));
				bf[2] += dx*(grad_trial[0]*(grad_test[0]*(C1*(x165*x36 + x166) + C2*(x167*x43 + x170)) + grad_test[1]*(C1*(x165*x46 + x173) + C2*(x167*x48 + x175)) + grad_test[2]*(C1*(x165*x49 + x177) + C2*(x167*x51 + x179))) + grad_trial[1]*(grad_test[0]*(C1*(x180*x36 + x186) + C2*(x183*x43 + x187)) + grad_test[1]*(C1*(x180*x46 + x182) + C2*(x183*x48 + x185)) + grad_test[2]*(C1*(x180*x49 + x189) + C2*(x183*x51 + x191))) + grad_trial[2]*(grad_test[0]*(C1*(x192*x36 + x197) + C2*(x195*x43 + x198)) + grad_test[1]*(C1*(x192*x46 + x199) + C2*(x195*x48 + x200)) + grad_test[2]*(C1*(x192*x49 + x194) + C2*(x195*x51 + x196))));
				bf[3] += dx*(grad_trial[0]*(grad_test[0]*(C1*(x127 + x54*x90) + C2*(x131 + x59*x99)) + grad_test[1]*(C1*(x150 + x62*x90) + C2*(x151 + x64*x99)) + grad_test[2]*(C1*(x161 + x67*x90) + C2*(x162 + x69*x99))) + grad_trial[1]*(grad_test[0]*(C1*(x111*x54 + x135) + C2*(x116*x59 + x138)) + grad_test[1]*(C1*(x111*x62 + x146) + C2*(x116*x64 + x149)) + grad_test[2]*(C1*(x111*x67 + x163) + C2*(x116*x69 + x164))) + grad_trial[2]*(grad_test[0]*(C1*(x123*x54 + x140) + C2*(x125*x59 + x143)) + grad_test[1]*(C1*(x123*x62 + x153) + C2*(x125*x64 + x155)) + grad_test[2]*(C1*(x123*x67 + x158) + C2*(x125*x69 + x160))));
				bf[4] += dx*(grad_trial[0]*(grad_test[0]*(C1*(4*f[3]*x132 + x126*x54 + x35) + C2*(x128*x59 + 2*x205*x59 + x21*(x202 + x204))) + grad_test[1]*(C1*(x126*x62 + x206) + C2*(x128*x64 + x209)) + grad_test[2]*(C1*(x126*x67 + x210) + C2*(x128*x69 + x212))) + grad_trial[1]*(grad_test[0]*(C1*(x144*x54 + x206) + C2*(x147*x59 + x209)) + grad_test[1]*(C1*(4*f[4]*x145 + x144*x62 + x35) + C2*(x147*x64 + x21*(x202 + x214) + 2*x215*x63)) + grad_test[2]*(C1*(x144*x67 + x216) + C2*(x147*x69 + x219))) + grad_trial[2]*(grad_test[0]*(C1*(x156*x54 + x210) + C2*(x159*x59 + x212)) + grad_test[1]*(C1*(x156*x62 + x216) + C2*(x159*x64 + x219)) + grad_test[2]*(C1*(4*f[5]*x157 + x156*x67 + x35) + C2*(x159*x69 + x21*(x204 + x214) + 2*x220*x69))));
				bf[5] += dx*(grad_trial[0]*(grad_test[0]*(C1*(x165*x54 + x221) + C2*(x167*x59 + x224)) + grad_test[1]*(C1*(x165*x62 + x226) + C2*(x167*x64 + x228)) + grad_test[2]*(C1*(x165*x67 + x230) + C2*(x167*x69 + x233))) + grad_trial[1]*(grad_test[0]*(C1*(x180*x54 + x237) + C2*(x183*x59 + x238)) + grad_test[1]*(C1*(x180*x62 + x234) + C2*(x183*x64 + x236)) + grad_test[2]*(C1*(x180*x67 + x240) + C2*(x183*x69 + x242))) + grad_trial[2]*(grad_test[0]*(C1*(x192*x54 + x245) + C2*(x195*x59 + x246)) + grad_test[1]*(C1*(x192*x62 + x247) + C2*(x195*x64 + x248)) + grad_test[2]*(C1*(x192*x67 + x243) + C2*(x195*x69 + x244))));
				bf[6] += dx*(grad_trial[0]*(grad_test[0]*(C1*(x166 + x72*x90) + C2*(x170 + x77*x99)) + grad_test[1]*(C1*(x186 + x80*x90) + C2*(x187 + x82*x99)) + grad_test[2]*(C1*(x197 + x85*x90) + C2*(x198 + x87*x99))) + grad_trial[1]*(grad_test[0]*(C1*(x111*x72 + x173) + C2*(x116*x77 + x175)) + grad_test[1]*(C1*(x111*x80 + x182) + C2*(x116*x82 + x185)) + grad_test[2]*(C1*(x111*x85 + x199) + C2*(x116*x87 + x200))) + grad_trial[2]*(grad_test[0]*(C1*(x123*x72 + x177) + C2*(x125*x77 + x179)) + grad_test[1]*(C1*(x123*x80 + x189) + C2*(x125*x82 + x191)) + grad_test[2]*(C1*(x123*x85 + x194) + C2*(x125*x87 + x196))));
				bf[7] += dx*(grad_trial[0]*(grad_test[0]*(C1*(x126*x72 + x221) + C2*(x128*x77 + x224)) + grad_test[1]*(C1*(x126*x80 + x237) + C2*(x128*x82 + x238)) + grad_test[2]*(C1*(x126*x85 + x245) + C2*(x128*x87 + x246))) + grad_trial[1]*(grad_test[0]*(C1*(x144*x72 + x226) + C2*(x147*x77 + x228)) + grad_test[1]*(C1*(x144*x80 + x234) + C2*(x147*x82 + x236)) + grad_test[2]*(C1*(x144*x85 + x247) + C2*(x147*x87 + x248))) + grad_trial[2]*(grad_test[0]*(C1*(x156*x72 + x230) + C2*(x159*x77 + x233)) + grad_test[1]*(C1*(x156*x80 + x240) + C2*(x159*x82 + x242)) + grad_test[2]*(C1*(x156*x85 + x243) + C2*(x159*x87 + x244))));
				bf[8] += dx*(grad_trial[0]*(grad_test[0]*(C1*(4*f[6]*x171 + x165*x72 + x35) + C2*(x167*x77 + x21*(x249 + x250) + 2*x251*x76)) + grad_test[1]*(C1*(x165*x80 + x252) + C2*(x167*x82 + x254)) + grad_test[2]*(C1*(x165*x85 + x255) + C2*(x167*x87 + x256))) + grad_trial[1]*(grad_test[0]*(C1*(x180*x72 + x252) + C2*(x183*x77 + x254)) + grad_test[1]*(C1*(4*f[7]*x181 + x180*x80 + x35) + C2*(x183*x82 + x21*(x249 + x257) + 2*x258*x82)) + grad_test[2]*(C1*(x180*x85 + x259) + C2*(x183*x87 + x261))) + grad_trial[2]*(grad_test[0]*(C1*(x192*x72 + x255) + C2*(x195*x77 + x256)) + grad_test[1]*(C1*(x192*x80 + x259) + C2*(x195*x82 + x261)) + grad_test[2]*(C1*(4*f[8]*x193 + x192*x85 + x35) + C2*(x195*x87 + x21*(x250 + x257) + 2*x260*x87))));
			}

			T C1{1.0};
			T C2{1.0};

		};
	}
}

#endif // UTOPIA_TPL_HYPERELASTICITY_MooneyRivlin_3_IMPL_hpp
